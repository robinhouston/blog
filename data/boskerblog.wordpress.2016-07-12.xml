<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2016-07-12 17:21"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>Bosker Blog</title>
<link>https://bosker.wordpress.com</link>
<description>Miscellaneous maundering</description>
<pubDate>Tue, 12 Jul 2016 17:21:41 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>https://bosker.wordpress.com</wp:base_blog_url>
<wp:author>
  <wp:author_login>bosker</wp:author_login>
  <wp:author_email>robin.houston@gmail.com</wp:author_email>
  <wp:author_display_name><![CDATA[Robin Houston]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:author>
<wp:category>
  <wp:term_id>1044</wp:term_id>
  <wp:category_nicename>chatter</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[chatter]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>819984</wp:term_id>
  <wp:category_nicename>kiln</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Kiln]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2200</wp:term_id>
  <wp:category_nicename>links</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Links]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>3582</wp:term_id>
  <wp:category_nicename>mathematics</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Mathematics]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>111526</wp:term_id>
  <wp:category_nicename>mazes</wp:category_nicename>
  <wp:category_parent>mathematics</wp:category_parent>
  <wp:cat_name><![CDATA[mazes]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>103</wp:term_id>
  <wp:category_nicename>news</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[news]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>36876</wp:term_id>
  <wp:category_nicename>speculation</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[speculation]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1</wp:term_id>
  <wp:category_nicename>uncategorized</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>3378</wp:term_id>
  <wp:category_nicename>algorithms</wp:category_nicename>
  <wp:category_parent>mathematics</wp:category_parent>
  <wp:cat_name><![CDATA[algorithms]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>17203993</wp:term_id>
  <wp:category_nicename>carbon-map</wp:category_nicename>
  <wp:category_parent>kiln</wp:category_parent>
  <wp:cat_name><![CDATA[Carbon Map]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>15333</wp:term_id>
  <wp:category_nicename>category-theory</wp:category_nicename>
  <wp:category_parent>mathematics</wp:category_parent>
  <wp:cat_name><![CDATA[category theory]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>3494</wp:term_id>
  <wp:category_nicename>complexity</wp:category_nicename>
  <wp:category_parent>mathematics</wp:category_parent>
  <wp:cat_name><![CDATA[complexity]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>644966</wp:term_id>
  <wp:category_nicename>fibonacci-numbers</wp:category_nicename>
  <wp:category_parent>mathematics</wp:category_parent>
  <wp:cat_name><![CDATA[Fibonacci numbers]]></wp:cat_name>
</wp:category>
<wp:tag>
  <wp:term_id>291</wp:term_id>
  <wp:tag_slug>apple</wp:tag_slug>
  <wp:tag_name><![CDATA[Apple]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1998056</wp:term_id>
  <wp:tag_slug>bezier</wp:tag_slug>
  <wp:tag_name><![CDATA[Bézier]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9311923</wp:term_id>
  <wp:tag_slug>bezier-curves</wp:tag_slug>
  <wp:tag_name><![CDATA[Bézier curves]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1656</wp:term_id>
  <wp:tag_slug>categories</wp:tag_slug>
  <wp:tag_name><![CDATA[categories]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>13704</wp:term_id>
  <wp:tag_slug>fibonacci</wp:tag_slug>
  <wp:tag_name><![CDATA[fibonacci]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>21</wp:term_id>
  <wp:tag_slug>games</wp:tag_slug>
  <wp:tag_name><![CDATA[games]]></wp:tag_name>
</wp:tag>
<generator>http://wordpress.com/</generator>
<image>
		<url>https://s2.wp.com/i/buttonw-com.png</url>
		<title>Bosker Blog</title>
		<link>https://bosker.wordpress.com</link>
	</image>
	<item>
  <title>PVS pullback</title>
  <link>https://bosker.wordpress.com/2006/06/14/on-poset-valued-sets/pvs-pullback/</link>
  <pubDate>Wed, 14 Jun 2006 14:58:02 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/pvs-pbk.png</guid>
  <description/>
  <content:encoded><![CDATA[Pullback diagram used in Poset-Valued Sets]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>11</wp:post_id>
  <wp:post_date>2006-06-14 14:58:02</wp:post_date>
  <wp:post_date_gmt>2006-06-14 14:58:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>pvs-pullback</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>12</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/pvs-pbk.png</wp:attachment_url>
</item>
<item>
  <title>Adjunction</title>
  <link>https://bosker.wordpress.com/2006/06/14/fun-with-rel/adjunction/</link>
  <pubDate>Wed, 14 Jun 2006 21:09:48 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/rel-adj.png</guid>
  <description/>
  <content:encoded><![CDATA[An adjunction]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>13</wp:post_id>
  <wp:post_date>2006-06-14 21:09:48</wp:post_date>
  <wp:post_date_gmt>2006-06-14 21:09:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjunction</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>14</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/rel-adj.png</wp:attachment_url>
</item>
<item>
  <title>Naturality of rho at I</title>
  <link>https://bosker.wordpress.com/2006/06/15/pares-observation/naturality-of-rho-at-i/</link>
  <pubDate>Thu, 15 Jun 2006 22:16:59 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/rho_nat.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>15</wp:post_id>
  <wp:post_date>2006-06-15 22:16:59</wp:post_date>
  <wp:post_date_gmt>2006-06-15 22:16:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>naturality-of-rho-at-i</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>17</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/rho_nat.png</wp:attachment_url>
</item>
<item>
  <title>lambda'</title>
  <link>https://bosker.wordpress.com/2006/06/15/pares-observation/lambda/</link>
  <pubDate>Thu, 15 Jun 2006 22:17:33 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/lambda_prime.png</guid>
  <description/>
  <content:encoded><![CDATA[Constructing a new left-unit isomorphism]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>16</wp:post_id>
  <wp:post_date>2006-06-15 22:17:33</wp:post_date>
  <wp:post_date_gmt>2006-06-15 22:17:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>lambda</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>17</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/lambda_prime.png</wp:attachment_url>
</item>
<item>
  <title>Equivalence</title>
  <link>https://bosker.wordpress.com/2006/06/15/pares-observation/equivalence/</link>
  <pubDate>Thu, 15 Jun 2006 22:27:27 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/equivalence.png</guid>
  <description/>
  <content:encoded><![CDATA[An equivalence f,g]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>18</wp:post_id>
  <wp:post_date>2006-06-15 22:27:27</wp:post_date>
  <wp:post_date_gmt>2006-06-15 22:27:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>equivalence</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>17</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/equivalence.png</wp:attachment_url>
</item>
<item>
  <title>Triangle condition</title>
  <link>https://bosker.wordpress.com/2006/06/19/kock-on-units/triangle-condition/</link>
  <pubDate>Mon, 19 Jun 2006 17:05:25 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/mon-triangle.png</guid>
  <description/>
  <content:encoded><![CDATA[The triangle condition for a monoidal category]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>19</wp:post_id>
  <wp:post_date>2006-06-19 17:05:25</wp:post_date>
  <wp:post_date_gmt>2006-06-19 17:05:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>triangle-condition</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>21</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/mon-triangle.png</wp:attachment_url>
</item>
<item>
  <title>How Kock defines lambda</title>
  <link>https://bosker.wordpress.com/2006/06/19/kock-on-units/how-kock-defines-lambda/</link>
  <pubDate>Mon, 19 Jun 2006 17:06:07 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/kock-lambda.png</guid>
  <description/>
  <content:encoded><![CDATA[How Kock defines lambda]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>20</wp:post_id>
  <wp:post_date>2006-06-19 17:06:07</wp:post_date>
  <wp:post_date_gmt>2006-06-19 17:06:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-kock-defines-lambda</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>21</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/kock-lambda.png</wp:attachment_url>
</item>
<item>
  <title>Kock’s condition</title>
  <link>https://bosker.wordpress.com/2006/06/19/kock-on-units/kock%e2%80%99s-condition/</link>
  <pubDate>Mon, 19 Jun 2006 17:28:42 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/kock-condition.png</guid>
  <description/>
  <content:encoded><![CDATA[Kock’s condition for a monoidal functor in terms of Saavedra units]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>22</wp:post_id>
  <wp:post_date>2006-06-19 17:28:42</wp:post_date>
  <wp:post_date_gmt>2006-06-19 17:28:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>kock%e2%80%99s-condition</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>21</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/kock-condition.png</wp:attachment_url>
</item>
<item>
  <title>Kock composite (left unit)</title>
  <link>https://bosker.wordpress.com/2006/06/19/kock-on-units/kock-composite-left-unit/</link>
  <pubDate>Mon, 19 Jun 2006 17:31:31 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/kock-comp-1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>23</wp:post_id>
  <wp:post_date>2006-06-19 17:31:31</wp:post_date>
  <wp:post_date_gmt>2006-06-19 17:31:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>kock-composite-left-unit</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>21</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/kock-comp-1.png</wp:attachment_url>
</item>
<item>
  <title>Kock composite (right unit)</title>
  <link>https://bosker.wordpress.com/2006/06/19/kock-on-units/kock-composite-right-unit/</link>
  <pubDate>Mon, 19 Jun 2006 17:31:50 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/kock-comp-2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>24</wp:post_id>
  <wp:post_date>2006-06-19 17:31:50</wp:post_date>
  <wp:post_date_gmt>2006-06-19 17:31:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>kock-composite-right-unit</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>21</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/kock-comp-2.png</wp:attachment_url>
</item>
<item>
  <title>Morphism of comma category</title>
  <link>https://bosker.wordpress.com/2006/06/22/radical-lax-monoidal-functors/morphism-of-comma-category/</link>
  <pubDate>Thu, 22 Jun 2006 13:40:57 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/comma-square.png</guid>
  <description/>
  <content:encoded><![CDATA[A morphism of the comma category C↓F]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>26</wp:post_id>
  <wp:post_date>2006-06-22 13:40:57</wp:post_date>
  <wp:post_date_gmt>2006-06-22 13:40:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>morphism-of-comma-category</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>27</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/comma-square.png</wp:attachment_url>
</item>
<item>
  <title>(f,1): (A,X,f) -&gt; (FX,X,1)</title>
  <link>https://bosker.wordpress.com/2006/06/22/radical-lax-monoidal-functors/f1-axf-fxx1/</link>
  <pubDate>Thu, 22 Jun 2006 16:44:47 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/comma-square-f.png</guid>
  <description/>
  <content:encoded><![CDATA[The arrow (f,1): (A,X,f) -&gt; (FX,X,1) is a morphism in the comma category]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>28</wp:post_id>
  <wp:post_date>2006-06-22 16:44:47</wp:post_date>
  <wp:post_date_gmt>2006-06-22 16:44:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>f1-axf-fxx1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>27</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/comma-square-f.png</wp:attachment_url>
</item>
<item>
  <title>(g,1): (B,Y,g) -&gt; (FY,Y,1)</title>
  <link>https://bosker.wordpress.com/2006/06/22/radical-lax-monoidal-functors/g1-byg-fyy1/</link>
  <pubDate>Thu, 22 Jun 2006 16:45:30 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/comma-square-g.png</guid>
  <description/>
  <content:encoded><![CDATA[The arrow (g,1): (B,Y,g) -&gt; (FY,Y,1) is a morphism in the comma category]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>29</wp:post_id>
  <wp:post_date>2006-06-22 16:45:30</wp:post_date>
  <wp:post_date_gmt>2006-06-22 16:45:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>g1-byg-fyy1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>27</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/comma-square-g.png</wp:attachment_url>
</item>
<item>
  <title>f tensor g</title>
  <link>https://bosker.wordpress.com/2006/06/22/radical-lax-monoidal-functors/f-tensor-g/</link>
  <pubDate>Thu, 22 Jun 2006 16:53:41 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/comma-square-fg.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>30</wp:post_id>
  <wp:post_date>2006-06-22 16:53:41</wp:post_date>
  <wp:post_date_gmt>2006-06-22 16:53:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>f-tensor-g</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>27</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/comma-square-fg.png</wp:attachment_url>
</item>
<item>
  <title>comma-phi-i2.png</title>
  <link>https://bosker.wordpress.com/2006/06/22/radical-lax-monoidal-functors/comma-phi-i2png/</link>
  <pubDate>Thu, 22 Jun 2006 18:59:38 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/comma-phi-i2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>31</wp:post_id>
  <wp:post_date>2006-06-22 18:59:38</wp:post_date>
  <wp:post_date_gmt>2006-06-22 18:59:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>comma-phi-i2png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>27</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/comma-phi-i2.png</wp:attachment_url>
</item>
<item>
  <title>comma-hk.png</title>
  <link>https://bosker.wordpress.com/2006/06/22/radical-lax-monoidal-functors/comma-hkpng/</link>
  <pubDate>Thu, 22 Jun 2006 19:26:55 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/comma-hk.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>32</wp:post_id>
  <wp:post_date>2006-06-22 19:26:55</wp:post_date>
  <wp:post_date_gmt>2006-06-22 19:26:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>comma-hkpng</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>27</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/comma-hk.png</wp:attachment_url>
</item>
<item>
  <title>comma-square-hk.png</title>
  <link>https://bosker.wordpress.com/2006/06/22/radical-lax-monoidal-functors/comma-square-hkpng/</link>
  <pubDate>Thu, 22 Jun 2006 19:52:22 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/comma-square-hk.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>33</wp:post_id>
  <wp:post_date>2006-06-22 19:52:22</wp:post_date>
  <wp:post_date_gmt>2006-06-22 19:52:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>comma-square-hkpng</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>27</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/comma-square-hk.png</wp:attachment_url>
</item>
<item>
  <title>comma-three-squares.png</title>
  <link>https://bosker.wordpress.com/2006/06/22/radical-lax-monoidal-functors/comma-three-squarespng/</link>
  <pubDate>Thu, 22 Jun 2006 19:52:33 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/files/2006/06/comma-three-squares.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>34</wp:post_id>
  <wp:post_date>2006-06-22 19:52:33</wp:post_date>
  <wp:post_date_gmt>2006-06-22 19:52:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>comma-three-squarespng</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>27</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2006/06/comma-three-squares.png</wp:attachment_url>
</item>
<item>
  <title>A tree</title>
  <link>https://bosker.wordpress.com/2007/07/03/games-i/a-tree/</link>
  <pubDate>Tue, 03 Jul 2007 16:08:38 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2007/07/tree.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>37</wp:post_id>
  <wp:post_date>2007-07-03 16:08:38</wp:post_date>
  <wp:post_date_gmt>2007-07-03 16:08:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>a-tree</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>36</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2007/07/tree.png</wp:attachment_url>
</item>
<item>
  <title>A tree</title>
  <link>https://bosker.wordpress.com/2007/07/03/games-i/a-tree-2/</link>
  <pubDate>Tue, 03 Jul 2007 16:08:58 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2007/07/tree.pdf</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>38</wp:post_id>
  <wp:post_date>2007-07-03 16:08:58</wp:post_date>
  <wp:post_date_gmt>2007-07-03 16:08:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>a-tree-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>36</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2007/07/tree.pdf</wp:attachment_url>
</item>
<item>
  <title>square-diagram.png</title>
  <link>https://bosker.wordpress.com/2007/07/05/games-ii/square-diagrampng/</link>
  <pubDate>Thu, 05 Jul 2007 16:54:43 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2007/07/square-diagram.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>50</wp:post_id>
  <wp:post_date>2007-07-05 16:54:43</wp:post_date>
  <wp:post_date_gmt>2007-07-05 16:54:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>square-diagrampng</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>48</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2007/07/square-diagram.png</wp:attachment_url>
</item>
<item>
  <title>triangle-diagram.png</title>
  <link>https://bosker.wordpress.com/2007/07/05/games-ii/triangle-diagrampng/</link>
  <pubDate>Thu, 05 Jul 2007 17:43:46 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2007/07/triangle-diagram.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>51</wp:post_id>
  <wp:post_date>2007-07-05 17:43:46</wp:post_date>
  <wp:post_date_gmt>2007-07-05 17:43:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>triangle-diagrampng</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>48</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2007/07/triangle-diagram.png</wp:attachment_url>
</item>
<item>
  <title>square-diagram.png</title>
  <link>https://bosker.wordpress.com/2007/07/05/games-ii/square-diagrampng-2/</link>
  <pubDate>Fri, 06 Jul 2007 13:27:13 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2007/07/square-diagram1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>52</wp:post_id>
  <wp:post_date>2007-07-06 13:27:13</wp:post_date>
  <wp:post_date_gmt>2007-07-06 13:27:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>square-diagrampng-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>48</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2007/07/square-diagram1.png</wp:attachment_url>
</item>
<item>
  <title>pentagon-diagram.png</title>
  <link>https://bosker.wordpress.com/2007/07/05/games-ii/pentagon-diagrampng/</link>
  <pubDate>Fri, 06 Jul 2007 13:49:23 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2007/07/pentagon-diagram.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>53</wp:post_id>
  <wp:post_date>2007-07-06 13:49:23</wp:post_date>
  <wp:post_date_gmt>2007-07-06 13:49:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>pentagon-diagrampng</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>48</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2007/07/pentagon-diagram.png</wp:attachment_url>
</item>
<item>
  <title>More curry</title>
  <link>https://bosker.wordpress.com/2009/05/24/bad-news-for-naive-sets/curry-restall/</link>
  <pubDate>Sun, 24 May 2009 10:58:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2009/05/curry-restall.pdf</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Another variant of Curry's paradox]]></excerpt:encoded>
  <wp:post_id>83</wp:post_id>
  <wp:post_date>2009-05-24 11:58:00</wp:post_date>
  <wp:post_date_gmt>2009-05-24 10:58:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>curry-restall</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>77</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2009/05/curry-restall.pdf</wp:attachment_url>
</item>
<item>
  <title>Joyal-games</title>
  <link>https://bosker.wordpress.com/joyal-games/</link>
  <pubDate>Wed, 29 Dec 2010 16:54:56 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2010/12/joyal-games.pdf</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>100</wp:post_id>
  <wp:post_date>2010-12-29 17:54:56</wp:post_date>
  <wp:post_date_gmt>2010-12-29 16:54:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>joyal-games</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2010/12/joyal-games.pdf</wp:attachment_url>
</item>
<item>
  <title>cropped-952923234_81906f8980_o.jpg</title>
  <link>https://bosker.wordpress.com/cropped-952923234_81906f8980_o-jpg/</link>
  <pubDate>Wed, 27 Apr 2011 21:16:26 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/04/cropped-952923234_81906f8980_o.jpg</guid>
  <description/>
  <content:encoded><![CDATA[http://bosker.files.wordpress.com/2011/04/cropped-952923234_81906f8980_o.jpg]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>105</wp:post_id>
  <wp:post_date>2011-04-27 22:16:26</wp:post_date>
  <wp:post_date_gmt>2011-04-27 21:16:26</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cropped-952923234_81906f8980_o-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/04/cropped-952923234_81906f8980_o.jpg</wp:attachment_url>
</item>
<item>
  <title>header.jpg</title>
  <link>https://bosker.wordpress.com/header-jpg/</link>
  <pubDate>Wed, 27 Apr 2011 21:38:30 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/04/header.jpg</guid>
  <description/>
  <content:encoded><![CDATA[http://bosker.files.wordpress.com/2011/04/header.jpg]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>107</wp:post_id>
  <wp:post_date>2011-04-27 22:38:30</wp:post_date>
  <wp:post_date_gmt>2011-04-27 21:38:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>header-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/04/header.jpg</wp:attachment_url>
</item>
<item>
  <title>All the 3x3 weave mazes</title>
  <link>https://bosker.wordpress.com/2011/04/27/112/all-the-3x3-weave-mazes/</link>
  <pubDate>Wed, 27 Apr 2011 21:52:01 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/04/all-the-3x3-weave-mazes.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>113</wp:post_id>
  <wp:post_date>2011-04-27 22:52:01</wp:post_date>
  <wp:post_date_gmt>2011-04-27 21:52:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>all-the-3x3-weave-mazes</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>112</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/04/all-the-3x3-weave-mazes.png</wp:attachment_url>
</item>
<item>
  <title>23x23-rb</title>
  <link>https://bosker.wordpress.com/2011/05/08/what%e2%80%99s-all-this-about-mazes-a-statement-of-intent/23x23-rb/</link>
  <pubDate>Sun, 08 May 2011 20:55:32 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/23x23-rb.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>187</wp:post_id>
  <wp:post_date>2011-05-08 21:55:32</wp:post_date>
  <wp:post_date_gmt>2011-05-08 20:55:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>23x23-rb</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>186</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/23x23-rb.png</wp:attachment_url>
</item>
<item>
  <title>tree-of-2x2</title>
  <link>https://bosker.wordpress.com/2011/05/10/random-access-to-mazes-plan-of-attack/tree-of-2x2/</link>
  <pubDate>Tue, 10 May 2011 07:42:22 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/tree-of-2x2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>205</wp:post_id>
  <wp:post_date>2011-05-10 08:42:22</wp:post_date>
  <wp:post_date_gmt>2011-05-10 07:42:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tree-of-2x2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>204</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/tree-of-2x2.png</wp:attachment_url>
</item>
<item>
  <title>tree-of-2x2-x</title>
  <link>https://bosker.wordpress.com/2011/05/10/random-access-to-mazes-plan-of-attack/tree-of-2x2-x/</link>
  <pubDate>Tue, 10 May 2011 09:19:28 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/tree-of-2x2-x.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>207</wp:post_id>
  <wp:post_date>2011-05-10 10:19:28</wp:post_date>
  <wp:post_date_gmt>2011-05-10 09:19:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tree-of-2x2-x</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>204</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/tree-of-2x2-x.png</wp:attachment_url>
</item>
<item>
  <title>maze-example-directed-br</title>
  <link>https://bosker.wordpress.com/2011/05/17/counting-mazes-before-we-begin/maze-example-directed-br/</link>
  <pubDate>Sat, 14 May 2011 23:20:21 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/maze-example-directed-br.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>266</wp:post_id>
  <wp:post_date>2011-05-15 00:20:21</wp:post_date>
  <wp:post_date_gmt>2011-05-14 23:20:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>maze-example-directed-br</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>263</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/maze-example-directed-br.png</wp:attachment_url>
</item>
<item>
  <title>maze-example-directed-tl</title>
  <link>https://bosker.wordpress.com/2011/05/17/counting-mazes-before-we-begin/maze-example-directed-tl/</link>
  <pubDate>Sat, 14 May 2011 23:20:24 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/maze-example-directed-tl.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>267</wp:post_id>
  <wp:post_date>2011-05-15 00:20:24</wp:post_date>
  <wp:post_date_gmt>2011-05-14 23:20:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>maze-example-directed-tl</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>263</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/maze-example-directed-tl.png</wp:attachment_url>
</item>
<item>
  <title>maze-example-undirected</title>
  <link>https://bosker.wordpress.com/2011/05/17/counting-mazes-before-we-begin/maze-example-undirected/</link>
  <pubDate>Sat, 14 May 2011 23:20:26 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/maze-example-undirected.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>268</wp:post_id>
  <wp:post_date>2011-05-15 00:20:26</wp:post_date>
  <wp:post_date_gmt>2011-05-14 23:20:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>maze-example-undirected</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>263</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/maze-example-undirected.png</wp:attachment_url>
</item>
<item>
  <title>maze-partial-3x3-graph</title>
  <link>https://bosker.wordpress.com/2011/05/17/counting-mazes-before-we-begin/maze-partial-3x3-graph/</link>
  <pubDate>Mon, 16 May 2011 22:49:37 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/maze-partial-3x3-graph.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>294</wp:post_id>
  <wp:post_date>2011-05-16 23:49:37</wp:post_date>
  <wp:post_date_gmt>2011-05-16 22:49:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>maze-partial-3x3-graph</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>263</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/maze-partial-3x3-graph.png</wp:attachment_url>
</item>
<item>
  <title>maze-partial-3x3</title>
  <link>https://bosker.wordpress.com/2011/05/17/counting-mazes-before-we-begin/maze-partial-3x3/</link>
  <pubDate>Mon, 16 May 2011 22:49:39 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/maze-partial-3x3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>295</wp:post_id>
  <wp:post_date>2011-05-16 23:49:39</wp:post_date>
  <wp:post_date_gmt>2011-05-16 22:49:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>maze-partial-3x3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>263</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/maze-partial-3x3.png</wp:attachment_url>
</item>
<item>
  <title>maze-partial-3x3-root-removed</title>
  <link>https://bosker.wordpress.com/2011/05/17/counting-mazes-before-we-begin/maze-partial-3x3-root-removed/</link>
  <pubDate>Mon, 16 May 2011 22:54:03 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/maze-partial-3x3-root-removed.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>296</wp:post_id>
  <wp:post_date>2011-05-16 23:54:03</wp:post_date>
  <wp:post_date_gmt>2011-05-16 22:54:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>maze-partial-3x3-root-removed</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>263</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/maze-partial-3x3-root-removed.png</wp:attachment_url>
</item>
<item>
  <title>1x1</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/1x1/</link>
  <pubDate>Tue, 17 May 2011 21:30:07 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/1x1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>315</wp:post_id>
  <wp:post_date>2011-05-17 22:30:07</wp:post_date>
  <wp:post_date_gmt>2011-05-17 21:30:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>1x1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/1x1.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours/</link>
  <pubDate>Tue, 17 May 2011 21:48:55 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>324</wp:post_id>
  <wp:post_date>2011-05-17 22:48:55</wp:post_date>
  <wp:post_date_gmt>2011-05-17 21:48:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour/</link>
  <pubDate>Tue, 17 May 2011 21:48:56 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>325</wp:post_id>
  <wp:post_date>2011-05-17 22:48:56</wp:post_date>
  <wp:post_date_gmt>2011-05-17 21:48:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours/</link>
  <pubDate>Tue, 17 May 2011 21:48:58 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>326</wp:post_id>
  <wp:post_date>2011-05-17 22:48:58</wp:post_date>
  <wp:post_date_gmt>2011-05-17 21:48:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours.png</wp:attachment_url>
</item>
<item>
  <title>two-adjacent-neighbours</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/two-adjacent-neighbours/</link>
  <pubDate>Tue, 17 May 2011 21:49:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/two-adjacent-neighbours.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>327</wp:post_id>
  <wp:post_date>2011-05-17 22:49:00</wp:post_date>
  <wp:post_date_gmt>2011-05-17 21:49:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>two-adjacent-neighbours</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/two-adjacent-neighbours.png</wp:attachment_url>
</item>
<item>
  <title>two-opposite-neighbours</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/two-opposite-neighbours/</link>
  <pubDate>Tue, 17 May 2011 21:49:02 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/two-opposite-neighbours.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>328</wp:post_id>
  <wp:post_date>2011-05-17 22:49:02</wp:post_date>
  <wp:post_date_gmt>2011-05-17 21:49:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>two-opposite-neighbours</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/two-opposite-neighbours.png</wp:attachment_url>
</item>
<item>
  <title>weave-h</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/weave-h/</link>
  <pubDate>Tue, 17 May 2011 21:49:03 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/weave-h.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>329</wp:post_id>
  <wp:post_date>2011-05-17 22:49:03</wp:post_date>
  <wp:post_date_gmt>2011-05-17 21:49:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>weave-h</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/weave-h.png</wp:attachment_url>
</item>
<item>
  <title>weave-v</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/weave-v/</link>
  <pubDate>Tue, 17 May 2011 21:49:05 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/weave-v.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>330</wp:post_id>
  <wp:post_date>2011-05-17 22:49:05</wp:post_date>
  <wp:post_date_gmt>2011-05-17 21:49:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>weave-v</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/weave-v.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-0</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-0/</link>
  <pubDate>Tue, 17 May 2011 22:05:12 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-0.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>333</wp:post_id>
  <wp:post_date>2011-05-17 23:05:12</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:05:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-0</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-0.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-1</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-1/</link>
  <pubDate>Tue, 17 May 2011 22:05:14 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>334</wp:post_id>
  <wp:post_date>2011-05-17 23:05:14</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:05:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-1.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-2</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-2/</link>
  <pubDate>Tue, 17 May 2011 22:05:16 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>335</wp:post_id>
  <wp:post_date>2011-05-17 23:05:16</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:05:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-2.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-3</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-3/</link>
  <pubDate>Tue, 17 May 2011 22:05:18 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>336</wp:post_id>
  <wp:post_date>2011-05-17 23:05:18</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:05:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-3.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-4</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-4/</link>
  <pubDate>Tue, 17 May 2011 22:05:19 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-4.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>337</wp:post_id>
  <wp:post_date>2011-05-17 23:05:19</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:05:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-4</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-4.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-5</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-5/</link>
  <pubDate>Tue, 17 May 2011 22:05:21 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-5.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>338</wp:post_id>
  <wp:post_date>2011-05-17 23:05:21</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:05:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-5</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-5.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-6</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-6/</link>
  <pubDate>Tue, 17 May 2011 22:05:23 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-6.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>339</wp:post_id>
  <wp:post_date>2011-05-17 23:05:23</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:05:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-6</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-6.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-7</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-7/</link>
  <pubDate>Tue, 17 May 2011 22:05:24 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-7.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>340</wp:post_id>
  <wp:post_date>2011-05-17 23:05:24</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:05:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-7</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-7.png</wp:attachment_url>
</item>
<item>
  <title>2x2-0</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/2x2-0/</link>
  <pubDate>Tue, 17 May 2011 22:43:19 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/2x2-01.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>348</wp:post_id>
  <wp:post_date>2011-05-17 23:43:19</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:43:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2x2-0</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/2x2-01.png</wp:attachment_url>
</item>
<item>
  <title>2x2-1</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/2x2-1/</link>
  <pubDate>Tue, 17 May 2011 22:43:21 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/2x2-11.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>349</wp:post_id>
  <wp:post_date>2011-05-17 23:43:21</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:43:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2x2-1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/2x2-11.png</wp:attachment_url>
</item>
<item>
  <title>2x2-2</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/2x2-2/</link>
  <pubDate>Tue, 17 May 2011 22:43:23 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/2x2-21.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>350</wp:post_id>
  <wp:post_date>2011-05-17 23:43:23</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:43:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2x2-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/2x2-21.png</wp:attachment_url>
</item>
<item>
  <title>2x2-3</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/2x2-3/</link>
  <pubDate>Tue, 17 May 2011 22:43:26 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/2x2-31.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>351</wp:post_id>
  <wp:post_date>2011-05-17 23:43:26</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:43:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2x2-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/2x2-31.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-0-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-0-r/</link>
  <pubDate>Tue, 17 May 2011 22:59:44 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-0-r.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>356</wp:post_id>
  <wp:post_date>2011-05-17 23:59:44</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:59:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-0-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-0-r.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-1-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-1-r/</link>
  <pubDate>Tue, 17 May 2011 22:59:46 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-1-r.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>357</wp:post_id>
  <wp:post_date>2011-05-17 23:59:46</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:59:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-1-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-1-r.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-2-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-2-r/</link>
  <pubDate>Tue, 17 May 2011 22:59:48 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-2-r.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>358</wp:post_id>
  <wp:post_date>2011-05-17 23:59:48</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:59:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-2-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-2-r.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-3-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-3-r/</link>
  <pubDate>Tue, 17 May 2011 22:59:51 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-3-r.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>359</wp:post_id>
  <wp:post_date>2011-05-17 23:59:51</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:59:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-3-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-3-r.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-4-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-4-r/</link>
  <pubDate>Tue, 17 May 2011 22:59:53 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-4-r.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>360</wp:post_id>
  <wp:post_date>2011-05-17 23:59:53</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:59:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-4-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-4-r.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-5-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-5-r/</link>
  <pubDate>Tue, 17 May 2011 22:59:56 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-5-r.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>361</wp:post_id>
  <wp:post_date>2011-05-17 23:59:56</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:59:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-5-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-5-r.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-6-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-6-r/</link>
  <pubDate>Tue, 17 May 2011 22:59:58 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-6-r.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>362</wp:post_id>
  <wp:post_date>2011-05-17 23:59:58</wp:post_date>
  <wp:post_date_gmt>2011-05-17 22:59:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-6-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-6-r.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-7-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-7-r/</link>
  <pubDate>Tue, 17 May 2011 23:00:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-7-r.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>363</wp:post_id>
  <wp:post_date>2011-05-18 00:00:00</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-7-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-7-r.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-0-b</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-0-b/</link>
  <pubDate>Tue, 17 May 2011 23:03:10 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-0-b.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>365</wp:post_id>
  <wp:post_date>2011-05-18 00:03:10</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-0-b</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-0-b.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-0-l</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-0-l/</link>
  <pubDate>Tue, 17 May 2011 23:03:12 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-0-l.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>366</wp:post_id>
  <wp:post_date>2011-05-18 00:03:12</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-0-l</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-0-l.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-1-b</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-1-b/</link>
  <pubDate>Tue, 17 May 2011 23:03:14 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-1-b.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>367</wp:post_id>
  <wp:post_date>2011-05-18 00:03:14</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-1-b</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-1-b.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-1-l</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-1-l/</link>
  <pubDate>Tue, 17 May 2011 23:03:15 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-1-l.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>368</wp:post_id>
  <wp:post_date>2011-05-18 00:03:15</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-1-l</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-1-l.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-2-b</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-2-b/</link>
  <pubDate>Tue, 17 May 2011 23:03:17 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-2-b.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>369</wp:post_id>
  <wp:post_date>2011-05-18 00:03:17</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-2-b</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-2-b.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-2-l</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-2-l/</link>
  <pubDate>Tue, 17 May 2011 23:03:19 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-2-l.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>370</wp:post_id>
  <wp:post_date>2011-05-18 00:03:19</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-2-l</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-2-l.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-3-b</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-3-b/</link>
  <pubDate>Tue, 17 May 2011 23:03:21 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-3-b.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>371</wp:post_id>
  <wp:post_date>2011-05-18 00:03:21</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-3-b</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-3-b.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-3-l</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-3-l/</link>
  <pubDate>Tue, 17 May 2011 23:03:23 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-3-l.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>372</wp:post_id>
  <wp:post_date>2011-05-18 00:03:23</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-3-l</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-3-l.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-4-b</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-4-b/</link>
  <pubDate>Tue, 17 May 2011 23:03:25 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-4-b.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>373</wp:post_id>
  <wp:post_date>2011-05-18 00:03:25</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-4-b</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-4-b.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-4-l</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-4-l/</link>
  <pubDate>Tue, 17 May 2011 23:03:28 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-4-l.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>374</wp:post_id>
  <wp:post_date>2011-05-18 00:03:28</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-4-l</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-4-l.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-5-b</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-5-b/</link>
  <pubDate>Tue, 17 May 2011 23:03:30 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-5-b.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>375</wp:post_id>
  <wp:post_date>2011-05-18 00:03:30</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-5-b</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-5-b.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-5-l</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-5-l/</link>
  <pubDate>Tue, 17 May 2011 23:03:32 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-5-l.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>376</wp:post_id>
  <wp:post_date>2011-05-18 00:03:32</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-5-l</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-5-l.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-6-b</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-6-b/</link>
  <pubDate>Tue, 17 May 2011 23:03:34 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-6-b.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>377</wp:post_id>
  <wp:post_date>2011-05-18 00:03:34</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-6-b</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-6-b.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-6-l</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-6-l/</link>
  <pubDate>Tue, 17 May 2011 23:03:36 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-6-l.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>378</wp:post_id>
  <wp:post_date>2011-05-18 00:03:36</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-6-l</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-6-l.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-7-b</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-7-b/</link>
  <pubDate>Tue, 17 May 2011 23:03:38 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-7-b.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>379</wp:post_id>
  <wp:post_date>2011-05-18 00:03:38</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-7-b</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-7-b.png</wp:attachment_url>
</item>
<item>
  <title>one-neighbour-7-l</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/one-neighbour-7-l/</link>
  <pubDate>Tue, 17 May 2011 23:03:40 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/one-neighbour-7-l.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>380</wp:post_id>
  <wp:post_date>2011-05-18 00:03:40</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:03:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>one-neighbour-7-l</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/one-neighbour-7-l.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-0-0</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-0-0/</link>
  <pubDate>Tue, 17 May 2011 23:39:31 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-0.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>384</wp:post_id>
  <wp:post_date>2011-05-18 00:39:31</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:39:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-0-0</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-0.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-0-1</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-0-1/</link>
  <pubDate>Tue, 17 May 2011 23:39:33 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>385</wp:post_id>
  <wp:post_date>2011-05-18 00:39:33</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:39:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-0-1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-0-2</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-0-2/</link>
  <pubDate>Tue, 17 May 2011 23:39:38 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>386</wp:post_id>
  <wp:post_date>2011-05-18 00:39:38</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:39:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-0-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-2.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-0-3</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-0-3/</link>
  <pubDate>Tue, 17 May 2011 23:39:39 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>387</wp:post_id>
  <wp:post_date>2011-05-18 00:39:39</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:39:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-0-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-3.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-0</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-0/</link>
  <pubDate>Tue, 17 May 2011 23:39:41 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>388</wp:post_id>
  <wp:post_date>2011-05-18 00:39:41</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:39:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-0</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-0.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-1-0</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-1-0/</link>
  <pubDate>Tue, 17 May 2011 23:39:43 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-0.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>389</wp:post_id>
  <wp:post_date>2011-05-18 00:39:43</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:39:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-1-0</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-0.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-1-1</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-1-1/</link>
  <pubDate>Tue, 17 May 2011 23:39:45 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>390</wp:post_id>
  <wp:post_date>2011-05-18 00:39:45</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:39:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-1-1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-1-2</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-1-2/</link>
  <pubDate>Tue, 17 May 2011 23:39:47 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>391</wp:post_id>
  <wp:post_date>2011-05-18 00:39:47</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:39:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-1-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-2.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-1-3</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-1-3/</link>
  <pubDate>Tue, 17 May 2011 23:39:48 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>392</wp:post_id>
  <wp:post_date>2011-05-18 00:39:48</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:39:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-1-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-3.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-1</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-1/</link>
  <pubDate>Tue, 17 May 2011 23:39:50 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>393</wp:post_id>
  <wp:post_date>2011-05-18 00:39:50</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:39:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-2-0</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-2-0/</link>
  <pubDate>Tue, 17 May 2011 23:39:52 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-0.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>394</wp:post_id>
  <wp:post_date>2011-05-18 00:39:52</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:39:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-2-0</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-0.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-2-1</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-2-1/</link>
  <pubDate>Tue, 17 May 2011 23:39:54 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>395</wp:post_id>
  <wp:post_date>2011-05-18 00:39:54</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:39:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-2-1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-2-2</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-2-2/</link>
  <pubDate>Tue, 17 May 2011 23:39:56 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>396</wp:post_id>
  <wp:post_date>2011-05-18 00:39:56</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:39:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-2-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-2.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-2-3</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-2-3/</link>
  <pubDate>Tue, 17 May 2011 23:39:58 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>397</wp:post_id>
  <wp:post_date>2011-05-18 00:39:58</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:39:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-2-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-3.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-2</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-2/</link>
  <pubDate>Tue, 17 May 2011 23:40:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>398</wp:post_id>
  <wp:post_date>2011-05-18 00:40:00</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:40:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-2.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-3-0</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-3-0/</link>
  <pubDate>Tue, 17 May 2011 23:40:02 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-0.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>399</wp:post_id>
  <wp:post_date>2011-05-18 00:40:02</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:40:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-3-0</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-0.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-3-1</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-3-1/</link>
  <pubDate>Tue, 17 May 2011 23:40:04 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>400</wp:post_id>
  <wp:post_date>2011-05-18 00:40:04</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:40:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-3-1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-3-2</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-3-2/</link>
  <pubDate>Tue, 17 May 2011 23:40:06 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>401</wp:post_id>
  <wp:post_date>2011-05-18 00:40:06</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:40:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-3-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-2.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-3-3</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-3-3/</link>
  <pubDate>Tue, 17 May 2011 23:40:08 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>402</wp:post_id>
  <wp:post_date>2011-05-18 00:40:08</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:40:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-3-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-3.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-3</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-3/</link>
  <pubDate>Tue, 17 May 2011 23:40:10 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>403</wp:post_id>
  <wp:post_date>2011-05-18 00:40:10</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:40:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-3.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours/</link>
  <pubDate>Tue, 17 May 2011 23:40:12 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>404</wp:post_id>
  <wp:post_date>2011-05-18 00:40:12</wp:post_date>
  <wp:post_date_gmt>2011-05-17 23:40:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-3-3-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-3-3-r/</link>
  <pubDate>Wed, 18 May 2011 00:03:23 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-3-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>428</wp:post_id>
  <wp:post_date>2011-05-18 01:03:23</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:03:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-3-3-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-3-r1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-0-0-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-0-0-r/</link>
  <pubDate>Wed, 18 May 2011 00:07:54 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-0-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>429</wp:post_id>
  <wp:post_date>2011-05-18 01:07:54</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:07:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-0-0-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-0-r1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-0-1-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-0-1-r/</link>
  <pubDate>Wed, 18 May 2011 00:07:56 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-1-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>430</wp:post_id>
  <wp:post_date>2011-05-18 01:07:56</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:07:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-0-1-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-1-r1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-0-2-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-0-2-r/</link>
  <pubDate>Wed, 18 May 2011 00:07:58 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-2-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>431</wp:post_id>
  <wp:post_date>2011-05-18 01:07:58</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:07:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-0-2-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-2-r1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-0-3-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-0-3-r/</link>
  <pubDate>Wed, 18 May 2011 00:08:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-3-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>432</wp:post_id>
  <wp:post_date>2011-05-18 01:08:00</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:08:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-0-3-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-3-r1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-1-0-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-1-0-r/</link>
  <pubDate>Wed, 18 May 2011 00:08:03 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-0-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>433</wp:post_id>
  <wp:post_date>2011-05-18 01:08:03</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:08:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-1-0-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-0-r1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-1-1-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-1-1-r/</link>
  <pubDate>Wed, 18 May 2011 00:08:05 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-1-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>434</wp:post_id>
  <wp:post_date>2011-05-18 01:08:05</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:08:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-1-1-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-1-r1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-1-2-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-1-2-r/</link>
  <pubDate>Wed, 18 May 2011 00:08:07 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-2-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>435</wp:post_id>
  <wp:post_date>2011-05-18 01:08:07</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:08:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-1-2-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-2-r1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-1-3-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-1-3-r/</link>
  <pubDate>Wed, 18 May 2011 00:08:09 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-3-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>436</wp:post_id>
  <wp:post_date>2011-05-18 01:08:09</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:08:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-1-3-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-3-r1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-2-0-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-2-0-r/</link>
  <pubDate>Wed, 18 May 2011 00:08:11 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-0-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>437</wp:post_id>
  <wp:post_date>2011-05-18 01:08:11</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:08:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-2-0-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-0-r1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-2-1-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-2-1-r/</link>
  <pubDate>Wed, 18 May 2011 00:08:13 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-1-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>438</wp:post_id>
  <wp:post_date>2011-05-18 01:08:13</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:08:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-2-1-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-1-r1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-2-2-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-2-2-r/</link>
  <pubDate>Wed, 18 May 2011 00:08:15 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-2-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>439</wp:post_id>
  <wp:post_date>2011-05-18 01:08:15</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:08:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-2-2-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-2-r1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-2-3-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-2-3-r/</link>
  <pubDate>Wed, 18 May 2011 00:08:17 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-3-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>440</wp:post_id>
  <wp:post_date>2011-05-18 01:08:17</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:08:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-2-3-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-3-r1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-3-0-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-3-0-r/</link>
  <pubDate>Wed, 18 May 2011 00:08:19 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-0-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>441</wp:post_id>
  <wp:post_date>2011-05-18 01:08:19</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:08:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-3-0-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-0-r1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-3-1-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-3-1-r/</link>
  <pubDate>Wed, 18 May 2011 00:08:21 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-1-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>442</wp:post_id>
  <wp:post_date>2011-05-18 01:08:21</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:08:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-3-1-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-1-r1.png</wp:attachment_url>
</item>
<item>
  <title>opposite-neighbours-3-2-r</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/opposite-neighbours-3-2-r/</link>
  <pubDate>Wed, 18 May 2011 00:08:23 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-2-r1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>443</wp:post_id>
  <wp:post_date>2011-05-18 01:08:23</wp:post_date>
  <wp:post_date_gmt>2011-05-18 00:08:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opposite-neighbours-3-2-r</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-2-r1.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-00</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-00/</link>
  <pubDate>Thu, 19 May 2011 11:41:10 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-00.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>459</wp:post_id>
  <wp:post_date>2011-05-19 12:41:10</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-00</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-00.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-0x</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-0x/</link>
  <pubDate>Thu, 19 May 2011 11:41:12 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-0x.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>460</wp:post_id>
  <wp:post_date>2011-05-19 12:41:12</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-0x</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-0x.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-01</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-01/</link>
  <pubDate>Thu, 19 May 2011 11:41:14 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-01.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>461</wp:post_id>
  <wp:post_date>2011-05-19 12:41:14</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-01</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-01.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-1x</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-1x/</link>
  <pubDate>Thu, 19 May 2011 11:41:16 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-1x.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>462</wp:post_id>
  <wp:post_date>2011-05-19 12:41:16</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-1x</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-1x.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-02</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-02/</link>
  <pubDate>Thu, 19 May 2011 11:41:19 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-02.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>463</wp:post_id>
  <wp:post_date>2011-05-19 12:41:19</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-02</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-02.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-03</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-03/</link>
  <pubDate>Thu, 19 May 2011 11:41:22 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-03.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>464</wp:post_id>
  <wp:post_date>2011-05-19 12:41:22</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-03</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-03.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-04</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-04/</link>
  <pubDate>Thu, 19 May 2011 11:41:25 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-04.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>465</wp:post_id>
  <wp:post_date>2011-05-19 12:41:25</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-04</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-04.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-05</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-05/</link>
  <pubDate>Thu, 19 May 2011 11:41:28 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-05.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>466</wp:post_id>
  <wp:post_date>2011-05-19 12:41:28</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-05</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-05.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-10</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-10/</link>
  <pubDate>Thu, 19 May 2011 11:41:31 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-10.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>467</wp:post_id>
  <wp:post_date>2011-05-19 12:41:31</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-10</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-10.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-11</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-11/</link>
  <pubDate>Thu, 19 May 2011 11:41:33 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-11.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>468</wp:post_id>
  <wp:post_date>2011-05-19 12:41:33</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-11</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-11.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-12</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-12/</link>
  <pubDate>Thu, 19 May 2011 11:41:36 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-12.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>469</wp:post_id>
  <wp:post_date>2011-05-19 12:41:36</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-12</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-12.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-13</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-13/</link>
  <pubDate>Thu, 19 May 2011 11:41:38 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-13.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>470</wp:post_id>
  <wp:post_date>2011-05-19 12:41:38</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-13</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-13.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-14</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-14/</link>
  <pubDate>Thu, 19 May 2011 11:41:41 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-14.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>471</wp:post_id>
  <wp:post_date>2011-05-19 12:41:41</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-14</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-14.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-15</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-15/</link>
  <pubDate>Thu, 19 May 2011 11:41:43 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-15.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>472</wp:post_id>
  <wp:post_date>2011-05-19 12:41:43</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-15</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-15.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-x0</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-x0/</link>
  <pubDate>Thu, 19 May 2011 11:41:46 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x0.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>473</wp:post_id>
  <wp:post_date>2011-05-19 12:41:46</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-x0</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x0.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-x1</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-x1/</link>
  <pubDate>Thu, 19 May 2011 11:41:48 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>474</wp:post_id>
  <wp:post_date>2011-05-19 12:41:48</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-x1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x1.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-x2</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-x2/</link>
  <pubDate>Thu, 19 May 2011 11:41:51 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>475</wp:post_id>
  <wp:post_date>2011-05-19 12:41:51</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-x2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x2.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-x3</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-x3/</link>
  <pubDate>Thu, 19 May 2011 11:41:53 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>476</wp:post_id>
  <wp:post_date>2011-05-19 12:41:53</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-x3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x3.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-x4</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-x4/</link>
  <pubDate>Thu, 19 May 2011 11:41:56 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x4.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>477</wp:post_id>
  <wp:post_date>2011-05-19 12:41:56</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-x4</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x4.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-x5</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-x5/</link>
  <pubDate>Thu, 19 May 2011 11:41:58 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x5.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>478</wp:post_id>
  <wp:post_date>2011-05-19 12:41:58</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:41:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-x5</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x5.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours/</link>
  <pubDate>Thu, 19 May 2011 11:42:01 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>479</wp:post_id>
  <wp:post_date>2011-05-19 12:42:01</wp:post_date>
  <wp:post_date_gmt>2011-05-19 11:42:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-bl-00</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-bl-00/</link>
  <pubDate>Thu, 19 May 2011 12:14:01 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-00.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>483</wp:post_id>
  <wp:post_date>2011-05-19 13:14:01</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-bl-00</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-00.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-bl-01</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-bl-01/</link>
  <pubDate>Thu, 19 May 2011 12:14:03 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-01.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>484</wp:post_id>
  <wp:post_date>2011-05-19 13:14:03</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-bl-01</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-01.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-bl-02</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-bl-02/</link>
  <pubDate>Thu, 19 May 2011 12:14:06 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-02.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>485</wp:post_id>
  <wp:post_date>2011-05-19 13:14:06</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-bl-02</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-02.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-bl-03</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-bl-03/</link>
  <pubDate>Thu, 19 May 2011 12:14:09 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-03.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>486</wp:post_id>
  <wp:post_date>2011-05-19 13:14:09</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-bl-03</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-03.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-bl-04</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-bl-04/</link>
  <pubDate>Thu, 19 May 2011 12:14:11 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-04.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>487</wp:post_id>
  <wp:post_date>2011-05-19 13:14:11</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-bl-04</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-04.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-bl-05</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-bl-05/</link>
  <pubDate>Thu, 19 May 2011 12:14:14 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-05.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>488</wp:post_id>
  <wp:post_date>2011-05-19 13:14:14</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-bl-05</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-05.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-bl-10</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-bl-10/</link>
  <pubDate>Thu, 19 May 2011 12:14:17 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-10.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>489</wp:post_id>
  <wp:post_date>2011-05-19 13:14:17</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-bl-10</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-10.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-bl-11</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-bl-11/</link>
  <pubDate>Thu, 19 May 2011 12:14:20 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-11.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>490</wp:post_id>
  <wp:post_date>2011-05-19 13:14:20</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-bl-11</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-11.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-bl-12</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-bl-12/</link>
  <pubDate>Thu, 19 May 2011 12:14:22 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-12.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>491</wp:post_id>
  <wp:post_date>2011-05-19 13:14:22</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-bl-12</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-12.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-bl-13</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-bl-13/</link>
  <pubDate>Thu, 19 May 2011 12:14:24 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-13.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>492</wp:post_id>
  <wp:post_date>2011-05-19 13:14:24</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-bl-13</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-13.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-bl-14</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-bl-14/</link>
  <pubDate>Thu, 19 May 2011 12:14:26 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-14.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>493</wp:post_id>
  <wp:post_date>2011-05-19 13:14:26</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-bl-14</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-14.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-bl-15</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-bl-15/</link>
  <pubDate>Thu, 19 May 2011 12:14:29 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-15.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>494</wp:post_id>
  <wp:post_date>2011-05-19 13:14:29</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-bl-15</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-15.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-rb-00</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-rb-00/</link>
  <pubDate>Thu, 19 May 2011 12:14:31 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-00.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>495</wp:post_id>
  <wp:post_date>2011-05-19 13:14:31</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-rb-00</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-00.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-rb-01</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-rb-01/</link>
  <pubDate>Thu, 19 May 2011 12:14:33 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-01.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>496</wp:post_id>
  <wp:post_date>2011-05-19 13:14:33</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-rb-01</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-01.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-rb-02</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-rb-02/</link>
  <pubDate>Thu, 19 May 2011 12:14:36 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-02.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>497</wp:post_id>
  <wp:post_date>2011-05-19 13:14:36</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-rb-02</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-02.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-rb-03</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-rb-03/</link>
  <pubDate>Thu, 19 May 2011 12:14:41 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-03.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>498</wp:post_id>
  <wp:post_date>2011-05-19 13:14:41</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-rb-03</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-03.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-rb-04</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-rb-04/</link>
  <pubDate>Thu, 19 May 2011 12:14:46 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-04.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>499</wp:post_id>
  <wp:post_date>2011-05-19 13:14:46</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-rb-04</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-04.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-rb-05</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-rb-05/</link>
  <pubDate>Thu, 19 May 2011 12:14:48 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-05.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>500</wp:post_id>
  <wp:post_date>2011-05-19 13:14:48</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-rb-05</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-05.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-rb-10</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-rb-10/</link>
  <pubDate>Thu, 19 May 2011 12:14:51 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-10.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>501</wp:post_id>
  <wp:post_date>2011-05-19 13:14:51</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-rb-10</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-10.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-rb-11</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-rb-11/</link>
  <pubDate>Thu, 19 May 2011 12:14:53 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-11.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>502</wp:post_id>
  <wp:post_date>2011-05-19 13:14:53</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-rb-11</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-11.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-rb-12</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-rb-12/</link>
  <pubDate>Thu, 19 May 2011 12:14:56 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-12.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>503</wp:post_id>
  <wp:post_date>2011-05-19 13:14:56</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-rb-12</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-12.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-rb-13</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-rb-13/</link>
  <pubDate>Thu, 19 May 2011 12:14:58 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-13.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>504</wp:post_id>
  <wp:post_date>2011-05-19 13:14:58</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:14:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-rb-13</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-13.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-rb-14</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-rb-14/</link>
  <pubDate>Thu, 19 May 2011 12:15:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-14.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>505</wp:post_id>
  <wp:post_date>2011-05-19 13:15:00</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:15:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-rb-14</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-14.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-rb-15</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-rb-15/</link>
  <pubDate>Thu, 19 May 2011 12:15:03 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-15.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>506</wp:post_id>
  <wp:post_date>2011-05-19 13:15:03</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:15:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-rb-15</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-15.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-tr-00</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-tr-00/</link>
  <pubDate>Thu, 19 May 2011 12:15:05 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-00.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>507</wp:post_id>
  <wp:post_date>2011-05-19 13:15:05</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:15:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-tr-00</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-00.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-tr-01</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-tr-01/</link>
  <pubDate>Thu, 19 May 2011 12:15:07 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-01.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>508</wp:post_id>
  <wp:post_date>2011-05-19 13:15:07</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:15:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-tr-01</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-01.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-tr-02</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-tr-02/</link>
  <pubDate>Thu, 19 May 2011 12:15:09 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-02.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>509</wp:post_id>
  <wp:post_date>2011-05-19 13:15:09</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:15:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-tr-02</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-02.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-tr-03</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-tr-03/</link>
  <pubDate>Thu, 19 May 2011 12:15:12 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-03.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>510</wp:post_id>
  <wp:post_date>2011-05-19 13:15:12</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:15:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-tr-03</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-03.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-tr-04</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-tr-04/</link>
  <pubDate>Thu, 19 May 2011 12:15:14 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-04.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>511</wp:post_id>
  <wp:post_date>2011-05-19 13:15:14</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:15:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-tr-04</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-04.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-tr-05</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-tr-05/</link>
  <pubDate>Thu, 19 May 2011 12:15:16 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-05.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>512</wp:post_id>
  <wp:post_date>2011-05-19 13:15:16</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:15:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-tr-05</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-05.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-tr-10</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-tr-10/</link>
  <pubDate>Thu, 19 May 2011 12:15:18 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-10.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>513</wp:post_id>
  <wp:post_date>2011-05-19 13:15:18</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:15:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-tr-10</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-10.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-tr-11</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-tr-11/</link>
  <pubDate>Thu, 19 May 2011 12:15:21 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-11.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>514</wp:post_id>
  <wp:post_date>2011-05-19 13:15:21</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:15:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-tr-11</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-11.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-tr-12</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-tr-12/</link>
  <pubDate>Thu, 19 May 2011 12:15:23 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-12.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>515</wp:post_id>
  <wp:post_date>2011-05-19 13:15:23</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:15:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-tr-12</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-12.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-tr-13</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-tr-13/</link>
  <pubDate>Thu, 19 May 2011 12:15:25 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-13.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>516</wp:post_id>
  <wp:post_date>2011-05-19 13:15:25</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:15:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-tr-13</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-13.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-tr-14</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-tr-14/</link>
  <pubDate>Thu, 19 May 2011 12:15:27 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-14.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>517</wp:post_id>
  <wp:post_date>2011-05-19 13:15:27</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:15:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-tr-14</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-14.png</wp:attachment_url>
</item>
<item>
  <title>adjacent-neighbours-tr-15</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/adjacent-neighbours-tr-15/</link>
  <pubDate>Thu, 19 May 2011 12:15:30 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-15.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>518</wp:post_id>
  <wp:post_date>2011-05-19 13:15:30</wp:post_date>
  <wp:post_date_gmt>2011-05-19 12:15:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adjacent-neighbours-tr-15</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-15.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-000</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-000/</link>
  <pubDate>Thu, 19 May 2011 13:00:07 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-000.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>523</wp:post_id>
  <wp:post_date>2011-05-19 14:00:07</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-000</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-000.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-001</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-001/</link>
  <pubDate>Thu, 19 May 2011 13:00:09 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-001.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>524</wp:post_id>
  <wp:post_date>2011-05-19 14:00:09</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-001</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-001.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-002</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-002/</link>
  <pubDate>Thu, 19 May 2011 13:00:11 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-002.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>525</wp:post_id>
  <wp:post_date>2011-05-19 14:00:11</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-002</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-002.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-003</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-003/</link>
  <pubDate>Thu, 19 May 2011 13:00:14 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-003.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>526</wp:post_id>
  <wp:post_date>2011-05-19 14:00:14</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-003</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-003.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-010</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-010/</link>
  <pubDate>Thu, 19 May 2011 13:00:16 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-010.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>527</wp:post_id>
  <wp:post_date>2011-05-19 14:00:16</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-010</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-010.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-011</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-011/</link>
  <pubDate>Thu, 19 May 2011 13:00:18 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-011.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>528</wp:post_id>
  <wp:post_date>2011-05-19 14:00:18</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-011</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-011.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-012</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-012/</link>
  <pubDate>Thu, 19 May 2011 13:00:21 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-012.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>529</wp:post_id>
  <wp:post_date>2011-05-19 14:00:21</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-012</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-012.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-013</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-013/</link>
  <pubDate>Thu, 19 May 2011 13:00:23 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-013.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>530</wp:post_id>
  <wp:post_date>2011-05-19 14:00:23</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-013</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-013.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-100</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-100/</link>
  <pubDate>Thu, 19 May 2011 13:00:26 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-100.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>531</wp:post_id>
  <wp:post_date>2011-05-19 14:00:26</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-100</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-100.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-101</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-101/</link>
  <pubDate>Thu, 19 May 2011 13:00:29 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-101.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>532</wp:post_id>
  <wp:post_date>2011-05-19 14:00:29</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-101</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-101.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-102</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-102/</link>
  <pubDate>Thu, 19 May 2011 13:00:32 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-102.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>533</wp:post_id>
  <wp:post_date>2011-05-19 14:00:32</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-102</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-102.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-103</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-103/</link>
  <pubDate>Thu, 19 May 2011 13:00:34 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-103.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>534</wp:post_id>
  <wp:post_date>2011-05-19 14:00:34</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-103</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-103.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-110</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-110/</link>
  <pubDate>Thu, 19 May 2011 13:00:37 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-110.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>535</wp:post_id>
  <wp:post_date>2011-05-19 14:00:37</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-110</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-110.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-111</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-111/</link>
  <pubDate>Thu, 19 May 2011 13:00:39 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-111.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>536</wp:post_id>
  <wp:post_date>2011-05-19 14:00:39</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-111</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-111.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-112</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-112/</link>
  <pubDate>Thu, 19 May 2011 13:00:41 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-112.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>537</wp:post_id>
  <wp:post_date>2011-05-19 14:00:41</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-112</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-112.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-113</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-113/</link>
  <pubDate>Thu, 19 May 2011 13:00:43 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-113.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>538</wp:post_id>
  <wp:post_date>2011-05-19 14:00:43</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-113</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-113.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-000</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-000/</link>
  <pubDate>Thu, 19 May 2011 13:00:46 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-000.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>539</wp:post_id>
  <wp:post_date>2011-05-19 14:00:46</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-000</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-000.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-001</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-001/</link>
  <pubDate>Thu, 19 May 2011 13:00:48 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-001.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>540</wp:post_id>
  <wp:post_date>2011-05-19 14:00:48</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-001</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-001.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-002</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-002/</link>
  <pubDate>Thu, 19 May 2011 13:00:50 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-002.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>541</wp:post_id>
  <wp:post_date>2011-05-19 14:00:50</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-002</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-002.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-003</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-003/</link>
  <pubDate>Thu, 19 May 2011 13:00:52 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-003.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>542</wp:post_id>
  <wp:post_date>2011-05-19 14:00:52</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-003</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-003.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-010</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-010/</link>
  <pubDate>Thu, 19 May 2011 13:00:54 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-010.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>543</wp:post_id>
  <wp:post_date>2011-05-19 14:00:54</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-010</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-010.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-011</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-011/</link>
  <pubDate>Thu, 19 May 2011 13:00:57 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-011.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>544</wp:post_id>
  <wp:post_date>2011-05-19 14:00:57</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-011</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-011.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-012</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-012/</link>
  <pubDate>Thu, 19 May 2011 13:00:59 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-012.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>545</wp:post_id>
  <wp:post_date>2011-05-19 14:00:59</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:00:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-012</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-012.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-013</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-013/</link>
  <pubDate>Thu, 19 May 2011 13:01:01 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-013.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>546</wp:post_id>
  <wp:post_date>2011-05-19 14:01:01</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-013</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-013.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-100</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-100/</link>
  <pubDate>Thu, 19 May 2011 13:01:03 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-100.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>547</wp:post_id>
  <wp:post_date>2011-05-19 14:01:03</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-100</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-100.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-101</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-101/</link>
  <pubDate>Thu, 19 May 2011 13:01:06 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-101.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>548</wp:post_id>
  <wp:post_date>2011-05-19 14:01:06</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-101</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-101.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-102</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-102/</link>
  <pubDate>Thu, 19 May 2011 13:01:08 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-102.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>549</wp:post_id>
  <wp:post_date>2011-05-19 14:01:08</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-102</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-102.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-103</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-103/</link>
  <pubDate>Thu, 19 May 2011 13:01:10 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-103.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>550</wp:post_id>
  <wp:post_date>2011-05-19 14:01:10</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-103</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-103.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-110</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-110/</link>
  <pubDate>Thu, 19 May 2011 13:01:13 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-110.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>551</wp:post_id>
  <wp:post_date>2011-05-19 14:01:13</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-110</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-110.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-111</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-111/</link>
  <pubDate>Thu, 19 May 2011 13:01:15 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-111.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>552</wp:post_id>
  <wp:post_date>2011-05-19 14:01:15</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-111</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-111.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-112</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-112/</link>
  <pubDate>Thu, 19 May 2011 13:01:18 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-112.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>553</wp:post_id>
  <wp:post_date>2011-05-19 14:01:18</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-112</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-112.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-b-113</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-b-113/</link>
  <pubDate>Thu, 19 May 2011 13:01:21 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-b-113.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>554</wp:post_id>
  <wp:post_date>2011-05-19 14:01:21</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-b-113</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-b-113.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-000</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-000/</link>
  <pubDate>Thu, 19 May 2011 13:01:23 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-000.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>555</wp:post_id>
  <wp:post_date>2011-05-19 14:01:23</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-000</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-000.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-001</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-001/</link>
  <pubDate>Thu, 19 May 2011 13:01:26 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-001.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>556</wp:post_id>
  <wp:post_date>2011-05-19 14:01:26</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-001</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-001.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-002</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-002/</link>
  <pubDate>Thu, 19 May 2011 13:01:29 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-002.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>557</wp:post_id>
  <wp:post_date>2011-05-19 14:01:29</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-002</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-002.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-003</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-003/</link>
  <pubDate>Thu, 19 May 2011 13:01:32 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-003.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>558</wp:post_id>
  <wp:post_date>2011-05-19 14:01:32</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-003</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-003.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-010</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-010/</link>
  <pubDate>Thu, 19 May 2011 13:01:34 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-010.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>559</wp:post_id>
  <wp:post_date>2011-05-19 14:01:34</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-010</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-010.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-011</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-011/</link>
  <pubDate>Thu, 19 May 2011 13:01:37 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-011.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>560</wp:post_id>
  <wp:post_date>2011-05-19 14:01:37</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-011</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-011.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-012</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-012/</link>
  <pubDate>Thu, 19 May 2011 13:01:39 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-012.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>561</wp:post_id>
  <wp:post_date>2011-05-19 14:01:39</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-012</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-012.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-013</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-013/</link>
  <pubDate>Thu, 19 May 2011 13:01:42 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-013.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>562</wp:post_id>
  <wp:post_date>2011-05-19 14:01:42</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-013</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-013.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-100</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-100/</link>
  <pubDate>Thu, 19 May 2011 13:01:44 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-100.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>563</wp:post_id>
  <wp:post_date>2011-05-19 14:01:44</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-100</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-100.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-101</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-101/</link>
  <pubDate>Thu, 19 May 2011 13:01:47 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-101.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>564</wp:post_id>
  <wp:post_date>2011-05-19 14:01:47</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-101</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-101.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-102</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-102/</link>
  <pubDate>Thu, 19 May 2011 13:01:50 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-102.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>565</wp:post_id>
  <wp:post_date>2011-05-19 14:01:50</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-102</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-102.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-103</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-103/</link>
  <pubDate>Thu, 19 May 2011 13:01:52 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-103.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>566</wp:post_id>
  <wp:post_date>2011-05-19 14:01:52</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-103</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-103.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-110</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-110/</link>
  <pubDate>Thu, 19 May 2011 13:01:54 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-110.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>567</wp:post_id>
  <wp:post_date>2011-05-19 14:01:54</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-110</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-110.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-111</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-111/</link>
  <pubDate>Thu, 19 May 2011 13:01:56 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-111.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>568</wp:post_id>
  <wp:post_date>2011-05-19 14:01:56</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-111</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-111.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-112</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-112/</link>
  <pubDate>Thu, 19 May 2011 13:01:59 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-112.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>569</wp:post_id>
  <wp:post_date>2011-05-19 14:01:59</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:01:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-112</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-112.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-l-113</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-l-113/</link>
  <pubDate>Thu, 19 May 2011 13:02:01 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-l-113.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>570</wp:post_id>
  <wp:post_date>2011-05-19 14:02:01</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-l-113</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-l-113.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-000</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-000/</link>
  <pubDate>Thu, 19 May 2011 13:02:04 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-000.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>571</wp:post_id>
  <wp:post_date>2011-05-19 14:02:04</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-000</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-000.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-001</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-001/</link>
  <pubDate>Thu, 19 May 2011 13:02:07 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-001.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>572</wp:post_id>
  <wp:post_date>2011-05-19 14:02:07</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-001</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-001.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-002</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-002/</link>
  <pubDate>Thu, 19 May 2011 13:02:10 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-002.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>573</wp:post_id>
  <wp:post_date>2011-05-19 14:02:10</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-002</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-002.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-003</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-003/</link>
  <pubDate>Thu, 19 May 2011 13:02:12 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-003.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>574</wp:post_id>
  <wp:post_date>2011-05-19 14:02:12</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-003</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-003.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-010</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-010/</link>
  <pubDate>Thu, 19 May 2011 13:02:14 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-010.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>575</wp:post_id>
  <wp:post_date>2011-05-19 14:02:14</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-010</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-010.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-011</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-011/</link>
  <pubDate>Thu, 19 May 2011 13:02:17 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-011.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>576</wp:post_id>
  <wp:post_date>2011-05-19 14:02:17</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-011</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-011.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-012</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-012/</link>
  <pubDate>Thu, 19 May 2011 13:02:20 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-012.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>577</wp:post_id>
  <wp:post_date>2011-05-19 14:02:20</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-012</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-012.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-013</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-013/</link>
  <pubDate>Thu, 19 May 2011 13:02:22 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-013.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>578</wp:post_id>
  <wp:post_date>2011-05-19 14:02:22</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-013</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-013.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-100</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-100/</link>
  <pubDate>Thu, 19 May 2011 13:02:24 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-100.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>579</wp:post_id>
  <wp:post_date>2011-05-19 14:02:24</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-100</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-100.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-101</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-101/</link>
  <pubDate>Thu, 19 May 2011 13:02:27 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-101.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>580</wp:post_id>
  <wp:post_date>2011-05-19 14:02:27</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-101</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-101.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-102</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-102/</link>
  <pubDate>Thu, 19 May 2011 13:02:29 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-102.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>581</wp:post_id>
  <wp:post_date>2011-05-19 14:02:29</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-102</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-102.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-103</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-103/</link>
  <pubDate>Thu, 19 May 2011 13:02:32 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-103.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>582</wp:post_id>
  <wp:post_date>2011-05-19 14:02:32</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-103</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-103.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-110</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-110/</link>
  <pubDate>Thu, 19 May 2011 13:02:35 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-110.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>583</wp:post_id>
  <wp:post_date>2011-05-19 14:02:35</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-110</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-110.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-111</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-111/</link>
  <pubDate>Thu, 19 May 2011 13:02:37 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-111.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>584</wp:post_id>
  <wp:post_date>2011-05-19 14:02:37</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-111</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-111.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-112</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-112/</link>
  <pubDate>Thu, 19 May 2011 13:02:40 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-112.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>585</wp:post_id>
  <wp:post_date>2011-05-19 14:02:40</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-112</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-112.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-r-113</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-r-113/</link>
  <pubDate>Thu, 19 May 2011 13:02:42 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-r-113.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>586</wp:post_id>
  <wp:post_date>2011-05-19 14:02:42</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:02:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-r-113</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-r-113.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-000</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-000-2/</link>
  <pubDate>Thu, 19 May 2011 13:04:46 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-0001.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>587</wp:post_id>
  <wp:post_date>2011-05-19 14:04:46</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:04:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-000-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-0001.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-001</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-001-2/</link>
  <pubDate>Thu, 19 May 2011 13:04:48 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-0011.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>588</wp:post_id>
  <wp:post_date>2011-05-19 14:04:48</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:04:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-001-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-0011.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-002</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-002-2/</link>
  <pubDate>Thu, 19 May 2011 13:04:51 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-0021.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>589</wp:post_id>
  <wp:post_date>2011-05-19 14:04:51</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:04:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-002-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-0021.png</wp:attachment_url>
</item>
<item>
  <title>three-neighbours-003</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/three-neighbours-003-2/</link>
  <pubDate>Thu, 19 May 2011 13:04:53 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/three-neighbours-0031.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>590</wp:post_id>
  <wp:post_date>2011-05-19 14:04:53</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:04:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>three-neighbours-003-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/three-neighbours-0031.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-0000</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-0000/</link>
  <pubDate>Thu, 19 May 2011 13:11:10 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-0000.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>592</wp:post_id>
  <wp:post_date>2011-05-19 14:11:10</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-0000</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-0000.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-0001</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-0001/</link>
  <pubDate>Thu, 19 May 2011 13:11:12 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-0001.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>593</wp:post_id>
  <wp:post_date>2011-05-19 14:11:12</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-0001</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-0001.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-0010</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-0010/</link>
  <pubDate>Thu, 19 May 2011 13:11:18 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-0010.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>594</wp:post_id>
  <wp:post_date>2011-05-19 14:11:18</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-0010</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-0010.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-0011</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-0011/</link>
  <pubDate>Thu, 19 May 2011 13:11:20 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-0011.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>595</wp:post_id>
  <wp:post_date>2011-05-19 14:11:20</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-0011</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-0011.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-0100</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-0100/</link>
  <pubDate>Thu, 19 May 2011 13:11:22 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-0100.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>596</wp:post_id>
  <wp:post_date>2011-05-19 14:11:22</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-0100</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-0100.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-0101</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-0101/</link>
  <pubDate>Thu, 19 May 2011 13:11:25 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-0101.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>597</wp:post_id>
  <wp:post_date>2011-05-19 14:11:25</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-0101</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-0101.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-0110</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-0110/</link>
  <pubDate>Thu, 19 May 2011 13:11:27 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-0110.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>598</wp:post_id>
  <wp:post_date>2011-05-19 14:11:27</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-0110</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-0110.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-0111</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-0111/</link>
  <pubDate>Thu, 19 May 2011 13:11:30 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-0111.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>599</wp:post_id>
  <wp:post_date>2011-05-19 14:11:30</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-0111</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-0111.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-1000</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-1000/</link>
  <pubDate>Thu, 19 May 2011 13:11:33 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-1000.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>600</wp:post_id>
  <wp:post_date>2011-05-19 14:11:33</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-1000</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-1000.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-1001</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-1001/</link>
  <pubDate>Thu, 19 May 2011 13:11:36 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-1001.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>601</wp:post_id>
  <wp:post_date>2011-05-19 14:11:36</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-1001</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-1001.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-1010</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-1010/</link>
  <pubDate>Thu, 19 May 2011 13:11:38 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-1010.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>602</wp:post_id>
  <wp:post_date>2011-05-19 14:11:38</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-1010</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-1010.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-1011</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-1011/</link>
  <pubDate>Thu, 19 May 2011 13:11:41 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-1011.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>603</wp:post_id>
  <wp:post_date>2011-05-19 14:11:41</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-1011</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-1011.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-1100</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-1100/</link>
  <pubDate>Thu, 19 May 2011 13:11:43 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-1100.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>604</wp:post_id>
  <wp:post_date>2011-05-19 14:11:43</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-1100</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-1100.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-1101</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-1101/</link>
  <pubDate>Thu, 19 May 2011 13:11:46 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-1101.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>605</wp:post_id>
  <wp:post_date>2011-05-19 14:11:46</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-1101</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-1101.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-1110</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-1110/</link>
  <pubDate>Thu, 19 May 2011 13:11:48 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-1110.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>606</wp:post_id>
  <wp:post_date>2011-05-19 14:11:48</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-1110</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-1110.png</wp:attachment_url>
</item>
<item>
  <title>four-neighbours-1111</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/four-neighbours-1111/</link>
  <pubDate>Thu, 19 May 2011 13:11:51 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/05/four-neighbours-1111.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>607</wp:post_id>
  <wp:post_date>2011-05-19 14:11:51</wp:post_date>
  <wp:post_date_gmt>2011-05-19 13:11:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>four-neighbours-1111</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>314</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/05/four-neighbours-1111.png</wp:attachment_url>
</item>
<item>
  <title>Computation time of Fibonacci numbers</title>
  <link>https://bosker.wordpress.com/2011/07/27/computing-fibonacci-numbers-using-binet%e2%80%99s-formula/linear-graph/</link>
  <pubDate>Sun, 24 Jul 2011 12:45:55 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/07/linear-graph.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>643</wp:post_id>
  <wp:post_date>2011-07-24 13:45:55</wp:post_date>
  <wp:post_date_gmt>2011-07-24 12:45:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>linear-graph</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>626</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/07/linear-graph.png</wp:attachment_url>
</item>
<item>
  <title>A log-log plot of the same data</title>
  <link>https://bosker.wordpress.com/2011/07/27/computing-fibonacci-numbers-using-binet%e2%80%99s-formula/graph-002/</link>
  <pubDate>Sun, 24 Jul 2011 17:56:46 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/07/graph-002.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>648</wp:post_id>
  <wp:post_date>2011-07-24 18:56:46</wp:post_date>
  <wp:post_date_gmt>2011-07-24 17:56:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>graph-002</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>626</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/07/graph-002.png</wp:attachment_url>
</item>
<item>
  <title>QuickTime Player’s File menu</title>
  <link>https://bosker.wordpress.com/2011/12/11/how-to-record-a-screencast-video-for-free-on-mac-os-x-10-7-lion/quicktime-players-file-menu/</link>
  <pubDate>Tue, 06 Dec 2011 23:57:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/12/quicktime-player_s-file-menu.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>681</wp:post_id>
  <wp:post_date>2011-12-07 00:57:00</wp:post_date>
  <wp:post_date_gmt>2011-12-06 23:57:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>quicktime-players-file-menu</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>680</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/12/quicktime-player_s-file-menu.png</wp:attachment_url>
</item>
<item>
  <title>screen-recording-window</title>
  <link>https://bosker.wordpress.com/2011/12/11/how-to-record-a-screencast-video-for-free-on-mac-os-x-10-7-lion/screen-recording-window/</link>
  <pubDate>Wed, 07 Dec 2011 09:56:32 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/12/screen-recording-window.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>685</wp:post_id>
  <wp:post_date>2011-12-07 10:56:32</wp:post_date>
  <wp:post_date_gmt>2011-12-07 09:56:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-recording-window</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>680</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/12/screen-recording-window.png</wp:attachment_url>
</item>
<item>
  <title>screen-recording-dropdown</title>
  <link>https://bosker.wordpress.com/2011/12/11/how-to-record-a-screencast-video-for-free-on-mac-os-x-10-7-lion/screen-recording-dropdown/</link>
  <pubDate>Wed, 07 Dec 2011 09:57:57 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/12/screen-recording-dropdown.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>686</wp:post_id>
  <wp:post_date>2011-12-07 10:57:57</wp:post_date>
  <wp:post_date_gmt>2011-12-07 09:57:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-recording-dropdown</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>680</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/12/screen-recording-dropdown.png</wp:attachment_url>
</item>
<item>
  <title>screen-recording-dropdown-closeup</title>
  <link>https://bosker.wordpress.com/2011/12/11/how-to-record-a-screencast-video-for-free-on-mac-os-x-10-7-lion/screen-recording-dropdown-closeup/</link>
  <pubDate>Thu, 08 Dec 2011 23:53:21 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/12/screen-recording-dropdown-closeup2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>694</wp:post_id>
  <wp:post_date>2011-12-09 00:53:21</wp:post_date>
  <wp:post_date_gmt>2011-12-08 23:53:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-recording-dropdown-closeup</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>680</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/12/screen-recording-dropdown-closeup2.png</wp:attachment_url>
</item>
<item>
  <title>sound-prefs</title>
  <link>https://bosker.wordpress.com/2011/12/11/how-to-record-a-screencast-video-for-free-on-mac-os-x-10-7-lion/sound-prefs/</link>
  <pubDate>Fri, 09 Dec 2011 12:47:50 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/12/sound-prefs.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>701</wp:post_id>
  <wp:post_date>2011-12-09 13:47:50</wp:post_date>
  <wp:post_date_gmt>2011-12-09 12:47:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sound-prefs</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>680</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/12/sound-prefs.png</wp:attachment_url>
</item>
<item>
  <title>jackpilot-window</title>
  <link>https://bosker.wordpress.com/2011/12/11/how-to-record-a-screencast-video-for-free-on-mac-os-x-10-7-lion/jackpilot-window/</link>
  <pubDate>Fri, 09 Dec 2011 23:57:50 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/12/jackpilot-window.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>706</wp:post_id>
  <wp:post_date>2011-12-10 00:57:50</wp:post_date>
  <wp:post_date_gmt>2011-12-09 23:57:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>jackpilot-window</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>680</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/12/jackpilot-window.png</wp:attachment_url>
</item>
<item>
  <title>jackpilot-routing</title>
  <link>https://bosker.wordpress.com/2011/12/11/how-to-record-a-screencast-video-for-free-on-mac-os-x-10-7-lion/jackpilot-routing/</link>
  <pubDate>Sat, 10 Dec 2011 23:55:15 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/12/jackpilot-routing.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>708</wp:post_id>
  <wp:post_date>2011-12-11 00:55:15</wp:post_date>
  <wp:post_date_gmt>2011-12-10 23:55:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>jackpilot-routing</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>680</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/12/jackpilot-routing.png</wp:attachment_url>
</item>
<item>
  <title>QuickTime Player’s File menu truncated</title>
  <link>https://bosker.wordpress.com/2011/12/11/how-to-record-a-screencast-video-for-free-on-mac-os-x-10-7-lion/quicktime-players-file-menu-truncated/</link>
  <pubDate>Tue, 13 Dec 2011 09:14:33 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2011/12/quicktime-player_s-file-menu-truncated.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>732</wp:post_id>
  <wp:post_date>2011-12-13 10:14:33</wp:post_date>
  <wp:post_date_gmt>2011-12-13 09:14:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>quicktime-players-file-menu-truncated</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>680</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2011/12/quicktime-player_s-file-menu-truncated.png</wp:attachment_url>
</item>
<item>
  <title>diag01</title>
  <link>https://bosker.wordpress.com/2012/05/10/on-editing-text/diag01/</link>
  <pubDate>Tue, 08 May 2012 22:43:31 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.files.wordpress.com/2012/05/diag01.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>762</wp:post_id>
  <wp:post_date>2012-05-08 23:43:31</wp:post_date>
  <wp:post_date_gmt>2012-05-08 22:43:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>diag01</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>759</wp:post_parent>
  <wp:menu_order>2</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/05/diag01.png</wp:attachment_url>
</item>
<item>
  <title>diag02</title>
  <link>https://bosker.wordpress.com/2012/05/10/on-editing-text/diag02/</link>
  <pubDate>Tue, 08 May 2012 22:43:33 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.files.wordpress.com/2012/05/diag02.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>763</wp:post_id>
  <wp:post_date>2012-05-08 23:43:33</wp:post_date>
  <wp:post_date_gmt>2012-05-08 22:43:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>diag02</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>759</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/05/diag02.png</wp:attachment_url>
</item>
<item>
  <title>diag03</title>
  <link>https://bosker.wordpress.com/2012/05/10/on-editing-text/diag03/</link>
  <pubDate>Tue, 08 May 2012 22:48:43 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.files.wordpress.com/2012/05/diag03.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>766</wp:post_id>
  <wp:post_date>2012-05-08 23:48:43</wp:post_date>
  <wp:post_date_gmt>2012-05-08 22:48:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>diag03</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>759</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/05/diag03.png</wp:attachment_url>
</item>
<item>
  <title>diag04</title>
  <link>https://bosker.wordpress.com/2012/05/10/on-editing-text/diag04/</link>
  <pubDate>Wed, 09 May 2012 13:50:07 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.files.wordpress.com/2012/05/diag04.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>775</wp:post_id>
  <wp:post_date>2012-05-09 14:50:07</wp:post_date>
  <wp:post_date_gmt>2012-05-09 13:50:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>diag04</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>759</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/05/diag04.png</wp:attachment_url>
</item>
<item>
  <title>The cat sat on the mat</title>
  <link>https://bosker.wordpress.com/2012/05/10/on-editing-text/screen-shot-2012-05-09-at-21-13-34/</link>
  <pubDate>Wed, 09 May 2012 20:14:04 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.files.wordpress.com/2012/05/screen-shot-2012-05-09-at-21-13-34.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>778</wp:post_id>
  <wp:post_date>2012-05-09 21:14:04</wp:post_date>
  <wp:post_date_gmt>2012-05-09 20:14:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2012-05-09-at-21-13-34</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>759</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/05/screen-shot-2012-05-09-at-21-13-34.png</wp:attachment_url>
</item>
<item>
  <title>the_cat_sat_on_the_mat</title>
  <link>https://bosker.wordpress.com/2012/05/10/on-editing-text/the_cat_sat_on_the_mat/</link>
  <pubDate>Wed, 09 May 2012 20:26:37 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.files.wordpress.com/2012/05/the_cat_sat_on_the_mat.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>779</wp:post_id>
  <wp:post_date>2012-05-09 21:26:37</wp:post_date>
  <wp:post_date_gmt>2012-05-09 20:26:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the_cat_sat_on_the_mat</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>759</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/05/the_cat_sat_on_the_mat.png</wp:attachment_url>
</item>
<item>
  <title>the_dogchicken_sat_on</title>
  <link>https://bosker.wordpress.com/2012/05/10/on-editing-text/the_dogchicken_sat_on/</link>
  <pubDate>Wed, 09 May 2012 20:27:14 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.files.wordpress.com/2012/05/the_dogchicken_sat_on.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>780</wp:post_id>
  <wp:post_date>2012-05-09 21:27:14</wp:post_date>
  <wp:post_date_gmt>2012-05-09 20:27:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the_dogchicken_sat_on</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>759</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/05/the_dogchicken_sat_on.png</wp:attachment_url>
</item>
<item>
  <title>Diffusion of population</title>
  <link>https://bosker.wordpress.com/2012/05/18/cartograms-and-the-carbon-map/population/</link>
  <pubDate>Fri, 18 May 2012 09:24:08 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2012/05/population.mp4</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[The process of diffusion is simulated, to generate a diffusion cartogram.]]></excerpt:encoded>
  <wp:post_id>804</wp:post_id>
  <wp:post_date>2012-05-18 10:24:08</wp:post_date>
  <wp:post_date_gmt>2012-05-18 09:24:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>population</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>802</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/05/population.mp4</wp:attachment_url>
</item>
<item>
  <title>Population diffusion with borders</title>
  <link>https://bosker.wordpress.com/2012/05/18/cartograms-and-the-carbon-map/populationoverlay/</link>
  <pubDate>Fri, 18 May 2012 10:26:15 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2012/05/populationoverlay.mp4</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>806</wp:post_id>
  <wp:post_date>2012-05-18 11:26:15</wp:post_date>
  <wp:post_date_gmt>2012-05-18 10:26:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>populationoverlay</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>802</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/05/populationoverlay.mp4</wp:attachment_url>
</item>
<item>
  <title>A black and a white pawn</title>
  <link>https://bosker.wordpress.com/2012/07/23/the-prisoners-dilemma/shutterstock_63184204/</link>
  <pubDate>Sun, 22 Jul 2012 10:02:15 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2012/07/shutterstock_63184204.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>817</wp:post_id>
  <wp:post_date>2012-07-22 11:02:15</wp:post_date>
  <wp:post_date_gmt>2012-07-22 10:02:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>shutterstock_63184204</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>813</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/07/shutterstock_63184204.jpg</wp:attachment_url>
</item>
<item>
  <title>Douglas Hofstadter</title>
  <link>https://bosker.wordpress.com/2012/07/23/the-prisoners-dilemma/hofstad/</link>
  <pubDate>Sun, 22 Jul 2012 10:09:43 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2012/07/hofstad.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>819</wp:post_id>
  <wp:post_date>2012-07-22 11:09:43</wp:post_date>
  <wp:post_date_gmt>2012-07-22 10:09:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>hofstad</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>813</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/07/hofstad.jpg</wp:attachment_url>
</item>
<item>
  <title>A Scottish village street</title>
  <link>https://bosker.wordpress.com/2012/07/23/the-prisoners-dilemma/shutterstock_1693059/</link>
  <pubDate>Sun, 22 Jul 2012 10:19:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2012/07/shutterstock_1693059.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[TTphoto / Shutterstock.com]]></excerpt:encoded>
  <wp:post_id>821</wp:post_id>
  <wp:post_date>2012-07-22 11:19:00</wp:post_date>
  <wp:post_date_gmt>2012-07-22 10:19:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>shutterstock_1693059</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>813</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/07/shutterstock_1693059.jpg</wp:attachment_url>
</item>
<item>
  <title>Robert Axelrod</title>
  <link>https://bosker.wordpress.com/2012/07/23/the-prisoners-dilemma/raxelrod/</link>
  <pubDate>Sun, 22 Jul 2012 11:05:03 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2012/07/raxelrod.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Robert Axelrod
photo: <a href="http://www-personal.umich.edu/~axe/">Robert Axelrod</a>]]></excerpt:encoded>
  <wp:post_id>823</wp:post_id>
  <wp:post_date>2012-07-22 12:05:03</wp:post_date>
  <wp:post_date_gmt>2012-07-22 11:05:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>raxelrod</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>813</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/07/raxelrod.jpg</wp:attachment_url>
</item>
<item>
  <title>Bill Press</title>
  <link>https://bosker.wordpress.com/2012/07/23/the-prisoners-dilemma/whpheadshot3/</link>
  <pubDate>Sun, 22 Jul 2012 11:48:57 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2012/07/whpheadshot3.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Bill Press]]></excerpt:encoded>
  <wp:post_id>824</wp:post_id>
  <wp:post_date>2012-07-22 12:48:57</wp:post_date>
  <wp:post_date_gmt>2012-07-22 11:48:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>whpheadshot3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>813</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/07/whpheadshot3.jpg</wp:attachment_url>
</item>
<item>
  <title>Freeman Dyson</title>
  <link>https://bosker.wordpress.com/2012/07/23/the-prisoners-dilemma/freeman_dyson/</link>
  <pubDate>Sun, 22 Jul 2012 11:50:24 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2012/07/freeman_dyson.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Freeman Dyson]]></excerpt:encoded>
  <wp:post_id>825</wp:post_id>
  <wp:post_date>2012-07-22 12:50:24</wp:post_date>
  <wp:post_date_gmt>2012-07-22 11:50:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>freeman_dyson</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>813</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/07/freeman_dyson.jpg</wp:attachment_url>
</item>
<item>
  <title>fpa</title>
  <link>https://bosker.wordpress.com/fpa/</link>
  <pubDate>Sun, 22 Jul 2012 12:58:08 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2012/07/fpa.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>839</wp:post_id>
  <wp:post_date>2012-07-22 13:58:08</wp:post_date>
  <wp:post_date_gmt>2012-07-22 12:58:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>fpa</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/07/fpa.jpg</wp:attachment_url>
</item>
<item>
  <title>all-the-3x3-weave-mazes</title>
  <link>https://bosker.wordpress.com/all-the-3x3-weave-mazes-2/</link>
  <pubDate>Sun, 22 Jul 2012 12:59:14 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2012/07/all-the-3x3-weave-mazes.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>840</wp:post_id>
  <wp:post_date>2012-07-22 13:59:14</wp:post_date>
  <wp:post_date_gmt>2012-07-22 12:59:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>all-the-3x3-weave-mazes-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/07/all-the-3x3-weave-mazes.png</wp:attachment_url>
</item>
<item>
  <title>blog-header</title>
  <link>https://bosker.wordpress.com/blog-header/</link>
  <pubDate>Sun, 22 Jul 2012 14:31:48 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2012/07/blog-header.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>841</wp:post_id>
  <wp:post_date>2012-07-22 15:31:48</wp:post_date>
  <wp:post_date_gmt>2012-07-22 14:31:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>blog-header</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/07/blog-header.png</wp:attachment_url>
</item>
<item>
  <title>blog-header</title>
  <link>https://bosker.wordpress.com/blog-header-2/</link>
  <pubDate>Sun, 22 Jul 2012 14:38:17 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2012/07/blog-header1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>842</wp:post_id>
  <wp:post_date>2012-07-22 15:38:17</wp:post_date>
  <wp:post_date_gmt>2012-07-22 14:38:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>blog-header-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/07/blog-header1.png</wp:attachment_url>
</item>
<item>
  <title>An elephant</title>
  <link>https://bosker.wordpress.com/2012/07/23/the-prisoners-dilemma/shutterstock_63563557/</link>
  <pubDate>Tue, 24 Jul 2012 09:10:21 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2012/07/shutterstock_63563557.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[photo: Warren Goldswain / Shutterstock.com]]></excerpt:encoded>
  <wp:post_id>856</wp:post_id>
  <wp:post_date>2012-07-24 10:10:21</wp:post_date>
  <wp:post_date_gmt>2012-07-24 09:10:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>shutterstock_63563557</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>813</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2012/07/shutterstock_63563557-e1343121271992.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_backup_sizes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:1000;s:6:"height";i:562;s:4:"file";s:25:"shutterstock_63563557.jpg";}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>board1</title>
  <link>https://bosker.wordpress.com/board1/</link>
  <pubDate>Tue, 12 Mar 2013 20:25:57 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/03/board1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>932</wp:post_id>
  <wp:post_date>2013-03-12 21:25:57</wp:post_date>
  <wp:post_date_gmt>2013-03-12 20:25:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>board1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/03/board1.png</wp:attachment_url>
</item>
<item>
  <title>board1-solved</title>
  <link>https://bosker.wordpress.com/2013/03/13/adrift-is-np-complete/board1-solved/</link>
  <pubDate>Tue, 12 Mar 2013 20:29:32 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/03/board1-solved.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>936</wp:post_id>
  <wp:post_date>2013-03-12 21:29:32</wp:post_date>
  <wp:post_date_gmt>2013-03-12 20:29:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>board1-solved</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>877</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/03/board1-solved.png</wp:attachment_url>
</item>
<item>
  <title>constraint-graph-example</title>
  <link>https://bosker.wordpress.com/2013/03/13/adrift-is-np-complete/constraint-graph-example/</link>
  <pubDate>Tue, 12 Mar 2013 22:36:05 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/03/constraint-graph-example.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>939</wp:post_id>
  <wp:post_date>2013-03-12 23:36:05</wp:post_date>
  <wp:post_date_gmt>2013-03-12 22:36:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>constraint-graph-example</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>877</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/03/constraint-graph-example.png</wp:attachment_url>
</item>
<item>
  <title>constraint-graph-example-solved</title>
  <link>https://bosker.wordpress.com/2013/03/13/adrift-is-np-complete/constraint-graph-example-solved/</link>
  <pubDate>Tue, 12 Mar 2013 22:48:26 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/03/constraint-graph-example-solved.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>941</wp:post_id>
  <wp:post_date>2013-03-12 23:48:26</wp:post_date>
  <wp:post_date_gmt>2013-03-12 22:48:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>constraint-graph-example-solved</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>877</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/03/constraint-graph-example-solved.png</wp:attachment_url>
</item>
<item>
  <title>OR-gadget-alone</title>
  <link>https://bosker.wordpress.com/2013/03/13/adrift-is-np-complete/or-gadget-alone/</link>
  <pubDate>Wed, 13 Mar 2013 01:52:16 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/03/or-gadget-alone.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>943</wp:post_id>
  <wp:post_date>2013-03-13 02:52:16</wp:post_date>
  <wp:post_date_gmt>2013-03-13 01:52:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>or-gadget-alone</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>877</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/03/or-gadget-alone.png</wp:attachment_url>
</item>
<item>
  <title>AND-gadgets-alone</title>
  <link>https://bosker.wordpress.com/2013/03/13/adrift-is-np-complete/and-gadgets-alone/</link>
  <pubDate>Wed, 13 Mar 2013 02:02:49 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/03/and-gadgets-alone.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>944</wp:post_id>
  <wp:post_date>2013-03-13 03:02:49</wp:post_date>
  <wp:post_date_gmt>2013-03-13 02:02:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>and-gadgets-alone</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>877</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/03/and-gadgets-alone.png</wp:attachment_url>
</item>
<item>
  <title>wire-gadget</title>
  <link>https://bosker.wordpress.com/2013/03/13/adrift-is-np-complete/wire-gadget/</link>
  <pubDate>Wed, 13 Mar 2013 02:08:41 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/03/wire-gadget.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>947</wp:post_id>
  <wp:post_date>2013-03-13 03:08:41</wp:post_date>
  <wp:post_date_gmt>2013-03-13 02:08:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wire-gadget</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>877</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/03/wire-gadget.png</wp:attachment_url>
</item>
<item>
  <title>wire-arrow-1</title>
  <link>https://bosker.wordpress.com/2013/03/13/adrift-is-np-complete/wire-arrow-1/</link>
  <pubDate>Wed, 13 Mar 2013 02:30:20 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/03/wire-arrow-11.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>952</wp:post_id>
  <wp:post_date>2013-03-13 03:30:20</wp:post_date>
  <wp:post_date_gmt>2013-03-13 02:30:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wire-arrow-1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>877</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/03/wire-arrow-11.png</wp:attachment_url>
</item>
<item>
  <title>wire-arrow-2</title>
  <link>https://bosker.wordpress.com/2013/03/13/adrift-is-np-complete/wire-arrow-2/</link>
  <pubDate>Wed, 13 Mar 2013 02:30:33 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/03/wire-arrow-21.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>953</wp:post_id>
  <wp:post_date>2013-03-13 03:30:33</wp:post_date>
  <wp:post_date_gmt>2013-03-13 02:30:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wire-arrow-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>877</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/03/wire-arrow-21.png</wp:attachment_url>
</item>
<item>
  <title>OR-gadget-with-inputs</title>
  <link>https://bosker.wordpress.com/2013/03/13/adrift-is-np-complete/or-gadget-with-inputs/</link>
  <pubDate>Wed, 13 Mar 2013 02:38:34 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/03/or-gadget-with-inputs.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>956</wp:post_id>
  <wp:post_date>2013-03-13 03:38:34</wp:post_date>
  <wp:post_date_gmt>2013-03-13 02:38:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>or-gadget-with-inputs</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>877</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/03/or-gadget-with-inputs.png</wp:attachment_url>
</item>
<item>
  <title>Hello, world!</title>
  <link>https://bosker.wordpress.com/2006/05/23/hello-world/</link>
  <pubDate>Tue, 23 May 2006 13:33:37 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false"/>
  <description/>
  <content:encoded><![CDATA[I thought it would be fun to start a "work" blog, where I can talk about things that I'm working on or would like to work on, or just think are cool and interesting. It remains to be seen whether I'll keep it up, so I'm starting out here on <a href="http://wordpress.com/">wordpress.com</a>. I'll move to a proper host later on, if that still seems like a good
idea.

My real reason for doing this is to have a forum for speculation. Mathematicians in general are reluctant to speculate, and wary of looking stupid. I don't want to look stupid either, of course, but refusing to talk about things I don't understand strikes me as too high a price to pay. (Also I seem to end up making a fool of myself in any case, so I may as well make a virtue of it. :-))

So this is intended to be a sort of public notebook, a repository for ideas that are too trivial or speculative to publish, and which I would otherwise just write on scraps of paper or forget about altogether. It will be interesting to see whether anyone reads it. I would love to read something of the sort written by someone else: am I the only one?

So welcome to bosker blog! Feel free to drop me a comment if you've stumbled across it somehow and you want to say hello.
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1</wp:post_id>
  <wp:post_date>2006-05-23 13:33:37</wp:post_date>
  <wp:post_date_gmt>2006-05-23 13:33:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>hello-world</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <category domain="category" nicename="news"><![CDATA[news]]></category>
  <wp:comment>
    <wp:comment_id>11</wp:comment_id>
    <wp:comment_author><![CDATA[Jon]]></wp:comment_author>
    <wp:comment_author_email>jonno.cohen@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://thatlogicblog.blogspot.com</wp:comment_author_url>
    <wp:comment_author_IP>218.185.94.226</wp:comment_author_IP>
    <wp:comment_date>2006-06-03 01:25:49</wp:comment_date>
    <wp:comment_date_gmt>2006-06-03 01:25:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Robin, nice blog you have here!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-03 01:25:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Unbiased bicategories and canonical choices</title>
  <link>https://bosker.wordpress.com/2006/05/23/unbiased-bicategories-and-canonical-choices/</link>
  <pubDate>Tue, 23 May 2006 15:42:57 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/2006/05/23/unbiased-bicategories-and-canonical-choices/</guid>
  <description/>
  <content:encoded><![CDATA[One of my favourite recent books is Tom Leinster's <a href="http://www.maths.gla.ac.uk/~tl/book.html">Higher Operads, Higher Categories</a>. Among the things I like about it is that he's not afraid to dwell on issues that are conventionally dismissed as trivial, such as the distinction between <i>classical</i> and <i>unbiased</i> monoidal categories and bicategories. The more I think about it, the more I think that the distinction deserves attention: perhaps I'll return to that in a future post.

There's a brief remark on p. 123, where he mentions one of the benefits of unbiased bicategories as compared to classical ones. Any bicategory <i>B</i> has a hom pseudo-functor <i>B<sup>op</sup>×B→Cat</i>; but defining its action on 1-cells requires a non-canonical choice, when working with classical bicategories. The pseudofunctor should take a pair (<i>f,g</i>) of arrows to the function <i>p ↦ gpf</i>, but classically there is no ternary composition, so we are forced to make an arbitrary choice to bracket this as either <i>g(pf)</i> or <i>(gp)f</i>.

Recently I needed to define the curried version of this pseudo-functor, which goes <i>B<sup>op</sup>→[B,Cat]</i>. I'm working with classical bicategories, but I didn't have to make any arbitrary choices in the definition. (Try it!) That didn't surprise me at the time, but in the context of Leinster’s remark it seems distinctly strange. It seems that the mere act of uncurrying has introduced some arbitrariness! And sure enough, if you try to define a biequivalence
<p class="center"><b>Bicat</b>(A×B,C) ≈ <b>Bicat</b>(A, [B,C]),</p>some arbitrary choice does seem to be needed to go from right to left. Suppose we have a pseudofunctor <i>F: A→[B,C]</i>, and denote its uncurried version <i>F': A×B→C</i>. How should we define <i>F'(f,g)</i>, for arrows <i>f: W→X</i> and <i>g: Y→Z</i>? Clearly it must be either <i>F(X)(g)⋅F(f)<sub>Y</sub></i> or <i>F(f)<sub>Z</sub>⋅F(W)(g)</i>, but neither choice is canonical. There is an invertible 2-cell <i>F(f)<sub>g</sub></i> between them, so in a sense it doesn’t matter which we choose, but still one of them must be chosen.

And it matters not a jot whether the bicategories are classical or unbiased; the problem stems from the way pseudo-natural transformations are defined. In the special case of the hom pseudofunctor, ternary composition provides a way out, but in general the difficulty remains.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3</wp:post_id>
  <wp:post_date>2006-05-23 15:42:57</wp:post_date>
  <wp:post_date_gmt>2006-05-23 15:42:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>unbiased-bicategories-and-canonical-choices</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:comment>
    <wp:comment_id>9</wp:comment_id>
    <wp:comment_author><![CDATA[Andrea]]></wp:comment_author>
    <wp:comment_author_email>A.Schalk@cs.manchester.ac.uk</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>130.88.199.197</wp:comment_author_IP>
    <wp:comment_date>2006-05-31 13:12:06</wp:comment_date>
    <wp:comment_date_gmt>2006-05-31 13:12:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I just thought you'd like to know that there's a trivial typo - your arrows (a,b) should be (f,g).]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-05-31 13:12:06</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>10</wp:comment_id>
    <wp:comment_author><![CDATA[bosker]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>130.88.0.141</wp:comment_author_IP>
    <wp:comment_date>2006-05-31 13:16:40</wp:comment_date>
    <wp:comment_date_gmt>2006-05-31 13:16:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Not any more! Thanks.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-05-31 13:16:40</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Speculating about n-categories</title>
  <link>https://bosker.wordpress.com/2006/05/27/speculating-about-n-categories/</link>
  <pubDate>Sat, 27 May 2006 11:47:35 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/2006/05/27/speculating-about-n-categories/</guid>
  <description/>
  <content:encoded><![CDATA[According to the stats I’ve already had one reader, so perhaps it's time for me to stick my neck out: this <a href="/tag/speculation/">speculation</a> tag is intended for things that might be utter nonsense, a fair proportion of which I shall no doubt be embarrassed to have written once I’ve realised what rubbish they are. The hope, of course, is that one or two might turn out to contain a useful idea. We shall see.

The theory of weak n-categories is very much in its infancy. (<a href="http://www.math.uchicago.edu/~may/NCATS/ForWeb.pdf">This</a> recent-ish project proposal paints a helpful picture of what has been, and what remains to be done.) A mature theory of n-categories ought at least to have definitions of ‘<em>n</em>-functor’ and the n different kinds of ‘transformation’ needed to define an (n+1)-category of n-categories. I'm not aware that any of the proposed definitions has such a thing, though I must confess that I have read only a small fraction of the relevant literature, so I could be mistaken in that. Once that is done, there is an obvious desideratum that I haven’t seen mentioned: a Yoneda theorem, which at the very least should show how, for any (n+1)-category <strong><em>C</em></strong> and (n+1)-functor <em>F: <strong>C</strong> → n-Cat</em>, to exhibit an appropriate equivalence
<p class="center">FA ≈ (n+1)-Cat(<strong>C</strong>, n-Cat)(<strong>C</strong>(A, -), F).</p>
I would imagine that such a theorem, together with a few supporting lemmas, would fairly readily yield a coherence theorem of the form “every weak n-category is equivalent to a semi-strict one”, along with a specification of what it means for an n-category to be semi-strict. It certainly works in dimensions two and three, as follows: the bicategorical Yoneda lemma shows that every bicategory <em><strong>B</strong></em> is biequivalent to its image in <em>[<strong>B</strong><sup>op</sup>, Cat]</em>, which is a 2-category (since <em>Cat</em> is). In dimension three, the tricategorical Yoneda lemma (I should really say <em>conjecture</em>, since I don't think there is a full proof yet) would show that every tricategory is triequivalent to one that is as strict as the full sub-tricategory of <strong>Bicat</strong> determined by the 2-categories. How strict is that? Well, I can easily convince myself that it's a Gray-category. It is surely not much of a stretch to conjecture that every weak 4-category is equivalent to one that’s as strict as the full sub-4-category of Tricat determined by the Gray-categories. It can’t be hard to figure out just how strict that is, can it? I think it’s locally a Gray-category, and horizontal composition is strictly associative with a strict unit, and is also strict in each argument separately.

[<em>See <a href="/2006/05/30/on-semi-strictness/" title="On semi-strictness">here</a> for an  update.</em>]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>4</wp:post_id>
  <wp:post_date>2006-05-27 11:47:35</wp:post_date>
  <wp:post_date_gmt>2006-05-27 11:47:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>speculating-about-n-categories</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="category" nicename="speculation"><![CDATA[speculation]]></category>
  <wp:comment>
    <wp:comment_id>2</wp:comment_id>
    <wp:comment_author><![CDATA[John Baez]]></wp:comment_author>
    <wp:comment_author_email>baez@math.ucr.edu</wp:comment_author_email>
    <wp:comment_author_url>http://math.ucr.edu/home/baez</wp:comment_author_url>
    <wp:comment_author_IP>216.16.237.110</wp:comment_author_IP>
    <wp:comment_date>2006-05-29 15:21:53</wp:comment_date>
    <wp:comment_date_gmt>2006-05-29 15:21:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi -

Glad to see you're blogging!

You've got my curiosity up, but there's no link here:

The theory of weak n-categories is very much in its infancy. (<a>This</a> recent-ish project proposal paints a helpful picture of what has been, and what remains to be done.)

Speculation is a great thing when done responsibly... i.e., when
one does ones damnedest to take into account all the facts and patterns.

Both James Dolan and I, and Ross Street and Brian Day, have broken our lances trying to create a general theory of "semistrict n-categories" based on a recursively defined notion of "Gray tensor product" for semistrict n-categories.  Our approaches were very similar; Day and Street called their gadgets "files".  Both our approaches break down right at tetracategories, and for the same reason - which I forget.  It was a long time ago.  

So, in fact it's much better to do as you suggest: look and see how the "nice" tricategories - namely Gray-categories - organize themselves into a "nice" tetracategory, and then make this into a definition of "semistrict tetracategory".  

However, I don't think you should look at the <i>full</i> sub-4-category of Tricat determined by the Gray-categories.  After all, that's not how it works one step down.  One looks, not at the full sub-3-category of Bicat determined by the (strict) 2-categories, but at:

[2-categories, strict functors, pseudonatural transformations, modifications]

<i>This</i> is what gives a Gray-category - the one called Gray!

(I keep asking if anyone has proved that Gray is triequivalent to Bicat - surely this must be the hope - but I must be asking the wrong people, because nobody has confessed to knowing the answer.)

I don't know if someone has found the "nice" tetracategory whose objects are Gray-categories.

Btw, you really should read Nick Gurski's thesis <i>Algebraic Tricategories</i> when it comes out - he said he'd put it on the arXiv.

Best,
jb]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-05-29 15:21:53</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3</wp:comment_id>
    <wp:comment_author><![CDATA[bosker]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>80.176.228.148</wp:comment_author_IP>
    <wp:comment_date>2006-05-29 22:49:23</wp:comment_date>
    <wp:comment_date_gmt>2006-05-29 22:49:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Wow! It’s scary how quickly you found my blog. Thanks for pointing out the missing link. I’ve fixed it, though I doubt you’ll learn much from it, since I assume you had a hand in writing it.

On speculation, it sounds as though you’re talking about the respectable kind of speculation, the sort that is written by bona fide experts and sometimes published in proper journals. (Your stabilization hypothesis is a fine example.) Of course I agree that this sort of speculation is wonderful, and I wish there were more of it. But I was also talking about the less respectable kind, that may not be sufficiently well-informed and which may be therefore be obviously wrong (or alternatively obviously trivial) to someone better-informed. This sort is dangerous, both because it can make the author look stupid and because it can be an excuse for intellectual laziness. Perhaps it’s simply a bad idea; I’m toying with the notion that maybe it isn’t so bad after all, provided it doesn’t pretend to be other than it is.

Now I’ve written all this waffle, and I haven’t addressed the serious part! It’s very interesting to learn that generalising Gray-categories doesn’t work in dimension four. (If you ever remember why not, I’d love to know.) In the morning, before I head to Manchester, I’ll write something about the real substance of your comment, maybe as a separate entry.

Thanks for letting me know about Nick Gurski’s thesis. I look forward to reading it!
]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-05-29 22:49:23</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>4</wp:comment_id>
    <wp:comment_author><![CDATA[David Corfield]]></wp:comment_author>
    <wp:comment_author_email>david.corfield@tuebingen.mpg.de</wp:comment_author_email>
    <wp:comment_author_url>http://www.dcorfield.pwp.blueyonder.co.uk/blog.html</wp:comment_author_url>
    <wp:comment_author_IP>82.47.145.27</wp:comment_author_IP>
    <wp:comment_date>2006-05-30 11:12:49</wp:comment_date>
    <wp:comment_date_gmt>2006-05-30 11:12:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Welcome to the blogosphere. Published mathematical speculation, as you suggest in another post, is far too rare. I believe that this is a part of an unhealthy unwillingness to reveal one's deeper thinking.

I doubt John's intending anything as restrictive as you suggest concerning speculation. After all he's participating in <a href="http://www.dcorfield.pwp.blueyonder.co.uk/2006/05/klein-2-geometry.html" rel="nofollow">this piece</a> of speculation with a miserable philosopher. I like his choice of the term 'responsibly'. It chimes with the philosophy of a rather neglected thinker called Michael Polanyi. The notion of the responsibility of a scientist allows him to isolate something universal in the thinking of a particular scientist, despite the specificity of their location in time, training, etc.: "Anyone in my situation should act like this."
 Speculation done with an honest appraisal of its likely value in view of what one understands to be one's level of informedness can't be harmful.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-05-30 11:12:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>5</wp:comment_id>
    <wp:comment_author><![CDATA[bosker]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>130.88.0.141</wp:comment_author_IP>
    <wp:comment_date>2006-05-30 16:33:42</wp:comment_date>
    <wp:comment_date_gmt>2006-05-30 16:33:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks! I'm delighted that you're here.

I intended no slight to John. I was just worried that I'm not “[doing] [my] damnedest to take into account all the facts and patterns”, and feeling a little guilty about it!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-05-30 16:33:42</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>6</wp:comment_id>
    <wp:comment_author><![CDATA[Bosker Blog &raquo; Blog Archive &raquo; On semi-strictness]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://bosker.wordpress.com/2006/05/30/on-semi-strictness/</wp:comment_author_url>
    <wp:comment_author_IP>72.232.101.7</wp:comment_author_IP>
    <wp:comment_date>2006-05-30 17:50:35</wp:comment_date>
    <wp:comment_date_gmt>2006-05-30 17:50:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] I had a couple of very interesting responses to my speculation about n-categories. As well as John Baez’s comment, I had an email from Tom Leinster pointing out his Structures in higher-dimensional category theory, whose section III.7 contains a similar conjecture. [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-05-30 17:50:35</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Calgary</title>
  <link>https://bosker.wordpress.com/2006/05/28/calgary/</link>
  <pubDate>Sun, 28 May 2006 22:15:54 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/2006/05/28/calgary/</guid>
  <description/>
  <content:encoded><![CDATA[Next week I'm off to Calgary, where I'm giving a <a href="http://www.math.ca/Events/summer06/abs/ct.html#rh">talk</a> at the category theory session of the Canadian Mathematical Society’s summer meeting, and then a (completely different) talk at <a href="http://pages.cpsc.ucalgary.ca/~robin/FMCS/FMCS_06/FMCS06.html">FMCS</a>. I’m not <i>too</i> worried about the FMCS talk, because I’ve been to a few theoretical computer science meetings before so I reckon I know roughly what to expect. My <a href="http://arxiv.org/abs/math.CT/0604542">topic</a> is reassuring too: it’s simple enough that I’ll have time to explain it pretty carefully in half an hour, yet unexpected enough to be interesting, and reasonably relevant to at least one <a href="http://se10.comlab.ox.ac.uk:8080/BobCoecke/Maintopic_en.html">area</a> of computer science.

The CMS meeting is a different matter. I’ve never even attended a purely mathematical conference, and I confess I’m feeling rather daunted at the prospect of talking at a meeting that includes so many eminent category theorists who I’ve never met. Also my topic is a bit more off-the-wall, though at least there’s a bit more substance to it now than when I wrote the abstract: I’ve worked out a two-dimensional version, which in the special cases where it applies makes it possible e.g. to describe a symmetric monoidal bicategory both rigorously and concisely. I'm working on the slides for the talk right now, but sadly I won’t have time to say much about the bicategory version. (I expect I’ll write a paper about it at some point, where I’ll be able to give all the details.)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>5</wp:post_id>
  <wp:post_date>2006-05-28 22:15:54</wp:post_date>
  <wp:post_date_gmt>2006-05-28 22:15:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>calgary</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="category" nicename="news"><![CDATA[news]]></category>
  <wp:comment>
    <wp:comment_id>44</wp:comment_id>
    <wp:comment_author><![CDATA[Bruce Bartlett]]></wp:comment_author>
    <wp:comment_author_email>b.h.bartlett@sheffield.ac.uk</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>143.167.5.104</wp:comment_author_IP>
    <wp:comment_date>2006-07-14 13:41:51</wp:comment_date>
    <wp:comment_date_gmt>2006-07-14 13:41:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi - could you tell me more about this rigorous and concise way to describe a symmetric monoidal bicategory? That sounds useful!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-07-14 13:41:51</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>On semi-strictness</title>
  <link>https://bosker.wordpress.com/2006/05/30/on-semi-strictness/</link>
  <pubDate>Tue, 30 May 2006 17:09:13 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/2006/05/30/on-semi-strictness/</guid>
  <description/>
  <content:encoded><![CDATA[<em><strong>Update</strong>: One correction and one addition; changes in <font color="red">red</font>.</em>
<em><strong>Second update</strong>: another <font color="#ff00ff">correction</font>.</em>

I had a couple of very interesting responses to my <a href="http://bosker.wordpress.com/2006/05/27/speculating-about-n-categories/">speculation about n-categories</a>. As well as John Baez’s comment, I had an email from Tom Leinster pointing out his <a href="http://arxiv.org/abs/math.CT/0109021">Structures in higher-dimensional category theory</a>, whose section III.7 contains a similar conjecture.

Thinking about what John wrote, I realise that I made a mistake. I was wrong to claim that <font color="red">the full sub-tricategory of <strong>Bicat</strong> determined by the 2-categories</font> is a Gray-category: the problem is that post-whiskering with a pseudo-functor is not 2-functorial, even when the objects are 2-categories. (It looks as though Tom’s section III.3 contains the same error? Note that the 1-cells of his <strong>2-Cat</strong> are pseudo-functors rather than 2-functors.)

<!--more-->So, if we’re looking at what kind of semi-strictness result can be obtained purely from Yoneda, we get something weaker than the Gordon-Power-Street theorem, but still useful. John’s comment seems to be hinting at a way to do better, and I’m starting to see what he’s getting at. The point is that Yoneda is not the only tool available, as the two-dimensional case illustrates. The Yoneda argument shows that every bicategory is biequivalent to a 2-category, but in fact more is true. Given a bicategory <strong><em>B</em></strong>, one can construct a 2-category <em>st(<strong>B</strong>)</em> in which a 1-cell is a composable sequence of 1-cells from <strong><em>B</em></strong>, and a 2-cell is a 2-cell in <strong><em>B</em></strong> from “the” composite of the source to “the” composite of the target. Then given a pseudo-functor <em>F: <strong>B</strong> → <strong>C</strong></em>, one can construct a 2-functor <em>st(<strong>B</strong>) → st(<strong>C</strong>)</em>, and this process preserves identities and composition. Presumably <em>this</em> is the construction that John thinks ought to define a triequivalence between <strong>Bicat</strong> and the tricategory he calls <strong>Gray</strong>. <strike>I think I agree. </strike><font color="red"><strike>In fact, I think section 5.6 of [GPS] proves that <strong>Bicat</strong> is triequivalent to <strong>Gray</strong>, precisely along these lines</strike>.</font>

<font color="#ff00ff">Update: although this is mentioned in <a href="/2006/06/05/more-on-strictification/" title="More on strictification">another post</a>, I should add here that section 5.6 of [GPS] contains an error. In fact, Bicat is <em>not</em> triequivalent to Gray, as <a href="http://uk.arxiv.org/abs/math/0612299" title="Bicat is not triequivalent to Gray" target="_blank">explained by Steve Lack</a>. </font>

I’m not sure how this argument would generalise to higher dimensions. Defining <em>st</em> more or less seems to require having an “all diagrams commute” sort of coherence theorem. But if we are working with n-categories in which k-ary composition is a primitive operation, the difficulties are obviously lessened, so probably there is a sensible generalisation. I just haven’t thought about what it is. All that said, proving a weak semi-strictness theorem based purely on Yoneda would be an interesting way to get the ball rolling.

I’m still a bit surprised that proving Yoneda for tricategories is said to be so hard, but I’m sure that’s just because I haven’t actually tried to do it! (I recently wrote out a proof of the bicategory version, and while it requires a clear head to keep track of what needs to be done, each individual step is simple.) I’ll have a stab at the tricategory version, which should give me a better idea of what’s hard about it.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>6</wp:post_id>
  <wp:post_date>2006-05-30 17:09:13</wp:post_date>
  <wp:post_date_gmt>2006-05-30 17:09:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>on-semi-strictness</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="category" nicename="speculation"><![CDATA[speculation]]></category>
  <wp:comment>
    <wp:comment_id>7</wp:comment_id>
    <wp:comment_author><![CDATA[Tom Leinster]]></wp:comment_author>
    <wp:comment_author_email>tleinster@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.maths.gla.ac.uk/~tl</wp:comment_author_url>
    <wp:comment_author_IP>130.209.6.40</wp:comment_author_IP>
    <wp:comment_date>2006-05-30 18:07:57</wp:comment_date>
    <wp:comment_date_gmt>2006-05-30 18:07:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Robin wrote:

&gt; Thinking about what John wrote, I realise that I made a mistake. I was
&gt; wrong to claim that Bicat is a Gray-category: 
&gt; the problem is that post-whiskering with a pseudo-functor is not 
&gt; 2-functorial, even when the objects are 2-categories. (It looks as though
&gt; Tom’s section III.3 contains the same error? Note that the 1-cells of his
&gt; 2-Cat are pseudo-functors rather than 2-functors.)

Guilty (of the error, as well as the appalling notation. It was a long time ago.) 

There's a less subtle way in which Bicat fails to be a Gray-category.  This was one of the points I was trying to make in that error-riddled essay.  Here I'm assuming that your 2-cells in Bicat are *weak* transformations.  In that case, vertical composition of them is not associative or unital.  However, it is if you restrict to the full sub-thing of Bicat whose 0-cells are the strict 2-categories.

Miles Gould has been working on the <i>st</i> construction.  He's sticking to low dimensions for now, but has shown that it works for a range of categorified algebraic theories, not just monoidal categories.  He also observes that (if you work in the unbiased setting) <i>st</i> is simply the left adjoint to the inclusion of strict structures into weak structures.  See his <a href="http://www.maths.gla.ac.uk/~tl/pssl/#intellectual" rel="nofollow">notes</a>.  A polished version should appear on the arXiv before too long.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-05-30 18:07:57</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>8</wp:comment_id>
    <wp:comment_author><![CDATA[bosker]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>130.88.0.141</wp:comment_author_IP>
    <wp:comment_date>2006-05-31 11:29:14</wp:comment_date>
    <wp:comment_date_gmt>2006-05-31 11:29:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ah yes, thanks. When I wrote “Bicat”, what I really meant was “the full sub-tricategory of Bicat determined by the 2-categories”; I’ve changed it now.

Miles Gould’s work looks interesting. I guess it must be related to <a href="http://www.maths.usyd.edu.au/u/AusCat/abstracts/970910sl.html" rel="nofollow">this work</a> of Steve Lack (which I think is written up <a href="http://www.maths.usyd.edu.au/u/stevel/papers/codesc.html" rel="nofollow">here</a>)?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-05-31 11:29:14</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>About</title>
  <link>https://bosker.wordpress.com/about/</link>
  <pubDate>Wed, 31 May 2006 18:13:10 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/about-2/</guid>
  <description/>
  <content:encoded><![CDATA[Bosker blog is written by me, Robin Houston.

It used to be about category theory; these days I’ll write about anything that interests me, usually topics with a mathematical slant.

I’m <a href="http://twitter.com/robinhouston">@robinhouston</a> on Twitter. I’m half of <a href="http://kiln.it/">Kiln</a>. My email address is robin.houston@gmail.com.

If you’re wondering what <em>bosker</em> means, look <a href="http://andc.anu.edu.au/pubs/ozwords/May_2003/bonzer.html">here</a>. It’s a bosker word, which would be brought back into use right across the English-speaking world if the decision were mine to make. I found it by chance, next to ‘bosky’ in the dictionary.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>7</wp:post_id>
  <wp:post_date>2006-05-31 18:13:10</wp:post_date>
  <wp:post_date_gmt>2006-05-31 18:13:10</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>about</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Calgary 2</title>
  <link>https://bosker.wordpress.com/2006/06/03/calgary-2/</link>
  <pubDate>Sat, 03 Jun 2006 23:28:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/2006/06/03/calgary-2/</guid>
  <description/>
  <content:encoded><![CDATA[I'm in Calgary now, at the <a href="http://www.math.ca/Events/summer06/">CMS meeting</a>. This morning's session was very interesting, but so far I've learnt more from chatting with the other participants. The Sydneyites tell me that Ross Street thinks he has found a good way of thinking about my <a href="http://arxiv.org/abs/math.CT/0604542">compact closed biproducts</a> theorem. Unfortunately none of them can remember the details! I'm surprised at how many (very clever) people claim to have had trouble understanding that paper: I thought I'd made it really, really simple, but maybe I've confused people by putting in too <i>much</i> detail!

I'm drinking A&amp;W root beer, which I am assured is a famous Canadian delicacy and tastes of sugary toothpaste. Earlier I was stopped by two burly policemen on mountain bikes, who asked me very sternly why I had crossed the (untrafficked) street. I resisted the temptation to give the obvious answer, and engaged the hapless foreigner defence. It seemed to have the desired effect, though the policeman made it clear that only thanks to his boundless magnanimity was I to be spared the $172 fine. North America is a strange place, where pedestrians are forbidden to impede the hypothetical progress of imaginary cars.

I'm speaking at 8:30 tomorrow morning, so I'd better get back to figuring out what to say. (The fear of the unknown has evaporated now I'm here, so I only have to worry about making it comprehensible and engaging…)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>8</wp:post_id>
  <wp:post_date>2006-06-03 23:28:00</wp:post_date>
  <wp:post_date_gmt>2006-06-03 23:28:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>calgary-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="category" nicename="news"><![CDATA[news]]></category>
  <wp:comment>
    <wp:comment_id>12</wp:comment_id>
    <wp:comment_author><![CDATA[Jon]]></wp:comment_author>
    <wp:comment_author_email>jonno.cohen@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://thatlogicblog.blogspot.com</wp:comment_author_url>
    <wp:comment_author_IP>220.233.210.48</wp:comment_author_IP>
    <wp:comment_date>2006-06-04 00:12:54</wp:comment_date>
    <wp:comment_date_gmt>2006-06-04 00:12:54</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I have notes from Ross's talk lying around somewhere at home, I'll see if I can dig them up for you.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-04 00:12:54</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>13</wp:comment_id>
    <wp:comment_author><![CDATA[bosker]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>136.159.187.59</wp:comment_author_IP>
    <wp:comment_date>2006-06-04 00:17:33</wp:comment_date>
    <wp:comment_date_gmt>2006-06-04 00:17:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Jon: that would be cool, thanks! I've seen Craig's notes on it, but failed to achieve enlightenment from them.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-04 00:17:33</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>14</wp:comment_id>
    <wp:comment_author><![CDATA[Jon]]></wp:comment_author>
    <wp:comment_author_email>jonno.cohen@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://thatlogicblog.blogspot.com</wp:comment_author_url>
    <wp:comment_author_IP>220.233.210.48</wp:comment_author_IP>
    <wp:comment_date>2006-06-04 10:58:01</wp:comment_date>
    <wp:comment_date_gmt>2006-06-04 10:58:01</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I've yet to make it home this weekend, but I suspect that my notes are roughly the same as Craig's. From memory, Ross had a different proof to yours, but I may be wrong.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-04 10:58:01</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>More on strictification</title>
  <link>https://bosker.wordpress.com/2006/06/05/more-on-strictification/</link>
  <pubDate>Mon, 05 Jun 2006 05:53:23 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/2006/06/05/more-on-strictification/</guid>
  <description/>
  <content:encoded><![CDATA[Another fascinating day! At lunch time <a href="http://www.maths.usyd.edu.au/u/stevel/">Steve Lack</a> told me some interesting things about the strictification operator for bicategories. Apparently section 5.6 of [GPS] is wrong, and Steve reckons <b>Gray</b> is probably <i>not</i> triequivalent to <b>Bicat</b>. (The mistake in 5.6 is in the very first sentence: the trihomomorphism <i>M: B → <b>Gray</b></i> constructed there is not actually a triequivalence! Although it's locally a biequivalence by construction, it fails to be triessentially surjective.)

On the other hand, Steve mentioned a sense in which strictification does produce a (Quillen) equivalence: see <a href="http://www.maths.usyd.edu.au/u/stevel/papers/qmc2cat.html">his paper here</a>. Perhaps this is my cue to finally learn about model categories…]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>9</wp:post_id>
  <wp:post_date>2006-06-05 05:53:23</wp:post_date>
  <wp:post_date_gmt>2006-06-05 05:53:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>more-on-strictification</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="category" nicename="news"><![CDATA[news]]></category>
</item>
<item>
  <title>Monoidal centres</title>
  <link>https://bosker.wordpress.com/2006/06/06/monoidal-centres/</link>
  <pubDate>Tue, 06 Jun 2006 23:12:26 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/2006/06/06/monoidal-centres/</guid>
  <description/>
  <content:encoded><![CDATA[I was chatting to <a href="http://www.maths.mq.edu.au/~craig/">Craig “Cap. Astro” Pastro</a> yesterday evening over a beer, and he mentioned an interesting question: if you take the monoidal centre of a braided monoidal category, do you get back the thing you started with? We figured out the answer at breakfast this morning, and I'll explain it in a bit. But first maybe I should explain what the question means.

<!--more-->The <i>centre</i> of a monoid <i>M</i> is defined to be the submonoid consisting of those elements that commute with everything in <i>M</i>. The centre of a monoid is always abelian (for obvious reasons!) and if <i>M</i> was abelian to start with, then the centre is just the whole of <i>M</i>.

If you categorify this, you get the centre construction on a monoidal category. The centre of the monoidal category <i><b>C</b></i> is the braided monoidal category in which an object consists of an object <i>A</i> of <i><b>C</b></i> together with a natural isomorphism</p><p class="center">
	A⊗– → –⊗A
</p><p>satisfying the usual braiding axioms; and the rest of the structure is defined in the only reasonable way. (If you're not satisfied with that description, read on…)

Later today, <a href="http://www.math.uchicago.edu/~eugenia/">Eugenia Cheng</a> told me a nice way to think about the centre construction and its generalisation. The centre of a monoid can be described as follows: take your monoid <i>M</i> and think of it as a one-object category <i>Σ(M)</i>; the centre is precisely the monoid of natural transformations from the identity functor on <i>Σ(M)</i> to itself. When you look at it like this, it’s easy to categorify: take your monoidal category <i><b>C</b></i>, and think of it as a one-object bicategory <i>Σ(<b>C</b>)</i>. Then its centre is the monoidal category whose objects are pseudo-natural transformations from the identity pseudofunctor on <i>Σ(<b>C</b>)</i> to itself, and whose arrows are modifications between them. (The tensor product is given by composition, of course.) If you work out what this means, you get back the concrete description I sketched above.

Back to the question: we know that the centre of an abelian monoid <i>M</i> is isomorphic to <i>M</i>, so it’s natural to wonder whether the centre of (the monoidal category underlying) a braided monoidal category <i><b>C</b></i> is always braided monoidal equivalent to <i><b>C</b></i>. But if you think about what that would mean, it starts to sound pretty unlikely. For one thing, it would mean that braidings are essentially unique where they exist, and that doesn’t sound right.

Indeed it isn’t right, and here’s our counterexample. The idea is to construct a monoidal category that has two braidings, one of which is a symmetry and the other of which is not. Since braided monoidal equivalence preserves symmetry, these braidings must be inequivalent; therefore the centre must differ from at least one of them. Let <i><b>B</b></i> be the free symmetric strict monoidal category on one generator: so an object is just a natural number, and a morphism <i>m → n</i> is a bijection from the <i>m</i>-element set to the <i>n</i>-element-set. (If <i>m ≠ n</i> then there is no such morphism of course, so in fact the only morphisms are endomorphisms. In other words, <i><b>B</b></i> is the categorical coproduct of all the symmetric groups.) Let <i><b>Z</b></i> be the abelian group of integers under addition, regarded as a category with one object. You can think of <i><b>Z</b></i> as a symmetric monoidal category, where the tensor of two arrows (integers) is again their sum. It follows therefore that the product <i><b>B×Z</b></i> is a symmetric monoidal category, with symmetry <i>σ</i>, say. The objects of <i><b>B×Z</b></i> are just natural numbers again, and an arrow is a bijection together with an integer. When you compose or tensor two morphisms, you just add the integers together. Now we can define another braiding <i>β</i> where, for every pair of objects <i>m, n</i>, the arrow <i>β<sub>m,n</sub></i> has the same bijection as <i>σ<sub>m,n</sub></i> and the associated integer is the product <i>mn</i>. If you check the axioms, you find that this is indeed a braiding, essentially because the product of integers distributes over their sum. And it can’t be symmetric, because the integer associated with the inverse of a <i>β</i> map is negative. So we’re done!
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>10</wp:post_id>
  <wp:post_date>2006-06-06 23:12:26</wp:post_date>
  <wp:post_date_gmt>2006-06-06 23:12:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>monoidal-centres</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:comment>
    <wp:comment_id>15</wp:comment_id>
    <wp:comment_author><![CDATA[urs]]></wp:comment_author>
    <wp:comment_author_email>urs.schreiber@math.uni-hamburg.de</wp:comment_author_email>
    <wp:comment_author_url>http://http//www.math.uni-hamburg.de/home/schreiber</wp:comment_author_url>
    <wp:comment_author_IP>161.53.129.62</wp:comment_author_IP>
    <wp:comment_date>2006-06-07 20:06:10</wp:comment_date>
    <wp:comment_date_gmt>2006-06-07 20:06:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[<blockquote>

the centre is precisely the monoid of natural transformations from the identity functor on $\Sigma(M)$ to itself.

</blockquote>

Figuring out the center of braided monoidal categories plays a central role when looking at open/closed 2D quantum field theories, in particular open/closed topological strings. 

Just recently Aaron Bergman, citing Dan Freed, <a href="http://golem.ph.utexas.edu/string/archives/000792.html#c003629" rel="nofollow">mentioned</a> this endomorphism way of thinking about it over at the coffee table.

Unfortunately, it seems that for capturing the full concept of closed string subalgebras in open string algebras one needs something more sophisticated than this.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-07 20:06:10</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>16</wp:comment_id>
    <wp:comment_author><![CDATA[fisheses]]></wp:comment_author>
    <wp:comment_author_email>monkeyandmu@puffinry.demon.co.uk</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>80.176.228.148</wp:comment_author_IP>
    <wp:comment_date>2006-06-07 22:04:49</wp:comment_date>
    <wp:comment_date_gmt>2006-06-07 22:04:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[please stop writing in this and write to me]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-07 22:04:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>On poset-valued sets</title>
  <link>https://bosker.wordpress.com/2006/06/14/on-poset-valued-sets/</link>
  <pubDate>Wed, 14 Jun 2006 15:32:54 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/2006/06/14/on-poset-valued-sets/</guid>
  <description/>
  <content:encoded><![CDATA[On Monday afternoon I had a look at Andrea Schalk and Valeria de Paiva’s paper on <a href="http://www.cs.man.ac.uk/~schalk/publ/pvsets.ps.gz">Poset-valued sets</a>, which I was reminded of recently by Greg Restall’s <a href="http://consequently.org/writing/hpplrssl/">survey of relevant and substructural logics</a>.

It gives a recipe for constructing models of linear logic that have specified properties, by starting from a poset that has the required properties and constructing a category based on that. There is something rather mystifying about the construction as it stands, so I wondered whether there’s some way of thinking about it that sheds more light on it. I think there is, and I may as well record it here in case anyone is interested. <!--more-->The ingredients of the construction are: a poset <i>P</i> that has some additional (monoidal, monoidal closed, star-autonomous) structure, and a lax monoidal functor <i>F: <b>Rel</b> → <b>Rel</b></i>. These ingredients are used to construct a (monoidal, etc.) category <i>P<sub>F</sub><b>Set</b></i>.

Now, there is a standard construction that builds from any category <i><b>C</b></i> a category <i>Rel(<b>C</b>)</i> that can be described concretely as follows: an object of <i>Rel(<b>C</b>)</i> is a set <i>S</i> together with a function <i>f<sub>S</sub>: S → |<b>C</b>|</i>, and a morphism <i>r: S → T</i> consists of a relation <i>S → T</i> together with, for every <i>(x,y) ∈ r</i>, a set of <i><b>C</b></i>-morphisms from <i>f<sub>S</sub>(x)</i> to <i>f<sub>T</sub>(y)</i>. Abstractly, <i>Rel(<b>C</b>)</i> is the free sup-lattice-enriched category with small biproducts generated by <i><b>C</b></i>, which can be constructed by freely changing the base of enrichment and then freely adding the biproducts.

For any <i><b>C</b></i> there is an obvious forgetful functor <i>U: Rel(<b>C</b>) → <b>Rel</b></i>. My basic observation is that the category <i>P<sub>F</sub><b>Set</b></i> is precisely the pullback of <i>F: <b>Rel</b> → <b>Rel</b></i> and <i>U: Rel(P) → <b>Rel</b></i>. (The assumption that <i>P</i> is a poset rather than an arbitrary category does not seem to have any effect beyond simplifying the concrete description of the result.)

The interesting part is the monoidal structure. For the sake of simplicity, just suppose that <i><b>C</b></i> is monoidal; we want to see how a monoidal structure is induced on <i>P<sub>F</sub><b>Set</b></i>. It’s easy to see that <i>Rel(<b>C</b>)</i> inherits, and <i>U</i> strictly preserves, any monoidal structure possessed by <i><b>C</b></i>. On the other hand, <i>F</i> is only lax monoidal (or equivalently oplax monoidal, since <i><b>Rel</b></i> is self-dual), so that doesn’t immediately help. At this point, perhaps it makes things easier to abstract away from the details for a moment. We have a pullback like this:
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/pvs-pbk.png" alt="PVS pullback" width="116" height="115" /></p>
where the three categories we started with (<i><b>C</b></i>, <i><b>D</b></i> and <i><b>E</b></i>) are all monoidal, <i>U</i> is strict monoidal, and <i>F</i> is oplax monoidal. It turns out that <i>if <i>U</i> is a fibration</i> then there is a natural way to define a monoidal structure on <i><b>B</b></i>. (I’m not sure whether this has been observed before [<i>update</i>: it has – see Richard’s comment below], but it’s quite easy.) Furthermore, <i>U</i> doesn’t actually need to be a fibration: the only maps that need to have cartesian liftings are the structural maps <i>F(A⊗B) → FA⊗FB</i> and <i>FI → I</i> that give the oplax monoidal structure on <i>F</i>.

Coming back to our concrete <i>U: Rel(<b>C</b>) → <b>Rel</b></i>, there are two simple extreme cases: on the one hand, a relation that is the graph of a function always has a cartesian lifting; on the other, if <i><b>C</b></i> has (set-indexed) products then every relation has one (so in this case <i>U</i> really is a fibration). The former case is the one that’s addressed in the paper – it’s assumed that the structural maps are always graphs of functions – but it’s clear from what I’ve just said that this can be generalised. In the former case our general construction does seem to give the same result as the concrete description in the paper.

The same idea can certainly be extended to monoidal closed structure: in this case we need <i>F</i> to be lax monoidal as well as oplax monoidal, which is a triviality in the concrete case in question. I haven't thought about star-autonomous structure, but I would be surprised if that didn’t work too.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>12</wp:post_id>
  <wp:post_date>2006-06-14 15:32:54</wp:post_date>
  <wp:post_date_gmt>2006-06-14 15:32:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>on-poset-valued-sets</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2a80e04689918424ae8cc1fe319d6856</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e47460841b0e8619c17a02511057ad3a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_abe3cc0b432eae5a3a4d181f697ce4d7</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>17</wp:comment_id>
    <wp:comment_author><![CDATA[urs]]></wp:comment_author>
    <wp:comment_author_email>urs.schreiber@math.uni-hamburg.de</wp:comment_author_email>
    <wp:comment_author_url>http://www.math.uni-hamburg.de/home/schreiber</wp:comment_author_url>
    <wp:comment_author_IP>193.170.117.15</wp:comment_author_IP>
    <wp:comment_date>2006-06-15 12:06:25</wp:comment_date>
    <wp:comment_date_gmt>2006-06-15 12:06:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[<blockquote>

[...] models of linear logic [...]

The ingredients of the construction are: a poset P that has some additional (monoidal, monoidal closed, star-autonomous) structure, and a lax monoidal functor

</blockquote>

This reminds me of the paper

F. W. Lawvere,
Metric Spaces, Generalized Logic, and Closed Categories
(discussed <a href="http://golem.ph.utexas.edu/string/archives/000818.html" rel="nofollow">here</a>).]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-15 12:06:25</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>18</wp:comment_id>
    <wp:comment_author><![CDATA[bosker]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>80.176.228.148</wp:comment_author_IP>
    <wp:comment_date>2006-06-15 13:06:50</wp:comment_date>
    <wp:comment_date_gmt>2006-06-15 13:06:50</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[And what a wonderful paper to be reminded of! I can't see a precise connection, but it would be very nice if one could be made. The most obvious difference is that Lawvere is <i>enriching</i> in a monoidal poset (so associating a poset element with every pair of objects) whereas de Paiva and Schalk are associating a poset element with every <i>member</i> of some set. Is there a way to bridge that gap?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-15 13:06:50</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>27</wp:comment_id>
    <wp:comment_author><![CDATA[Richard Garner]]></wp:comment_author>
    <wp:comment_author_email>rhgg2@cam.ac.uk</wp:comment_author_email>
    <wp:comment_author_url>http://www.dpmms.cam.ac.uk/~rhgg2</wp:comment_author_url>
    <wp:comment_author_IP>83.250.81.109</wp:comment_author_IP>
    <wp:comment_date>2006-06-19 06:45:58</wp:comment_date>
    <wp:comment_date_gmt>2006-06-19 06:45:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Robin,

Your observation about monoidal structures appears in this paper of M. Hasegawa's

http://www.kurims.kyoto-u.ac.jp/~hassei/papers/full.ps.gz

He uses it as a jumping off point to explain glueings, double glueings, etc, in a manner similar to yours.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-19 06:45:58</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>28</wp:comment_id>
    <wp:comment_author><![CDATA[bosker]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>80.176.228.148</wp:comment_author_IP>
    <wp:comment_date>2006-06-19 11:12:25</wp:comment_date>
    <wp:comment_date_gmt>2006-06-19 11:12:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[So it does! Marvellous, thanks.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-19 11:12:25</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1539</wp:comment_id>
    <wp:comment_author><![CDATA[Valeria]]></wp:comment_author>
    <wp:comment_author_email>paiva@parc.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>13.0.211.26</wp:comment_author_IP>
    <wp:comment_date>2007-09-25 04:50:39</wp:comment_date>
    <wp:comment_date_gmt>2007-09-25 04:50:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[hi Robin,
I only saw these messages now more than a year after they were originally posted,sorry. I wanted to say that the similarity to Lawvere's metric spaces is totally what we were after. One of the versions of dialectica categories that I had already worked on before, in a technical report called "Categorical Multirelations" was exactly a version of metric spaces. Now when we started talking about models of linear logic I said I wanted to separate chu-like models where every object has two-sides, one  almost fighting the other, and models, more like coherence spaces where you map into an algebraic structure a bit like the one you want in the whole category, the case of the poset-valued sets. in the case of dialectica you kind of need both, but it seemed clear that either of these strategies was enough for an interesting model.
cheers,
Valeria]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2007-09-25 04:50:39</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Fun with Rel</title>
  <link>https://bosker.wordpress.com/2006/06/14/fun-with-rel/</link>
  <pubDate>Wed, 14 Jun 2006 21:16:34 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/2006/06/14/fun-with-rel/</guid>
  <description/>
  <content:encoded><![CDATA[One of the great joys of category theory is the way you can so often watch familiar structures emerge unexpectedly from general constructions. It’s particularly amusing to apply the formal theory of monads to the 2-category <b>Rel</b> of sets and relations. (I mean the 2-category whose objects are sets, whose 1-cells are relations, and where there is a unique 2-cell from <i>R</i> to <i>S</i> just when <i>R</i> is a subset of <i>S</i>.) This is an easy example to study because all diagrams of 2-cells commute, since by definition there is at most one 2-cell between any pair of relations.
<!--more-->
What’s an adjunction in <b>Rel</b>? It must consist of two relations like this:
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/rel-adj.png" alt="Adjunction" width="100" height="53" /></p>
such that <i>1<sub>X</sub> ⊆ GF</i> and <i>FG ⊆ 1<sub>Y</sub></i> (subject to a couple of equations that are between 2-cells, so always hold). It’s easy to check that this is equivalent to saying:
<ul>
  <li> for every <i>x∈X</i> there is a unique <i>y∈Y</i> for which <i>x F y</i>,</li>
  <li> <i>x F y ⇔ y G x</i>.</li>
</ul>
In other words, an adjunction in <b>Rel</b> is just a function!

We know that this adjunction will induce a monad on <i>X</i> and a comonad on <i>Y</i>, so what are monads and comonads? A monad on <i>X</i> is a relation <i>R</i> on <i>X</i> such that <i>1<sub>X</sub> ⊆ R</i> and <i>RR ⊆ R</i>. The first condition says that <i>R</i> is reflexive, and the second condition says that it’s transitive. So a monad is an reflexive, transitive relation – otherwise known as a preorder.

What about a comonad? (Can you guess?) It should be a relation <i>S</i> on <i>Y</i> such that <i>S ⊆ 1<sub>Y</sub></i> and <i>S ⊆ SS</i>. The first condition says that no element is related to anything other than itself, which means that <i>S</i> is essentially just a subset of <i>Y</i>, and the second condition is therefore redundant. So a comonad is just a subset.

Therefore a function induces a preorder on its source (which happens to be an equivalence relation: it’s the kernel of the function) and picks out a subset of its target (the range of the function). You knew that already, but maybe you didn’t know it was an instance of the theory of adjunctions. I didn’t, at any rate.

Something interesting is happening here. The monad induced by an adjunction is always an equivalence relation, i.e. a <i>symmetric</i> preorder. Yet there are certainly non-symmetric preorders – any non-trivial partial order, for example. So clearly, and in contrast with the situation in <b>Cat</b>, not every monad is induced by an adjunction. More on this in a second.

How about algebras for a monad? An algebra for a monad <i>R</i> on <i>X</i> is a relation <i>P: A → X</i> such that <i>RP ⊆ P</i>. If <i>R</i> is an equivalence relation then <i>P</i> is really a relation between <i>A</i> and the set of equivalence classes of <i>R</i>. That description answers the next obvious question, because it shows that the Eilenberg-Moore object of an equivalence relation (qua monad) is just its set of equivalence classes. The canonical adjunction between <i>X</i> and the Eilenberg-Moore object is the function that takes each element to its equivalence class. On the other hand a monad that is <i>not</i> an equivalence relation (because it’s not symmetric) cannot have an Eilenberg-Moore object. (If it did, then it would be induced by an adjunction.)

Similarly a coalgebra <i>Q: B → Y</i> for a comonad <i>S</i> on <i>Y</i> is a relation such that <i>Q ⊆ SQ</i>, or in plain terms a relation between <i>B</i> and the subset of <i>Y</i> picked out by <i>S</i>. So the co-Eilenberg-Moore object for a comonad is just the subset that it picks out.

Is this any use for anything? Who knows, but it’s fun…</p>
<hr>
<p>PS. I’ve heard it said that <b>Rel</b> is often best understood as the full subcategory of discrete objects in <b>RPro</b>, the category of <i>relational profunctors</i>. An object of <b>RPro</b> is a preordered set, and an arrow <i>R: X → Y</i> is a relation with the property that <i>a ≤ b R c ≤ d ⇒ a R d</i>. (In Australian terms, <b>RPro</b> is <i>V</i>-Mod for <i>V=2</i>.) I think the usual reason for regarding <b>Rel</b> as embedded in <b>RPro</b> is that <b>RPro</b> has good (co)completeness properties. What matters here is that it has an Eilenberg-Moore object for every monad, so the monads that don’t have Eilenberg-Moore objects in <b>Rel</b> do have them in <b>RPro</b>. That makes intuitive sense too, since we’ve already seen that a monad in <b>Rel</b> is a preorder, and the objects of <b>RPro</b> are already preorders.

In fact every preorder is isomorphic in <b>RPro</b> to a partial order, obtained by collapsing the equivalence classes, so it doesn’t do any harm to restrict our attention to those objects that are already partial orders. Then a monad <i>R</i> on <i>X</i> is a preorder that’s compatible with (i.e. stronger than) the existing partial order on <i>X</i>, and the Eilenberg-Moore object of <i>R</i> is the partial order obtained from <i>R</i> by identifying <i>R</i>-equivalent elements of <i>X</i>.</p>
<hr>
<p>PPS. Above I’ve been thinking of <b>Rel</b> as a 2-category, but secretly it’s a 5-category at least. (Why? :-))
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>14</wp:post_id>
  <wp:post_date>2006-06-14 21:16:34</wp:post_date>
  <wp:post_date_gmt>2006-06-14 21:16:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>fun-with-rel</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:comment>
    <wp:comment_id>19</wp:comment_id>
    <wp:comment_author><![CDATA[L. Alonso]]></wp:comment_author>
    <wp:comment_author_email>viduido@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>193.144.66.154</wp:comment_author_IP>
    <wp:comment_date>2006-06-15 13:55:44</wp:comment_date>
    <wp:comment_date_gmt>2006-06-15 13:55:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Wow! You have discoverd that the enormously succesful category <b>Set</b>, which seems artificial if you view it from afar, --all the condictions for a relation to be a map are on the source, none on the target,-- is the adjunction category of a really natural 2 category <b>Rel</b>. 
Moreover the theory of monads is the canonical factorization of a map, enormously useful in so many contexts.
And it explains the assymetry associated to the axiom of choice. I think this comes from the choice of the 2-cells as inclusions.
I wonder how it would look a similar treatment when choosing surjections as the 2-cells. The category of adjunctions should be something "dual" to Sets.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-15 13:55:44</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>20</wp:comment_id>
    <wp:comment_author><![CDATA[B. Bartlett]]></wp:comment_author>
    <wp:comment_author_email>b.h.bartlett@sheffield.ac.uk</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>143.167.5.104</wp:comment_author_IP>
    <wp:comment_date>2006-06-15 14:12:37</wp:comment_date>
    <wp:comment_date_gmt>2006-06-15 14:12:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Mmm... fascinating!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-15 14:12:37</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>21</wp:comment_id>
    <wp:comment_author><![CDATA[bosker]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>80.176.228.148</wp:comment_author_IP>
    <wp:comment_date>2006-06-15 16:36:55</wp:comment_date>
    <wp:comment_date_gmt>2006-06-15 16:36:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I certainly didn't <i>discover</i> that functions can be defined as adjunctions in <b>Rel</b>! The idea essentially goes back to section 3 of Lawvere's <a href="http://www.tac.mta.ca/tac/reprints/articles/1/tr1abs.html" rel="nofollow">Metric spaces, generalized logic and closed categories</a> (1973), and it’s explicitly stated in the introduction to Street’s <a href="http://www.tac.mta.ca/tac/reprints/articles/4/tr4abs.html" rel="nofollow">Cauchy characterization of enriched categories</a> (1981).

(Aren’t <a href="http://www.tac.mta.ca/tac/reprints/index.html" rel="nofollow">TAC reprints</a> wonderful?)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-15 16:36:55</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>22</wp:comment_id>
    <wp:comment_author><![CDATA[bosker]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>80.176.228.148</wp:comment_author_IP>
    <wp:comment_date>2006-06-15 21:05:31</wp:comment_date>
    <wp:comment_date_gmt>2006-06-15 21:05:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[L. Alonso’s remark that <b>Rel</b> is more natural than <b>Set</b> reminds me of something I’ve vaguely wondered about but never seriously investigated.

The usual “ladder” of strict <i>n</i>-categories can be regarded as a process of iterated enrichment: if <i>T</i> is the terminal (one object, one morphism) category, then <i>T-Cat</i> is sets and functions, <i>(T-Cat)-Cat</i> is categories and functors, <i>((T-Cat)-Cat)-Cat</i> is 2-categories and 2-functors, and so on.

But – just as there is no obvious reason to regard functions as more primitive than relations – there is no obvious reason to regard functors as more primitive than modules (aka distributors, profunctors, bimodules). The analogous progression <i>T-Mod</i>, <i>(T-Mod)-Mod</i> etc. takes a little bit longer to get going: <i>T-Mod</i> has only two isomorphism classes of objects, so it’s equivalent to the category <b>2</b>, but then <i>(T-Mod)-Mod</i> is <b>RPro</b> and we get going properly.

This is interestingly close to the progression postulated by John Baez <a href="http://north.ecc.edu/alsani/ct99-00(8-12)/msg00304.html" rel="nofollow">here</a>, for different reasons. (<b>Update</b>: Appendix A.1 of <a href="http://math.ucr.edu/home/baez/chicago.pdf" rel="nofollow">these notes</a> describes a progression of precisely the sort I’m considering here, and mentions some advantages it has over the more familiar one.)

We can try to reconstruct something more familiar by considering adjunctions. An adjunction in <b>RPro</b> is essentially a monotone map between posets. I don’t know quite what happens at the next level, but it ought to be something like a saturated anafunctor (up to Morita equivalence of the target).

The intriguing thing about this approach is that it could conceivably be easier to describe the “weak” versions. After all, a (two-sided) fibration is a kind of weak module, and it’s easier to describe fibrations than pseudofunctors.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-15 21:05:31</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>139</wp:comment_id>
    <wp:comment_author><![CDATA[bat020]]></wp:comment_author>
    <wp:comment_author_email>bat020@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>82.71.91.14</wp:comment_author_IP>
    <wp:comment_date>2006-11-17 13:07:48</wp:comment_date>
    <wp:comment_date_gmt>2006-11-17 13:07:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi there. I did a little bit of category theory for my maths degree some 15 years ago and have retained an amateur interest in the subject - so apologies in advance if these remarks are too obvious or basic to be worth stating...

It struck me while thinking about this that any relation R between sets x and y can be thought of as a join-preserving function from Px to Py (where the power sets are thought of as complete join semi-lattices (CJSLs)), and conversely any join-preserving function between powersets encodes a unique relation between the underlying sets... so basically the 2-category <b>Rel</b> is equivalent to the category of powersets and join-preserving maps between them, right?

And given that the powerset of x is just the free CJSL on x, it follows that <b>Rel</b> equivalent to the full subcategory of free CJSLs, ie the Kliesi category for the monad induced by the covariant powerset functor on <b>Set</b>.

Moreover, in this Kliesi category the "formal" adjunction you sketch out above turns into an actual concrete adjunction of colimit-preserving functors (ie CJSL morphisms) between cocomplete preorders (ie CJSLs). And Freyd's Adjoint Functor Theorem tells us that a join-preserving functor between two small CJSLs has a left adjoint iff it also happens to be meet-preserving.

So it seems to me that the questions "when does a join preserving map also preserve meets?" and "when does a relation have a left adjoint?" both turn out to have the same answer - when the relation is a function.

Two oddities arise though, which I can't quite put my finger on - firstly, to prove that a join-preserving CJSL morphism between free CJSLs encodes a function you only need to assume the morphism preserves finite meets. So there's some kind of "compactness" thing going on here, in that if finite meets are preserved, we get "all meets preserved" for free.

Also I don't quite understand how, if the "formal" adjunction in <b>Rel</b> can be thought of as an concrete adjunction, why the "every monad arises from an adjunction" thing fails in <b>Rel</b>.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-11-17 13:07:48</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>99</wp:comment_id>
    <wp:comment_author><![CDATA[Richard Garner]]></wp:comment_author>
    <wp:comment_author_email>rhgg2@cam.ac.uk</wp:comment_author_email>
    <wp:comment_author_url>http://www.dpmms.cam.ac.uk/~rhgg2</wp:comment_author_url>
    <wp:comment_author_IP>83.250.81.193</wp:comment_author_IP>
    <wp:comment_date>2006-09-09 06:47:17</wp:comment_date>
    <wp:comment_date_gmt>2006-09-09 06:47:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Do you know about allegories? All these ideas reappear at a more general level there. Given any arbitrary regular category C, you can form its category of relations, which is a poset-enriched category, Rel(C). 

This acts very much like Rel. The adjoint pairs are precisely the maps of C; and comonads and symmetric monads play analogous rôles in Rel(C) to those you have outlined in Rel. Comonads will always split, giving you images of maps,because the category C you started with has images; and the symmetric monads split just when C is effective regular, i.e. whenever it has effective quotients of equivalence relations.

Have a look in Freyd &amp; Scedrov "Categories, Allegories", or Volume 1 of the Elephant.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-09-09 06:47:17</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Paré's observation</title>
  <link>https://bosker.wordpress.com/2006/06/15/pares-observation/</link>
  <pubDate>Thu, 15 Jun 2006 22:45:15 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/2006/06/15/pares-observation/</guid>
  <description/>
  <content:encoded><![CDATA[It’s a curious (though well known) phenomenon that an equivalence in a bicategory can always be converted into an <i>adjoint</i> equivalence by tweaking one of the 2-cells. There are two ways to prove it, that I know of. The elementary way is just to write down a (rather complicated) definition and laboriously prove that it has the desired properties. I always found this rather baffling, so I preferred the more abstract approach: in essence, it’s easy to show that equivalences in <b>Cat</b> have this property by using the Yoneda lemma, then one can use the bicategorical Yoneda lemma to transfer the result to an arbitrary bicategory. But recently I learnt something that makes the direct approach a lot easier for me to understand.

<!--more-->At the CMS meeting in Calgary I gave a talk about monoidal categories in which I described how, under certain circumstances, the coherence conditions for a monoidal category are redundant. What I meant is that if you give me any natural isomorphisms</p>
<p class="center">
	<i>α<sub>A,B,C</sub>: A⊗(B⊗C) → (A⊗B)⊗C</i><br />
	<i>λ<sub>A</sub>: I⊗A → A</i><br />
	<i>ρ<sub>A</sub>: A⊗I → A</i><br />
</p>
<p>then I can use them to construct new ones that satisfy the coherence conditions. This doesn’t always work – my argument assumes a technical condition called <i>tensor generation</i> – but a key part of the construction is perfectly general. Here it is: suppose we have a category <b><i>C</i></b> equipped with a functor <i>⊗: <b>C</b>×<b>C</b> → <b>C</b></i> and a specified object <i>I</i>. If you give me natural isomorphisms</p>
<p class="center">
	<i>λ<sub>A</sub>: I⊗A → A</i><br />
	<i>ρ<sub>A</sub>: A⊗I → A</i><br />
</p>
<p>then I can construct a new natural isomorphism <i>λ'</i> with the property that <i>λ'<sub>I</sub> = ρ<sub>I</sub></i>. I simply define <i>λ'<sub>A</sub></i> to be the composite</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/lambda_prime.png" alt="lambda'" width="264" height="24" /></p>
<p>(The only trick needed to see that <i>λ'<sub>I</sub> = ρ<sub>I</sub></i> is the old observation of Kelly that, since <i>ρ</i> is natural, the square</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/rho_nat.png" alt="Naturality of rho at I" width="147" height="118" /></p>
<p>commutes, and since it’s invertible that implies <i>ρ<sub>I</sub>⊗I = ρ<sub>I⊗I</sub></i>. Just use that and the naturality of <i>λ</i>.)

After the talk, Robert Paré asked me whether turning an equivalence into an adjoint equivalence was an instance of this construction. Not as far as I know, I said. But his hunch was right, as he showed me the next morning after he’d figured it out. Given an equivalence</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/equivalence.png" alt="Equivalence" /></p>
<p>in some 2-category <b><i>B</i></b>, consider the hom category <i><b>B</b>(X, Y)</i>, define a tensor on it by <i>a⊗b := bga</i>, and take the ‘unit’ object to be <i>f</i>. The <i>λ</i> and <i>ρ</i> are given by the 2-cells <i>fg ⇒ 1</i> and <i>gf ⇒ 1</i> from the equivalence. Then you construct <i>λ'</i>, and lo and behold! the equation <i>λ'<sub>I</sub> = ρ<sub>I</sub></i> corresponds exactly to one of the triangle equations for an adjunction. (The other can then be derived using the fact that the 2-cells are invertible.) It also works when <b>B</b> is a bicategory: the only real difference is you have to choose one of the bracketings for <i>bga</i>, say <i>b(ga)</i>, and put in a couple of associators.

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>17</wp:post_id>
  <wp:post_date>2006-06-15 22:45:15</wp:post_date>
  <wp:post_date_gmt>2006-06-15 22:45:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>pares-observation</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:comment>
    <wp:comment_id>24</wp:comment_id>
    <wp:comment_author><![CDATA[urs]]></wp:comment_author>
    <wp:comment_author_email>urs.schreiber@math.uni-hamburg.de</wp:comment_author_email>
    <wp:comment_author_url>http://www.math.uni-hamburg.de/home/schreiber</wp:comment_author_url>
    <wp:comment_author_IP>193.170.117.17</wp:comment_author_IP>
    <wp:comment_date>2006-06-16 15:30:58</wp:comment_date>
    <wp:comment_date_gmt>2006-06-16 15:30:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[<blockquote>

an equivalence in a bicategory can always be converted into an adjoint equivalence

</blockquote>

I am currently concerned with a certain application, where it seems to turn out that the right notion of "equality" in a bicategorical setup is not quite that of an (adjoint) equivalence, but something slightly weaker. 

From any adjunction one obtains a monad, from an "ambidextrous adjunction" one obtains a Frobenius algebra like monad. These may have a property called "specialness". I called the adjunctions that lead to special Frobenius algebras "special ambidextrous adjunctions".

The details are described <a href="http://golem.ph.utexas.edu/string/archives/000746.html" rel="nofollow">here</a>.

I wonder if this makes sense to anyone else, and if so, if it has been considered by anyone else. I expect it has, but I haven't seen anything like that discussed in the literature.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-16 15:30:58</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>25</wp:comment_id>
    <wp:comment_author><![CDATA[D.]]></wp:comment_author>
    <wp:comment_author_email>withheld@com.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>128.112.17.139</wp:comment_author_IP>
    <wp:comment_date>2006-06-18 18:47:47</wp:comment_date>
    <wp:comment_date_gmt>2006-06-18 18:47:47</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[What's an "adjoint equivalence"?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-18 18:47:47</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>26</wp:comment_id>
    <wp:comment_author><![CDATA[bosker]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>80.176.228.148</wp:comment_author_IP>
    <wp:comment_date>2006-06-18 19:19:04</wp:comment_date>
    <wp:comment_date_gmt>2006-06-18 19:19:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[An adjoint equivalence is an adjunction whose unit and counit are invertible. So it's an equivalence and an adjunction at the same time.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-18 19:19:04</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>29</wp:comment_id>
    <wp:comment_author><![CDATA[bosker]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>80.176.228.148</wp:comment_author_IP>
    <wp:comment_date>2006-06-19 16:35:59</wp:comment_date>
    <wp:comment_date_gmt>2006-06-19 16:35:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Sorry your comments took so long to come through, Urs. (Wordpress misidentified them as spam, and I only just spotted them.)

I haven't come across these “special ambidextrous adjunctions” before, but they look intriguing. Do you have a general result about transport of structure across such a thing, or is it just in one special case?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-19 16:35:59</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>30</wp:comment_id>
    <wp:comment_author><![CDATA[urs]]></wp:comment_author>
    <wp:comment_author_email>urs.schreiber@math.uni-hamburg.de</wp:comment_author_email>
    <wp:comment_author_url>http://www.math.uni-hamburg.de/home/schreiber</wp:comment_author_url>
    <wp:comment_author_IP>134.100.222.156</wp:comment_author_IP>
    <wp:comment_date>2006-06-19 17:17:01</wp:comment_date>
    <wp:comment_date_gmt>2006-06-19 17:17:01</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[<blockquote>
Sorry your comments took so long to come through, Urs. 
</blockquote>


Nerver mind. I thought the first one got lost. I wish you would erase it, now that there are two of them...

<blockquote>

I haven’t come across these “special ambidextrous adjunctions” before, but they look intriguing. Do you have a general result about transport of structure across such a thing, 

</blockquote>


No. 

The way I encountered them was as follows: 

Say you have two 2-functors F, G : A --&gt; B and a pseudonatural transformation F --a-&gt; G. 

Under which conditions can one recover F from knowing just G and the data implicit in the transformation "a" (i.e the map a: Mor_1(A)--&gt;Mor_2(B) ). 

This arises in local trivialization of surface transport. F would be a globally defined surface transport which locally can be trivialized to G. For that to make sense, you need to be able to reconstruct F from G and the trivialization data.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-19 17:17:01</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>31</wp:comment_id>
    <wp:comment_author><![CDATA[bosker]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>80.176.228.148</wp:comment_author_IP>
    <wp:comment_date>2006-06-19 18:08:16</wp:comment_date>
    <wp:comment_date_gmt>2006-06-19 18:08:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[<blockquote>I wish you would erase it, now that there are two of them…</blockquote>

Consider it done.

<blockquote>
<blockquote>Do you have a general result about transport of structure across such a thing,</blockquote>
No.
</blockquote>

I have the vague idea that <a href="http://www.maths.usyd.edu.au/u/stevel/papers/transport.html" rel="nofollow">this paper</a> of Kelly and Lack may be relevant, but I haven’t looked into the details. Do you know it?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-19 18:08:16</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>41</wp:comment_id>
    <wp:comment_author><![CDATA[John Baez]]></wp:comment_author>
    <wp:comment_author_email>baez@math.ucr.edu</wp:comment_author_email>
    <wp:comment_author_url>http://math.ucr.edu/home/baez/</wp:comment_author_url>
    <wp:comment_author_IP>68.125.31.112</wp:comment_author_IP>
    <wp:comment_date>2006-06-29 18:06:54</wp:comment_date>
    <wp:comment_date_gmt>2006-06-29 18:06:54</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I wrote:

<i>and we’re improving e to make this adjunction into an adjoint equivalence</i>.

Ugh - I meant we're making this equivalence into an adjoint equivalence.  Note that the data I wrote down is enough to specify an equivalence, because i and e are invertible.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-29 18:06:54</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>40</wp:comment_id>
    <wp:comment_author><![CDATA[John Baez]]></wp:comment_author>
    <wp:comment_author_email>baez@math.ucr.edu</wp:comment_author_email>
    <wp:comment_author_url>http://math.ucr.edu/home/baez/</wp:comment_author_url>
    <wp:comment_author_IP>68.125.31.112</wp:comment_author_IP>
    <wp:comment_date>2006-06-29 18:04:35</wp:comment_date>
    <wp:comment_date_gmt>2006-06-29 18:04:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I always liked the string diagram proof that you can turn an equivalence into an adjoint equivalence.  You can see a version of it here:

John Baez and Aaron Lauda
<a HREF="http://arxiv.org/abs/math.QA/0307200" rel="nofollow">Higher-Dimensional Algebra V: 2-Groups</A>

starting on page 19, in the section on "Improvement".  We take the cryptic formula for "improving" an equivalence to an adjoint equivalence, write it out using string diagrams, and use string diagrams to check that it works.

We're doing this in a specific context: we've got a "weak 2-group", i.e. a monoidal category that's a groupoid where every object x is part of an equivalence:

e: x* tensor x -&gt; 1

i: 1 -&gt; x tensor x*

and we're improving e to make this adjunction into an adjoint equivalence. We call the result a "coherent 2-group".  We wind up showing that the 2-category of weak 2-groups is equivalent to the category of coherent 2-groups.

But just look at the pictures!!!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-29 18:04:35</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Kock on units</title>
  <link>https://bosker.wordpress.com/2006/06/19/kock-on-units/</link>
  <pubDate>Mon, 19 Jun 2006 17:48:04 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/2006/06/19/kock-on-units/</guid>
  <description/>
  <content:encoded><![CDATA[This morning’s crop of arxiv updates included a new version of Joachim Kock’s <a href="http://arxiv.org/abs/math.CT/0507349">Elementary remarks on units in monoidal categories</a>. Somehow I hadn’t noticed the earlier version; it’s a beautiful result, and it implies the lemma of mine that I mentioned in <a href="/2006/06/15/pares-observation/">Paré’s observation</a>.

<!--more-->The essential idea is that the unit of a monoidal category can be considered independently of the associativity. The usual way to define the unit is to ask for an object <i>I</i> together with natural isomorphisms</p>
<p class="center">
	<i>λ<sub>A</sub>: I⊗A → A</i><br />
	<i>ρ<sub>A</sub>: A⊗I → A</i><br />
</p>
<p>such that the “triangle” diagram</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/mon-triangle.png" alt="Triangle condition" width="168" height="61" /></p>
<p>commutes.</p>
<p>Of course this definition doesn’t make sense without the associator <i>α</i>. What Kock does (he calls it a <i>Saavedra unit</i>) is just to ask for an object <i>I</i> equipped with an isomorphism</p>
<p class="center"><i>u: I⊗I → I</i></p>
<p>such that the functors <i>I⊗-</i> and <i>–⊗I</i> are full and faithful. This definition doesn’t require an associator, but if you have one then you can define natural isomorphisms <i>λ</i> and <i>ρ</i> that satisfy the triangle condition. It’s very simple: to define <i>λ<sub>A</sub></i>, for example, consider the composite</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/kock-lambda.png" alt="How Kock defines lambda" width="231" height="24" /></p>
<p>Since <i>I⊗-</i> is full and faithful, there is a unique (invertible) map <i>λ<sub>A</sub>: I⊗A → A</i> for which <i>I⊗λ<sub>A</sub></i> is equal to this composite. The right-unit isomorphism <i>ρ</i> can be similarly defined, and the triangle axiom verified.

In particular, if you have arbitrary natural isomorphisms <i>λ</i> and <i>ρ</i>, you can take <i>u</i> to be either <i>λ<sub>I</sub></i> or <i>ρ<sub>I</sub></i>, and use Kock’s construction to find coherent unit isomorphisms, so as I said it subsumes my lemma.

Kock goes on to show how to define monoidal functors in terms of the Saavedra unit. For the definition of lax monoidal functor, I think he makes it a little bit more complicated than it needs to be. You can define a lax monoidal functor to be a functor <i>F</i> equipped with the usual data (a natural transformation <i>m<sub>A,B</sub>: FA⊗FB → F(A⊗B)</i> and a map <i>m<sub>I</sub>: I → FI</i>) subject to the usual associativity axiom, together with Kock’s condition that the diagram</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/kock-condition.png" alt="Kock’s condition" width="130" height="108" /></p>
<p>must commute, and the additional requirement that, for every object <i>A</i>, the composites</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/kock-comp-1.png" alt="Kock composite (left unit)" width="220" height="27" /></p>
<p>and</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/kock-comp-2.png" alt="Kock composite (right unit)" width="220" height="25" /></p>
<p>should be invertible.</p>
<p>Of course, one benefit of the Saavedra unit approach is that it eliminates a coherence condition. The obvious question for anyone interested in higher categories is whether the idea can be extended to higher dimensions, where the savings would presumably be more substantial. Indeed Kock has done some work in this direction: see his paper <a href="http://arxiv.org/abs/math.CT/0507116">Weak identity arrows in higher categories</a>. <strike>I haven’t read this one thoroughly, but it doesn’t seem to address one of the obvious questions, namely can one do something similar for monoidal bicategories?</strike> <b>Update</b>: it seems that there is something along these lines in <a href="http://arxiv.org/abs/math.CT/0602084">Weak units and homotopy 3-types</a>, with more promised in a forthcoming paper entitled <i><a href="http://mat.uab.es/~kock/cat/units.html">Coherence for weak units</a></i>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>21</wp:post_id>
  <wp:post_date>2006-06-19 17:48:04</wp:post_date>
  <wp:post_date_gmt>2006-06-19 17:48:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>kock-on-units</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rethinking monoidal categories</title>
  <link>https://bosker.wordpress.com/2006/06/20/rethinking-monoidal-categories/</link>
  <pubDate>Tue, 20 Jun 2006 20:19:02 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/2006/06/20/rethinking-monoidal-categories/</guid>
  <description/>
  <content:encoded><![CDATA[As you can probably tell, I’m hugely excited about <a href="http://arxiv.org/abs/math/0507349">Joachim Kock’s paper</a>. I apologize to those of you who read it a year ago, and think I’m a bit late to the party.

Most late-stage PhD students, I imagine, have written an imaginary textbook entitled <em>Things I wish I’d known three years ago</em>. My own contribution to this genre has a snappier title – it’s called <em>Monoidal categories</em> – and since yesterday it’s been frantically rewriting itself. (The advantage of imaginary books over real ones is that they can do that.)

<!--more-->The traditional approach to monoidal units has relegated itself to a historical section, and ‘Saavedra units’ now take pride of place. But how radical to be? The radical approach is just to say that a unit is an object <em>I</em> with the property that the functors <em>I⊗–</em> and <em>–⊗I</em> are <span style="text-decoration:line-through;">equivalences</span> naturally isomorphic to the identity.<sup>*</sup> (Of course we also want an associator that satisfies the pentagon condition, just as before.) What’s radical about this is that it doesn’t <em>uniquely</em> determine a monoidal structure in the traditional sense: each isomorphism <em>I⊗I → I</em> gives a different monoidal structure. But any two of these are isomorphic via a unique isomorphism, so really it’s unique enough for any self-respecting category theorist. Should you want a traditional monoidal structure for some reason, you can just pick an isomorphism <em>I⊗I → I</em> (we know there is one) and there you are! This is just like the attitude we have always taken to things like cartesian products.

(I think there’s a good case to be made that this is a <em>better</em> definition, as well as a simpler one. We never <em>really</em> cared about the unit isomorphisms <em>λ</em> and <em>ρ</em>, it’s just that with the traditional approach we needed to know what they were so we could impose a coherence condition on them!)

Continuing the radical theme, let’s define a strong monoidal functor <em>F: <strong>C</strong> → <strong>D</strong></em> to be a functor <em>F</em> such that <em>FI ≅ I</em>, plus a natural isomorphism with components <em>F<sub>A,B</sub>: FA⊗FB → F(A⊗B)</em> satisfying the usual associator condition. If we pick a particular isomorphism <em>F<sub>I</sub>: I → FI</em>, then for every traditional monoidal structure on <em><strong>C</strong></em> there is a unique traditional monoidal structure on <em><strong>D</strong></em> for which <em>(F, F<sub>A,B</sub>, F<sub>I</sub>)</em> is a traditional monoidal functor, which is more than reasonable. (The situation for lax monoidal functors is not so obviously pretty, so I’ll sweep them under the rug until I’ve thought about them some more.)

Having tamed the unit so splendidly, it’s tempting to wonder whether the same can be done for the associativity. Is it possible for the same tensor functor to admit non-isomorphic associators (where by ‘associator’ I mean the thing to satisfy the pentagon condition)? Off the top of my head, I can only think of (essentially) one example where I know two different associators: say the category of abelian groups under biproduct, where in addition to the usual associator you can take the map <em>(a,(b,c)) ↦ ((-a,b),-c)</em>. However, this is uniquely isomorphic to the usual associator<sup>**</sup>, so it doesn’t answer the question. But I have an inkling that the answer may (disappointingly) be yes, because of something I once heard, but still don’t understand, about isomorphism classes of associators corresponding to 3-cocycles in some cohomological sense…

<strong>*</strong> For which it suffices to check that they’re full and faithful, and that <em>I⊗I</em> is isomorphic to <em>I</em>.

<strong>**</strong> In the sense that there is a monoidal isomorphism whose underlying functor is the identity that takes one to the other.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>25</wp:post_id>
  <wp:post_date>2006-06-20 20:19:02</wp:post_date>
  <wp:post_date_gmt>2006-06-20 20:19:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rethinking-monoidal-categories</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_db0c955dec319750a96c9330cdc80507</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e899a0a90126714203b4f62f5a214206</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_32720275606823d35d29b2237f83e027</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>32</wp:comment_id>
    <wp:comment_author><![CDATA[B. Bartlett]]></wp:comment_author>
    <wp:comment_author_email>b.h.bartlett@sheffield.ac.uk</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>143.167.5.104</wp:comment_author_IP>
    <wp:comment_date>2006-06-21 17:07:50</wp:comment_date>
    <wp:comment_date_gmt>2006-06-21 17:07:50</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I am also fascinated by this line of thought. As far as associators are concerned, have you read Tambara and Yamagami's paper?

Tensor Categories with Fusion Rules of Self-Duality for Finite Abelian Groups, D. Tambara and S. Yamagami, Journal of Algebra, 209, 692-707 (1998)

This is a most revealing paper in as much as it does the one thing category theorists are loath to do : it performs explicit computations. The only sad corollary is that it is not always brutally explicit in the details - for instance, it seems to interchange the use of skeletal categories with run-of-the-mill categories, and so on.

Nevertheless, the mindblowing result (to a novice like me) is that the associators on the monoidal categories of representations of the dihedral group D_8 and the quaternion group Q_8 are not equivalent - even though they have the `same underlying tensor category' (one way to interpret this last phrase is to say that their underlying fusion algebras are the same, as everyone knows).

Moreover, this paper seems to me the culmination of an idea which can be tracked back to Maclane's original example in "Categories for the Working Mathematician". At the end of Section VII. 1, he describes a counterexample pounted out to him by Isbell, showing that the associator on a skeleton of Set is nontrivial - *provided you define it to commute with the projections as usual*. For, if you forget about the projections, there is no problem in getting out a trivial associator (I think). 

It is this last sentence which seems the link between Maclane's example of Set and the representation categories of groups. In both cases there are canonical projections floating around, which the associator is supposed to commute with, and it seems to me that the whole issue of non-trivial associators is wrapped up with them.

One final thing which has always bothered me : isn't the very notion of a `tensor product' of two objects against the philosophy of higher categories? For it seems that all the coherence diagrams, etc., are consequences of some cruel dictator who has forced us to *choose* a tensor product for each pair of objects (much like the unit issue you talk about above). I know it comes from a monoidal category being a bicategory, where one must actually choose what the composition of two arrows is... so what I'm asking about is whether this notion is a good idea - should we really explicitly say what the composite of two morphisms is? I know it sounds like heresy, but it does seem the homotopy theorists have a more sensible way of working with these things.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-21 17:07:50</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>33</wp:comment_id>
    <wp:comment_author><![CDATA[Robin]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>80.176.228.148</wp:comment_author_IP>
    <wp:comment_date>2006-06-21 22:50:04</wp:comment_date>
    <wp:comment_date_gmt>2006-06-21 22:50:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[B. Bartlett: Thanks a lot for this. I don’t know the paper you cite, but from your description it sounds as though it may answer my last question. I have downloaded a copy, but I’ll have to read it slowly because it’s coming from such a (to me) unfamiliar direction. I confess that I didn’t even know there <i>was</i> such a thing as a fusion algebra, let alone what one is!

On your final point: if you don’t like the notion of having to choose a tensor product for every pair of objects (and I think you’re right not to like it!) you will probably be interested in <a href="http://maggie.cs.queensu.ca/chermida/" rel="nofollow">Hermida</a>’s <i>representable multicategories</i> approach, which does precisely what you’re asking for – and does indeed dispense with explicit coherence conditions. (Also Street’s <a href="http://www.maths.mq.edu.au/~street/Multicats.pdf" rel="nofollow">Lax monoids, pseudo-operads and convolution</a> maps out the landscape between multicategories and monoidal categories in an interesting way.) Many (most? <i>all?</i>) of the general approaches to weak n-categories use some version of the same idea, so that‘s not a heretical suggestion at all. In fact Hermida’s paper was directly motivated by Baez and Dolan’s definition of n-category.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-21 22:50:04</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>34</wp:comment_id>
    <wp:comment_author><![CDATA[John Baez]]></wp:comment_author>
    <wp:comment_author_email>baez@math.ucr.edu</wp:comment_author_email>
    <wp:comment_author_url>http://math.ucr.edu/home/baez/</wp:comment_author_url>
    <wp:comment_author_IP>68.121.242.41</wp:comment_author_IP>
    <wp:comment_date>2006-06-22 23:51:29</wp:comment_date>
    <wp:comment_date_gmt>2006-06-22 23:51:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Bruce Bartlett writes:

<i>
One final thing which has always bothered me : isn’t the very notion of a `tensor product’ of two objects against the philosophy of higher categories?
</i>

More precisely, it's not the notion of <em>a</em> tensor product of objects that's the problem - it's the notion of <em>the</em> tensor product that's the problem.
  
<i>
For it seems that all the coherence diagrams, etc., are consequences of some cruel dictator who has forced us to *choose* a tensor product for each pair of objects (much like the unit issue you talk about above).
</i>

To some extent this is true, and this why James Dolan and I came up with our opetopic definition of n-category, in which <a HREF="http://front.math.ucdavis.edu/q-alg/9702014" rel="nofollow">all composites are defined only up to canonical equivalence</A>.  As bosker notes, one can chop this down to get Hermida's version of "representable multicategory", where objects only have <em>a</em> tensor product.  And, our work was heavily influence by Makkai's concept of an "anafunctor" F: C -&gt; D, which assigns to each object in C not a specific object of D but only the <em>universal property</em> of an object in D.  A good example is the "tensor product", normally treated as a functor from Vect x Vect to Vect: it's really just an anafunctor.  

Hermida and Makkai have subsequently worked on opetopic n-categories, calling them "multicategories".  So have Tom Leinster and Eugenia Cheng.  It's a philosophically attractive approach, but leads to technical problems of its own, which have not fully been resolved yet.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-22 23:51:29</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>43</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>80.176.228.148</wp:comment_author_IP>
    <wp:comment_date>2006-06-30 15:18:48</wp:comment_date>
    <wp:comment_date_gmt>2006-06-30 15:18:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hmm, <i>something</i> is wrong here. Presumably with my example, though I can’t see what.

In the example I gave, the only automorphism of <i>I</i> is the identity, which makes the abelian group <i>H</i> trivial. So actually I’ve described a non-trivial 3-cocycle on Z/2 with coefficients in the trivial group, which is plainly impossible. But I can’t see what I’ve done wrong…

Oh yes, I get it. The problem is that the <i>trivial</i> associator fails to be natural! We have <i>x⊗(1_X⊗1_X) = x⊗1_I = x</i> but <i>(x⊗1_X)⊗1_X = 1_I⊗1_X = 1_X</i>. The way to fix this is to add another automorphism on <i>I</i>, and then we do get the pair of examples that you describe.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-30 15:18:48</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>42</wp:comment_id>
    <wp:comment_author><![CDATA[John Baez]]></wp:comment_author>
    <wp:comment_author_email>baez@math.ucr.edu</wp:comment_author_email>
    <wp:comment_author_url>http://math.ucr.edu/home/baez/</wp:comment_author_url>
    <wp:comment_author_IP>68.123.250.240</wp:comment_author_IP>
    <wp:comment_date>2006-06-29 20:14:05</wp:comment_date>
    <wp:comment_date_gmt>2006-06-29 20:14:05</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for posting my second comment - I tried to post it repeatedly, because it wasn't going through.  Sorry.

You write:

<i>
Last night I figured out a simple example where there are non-isomorphic associators (which is in fact a 2-group).
</i>

Cool!

<i>
Using the correspondence explained in your 2-groups paper, I guess I’ve just described a non-trivial normalized 3-cocycle on Z/2 with coefficients in Z/2. Put like that, it sounds very fancy!
</i>

Yes, but it's all relative: I believe more mathematicians would think <i>this</i> sounds very fancy: "a monoidal category with Z/2 as objects and Z/2 as the endomorphisms of any object, whose associator is not the identity".

Luckily, they're the exact same thing!  And Mac Lane played a big role in developing both group cohomology and monoidal categories:

In fact,

H^3(Z/2,Z/2) = Z/2 

so there are just two inequivalent monoidal categories with Z/2 as objects and Z/2 as endomorphisms of any object.  

Here's how Mac Lane would figure this out: he'd show that the infinite-dimensional projective space

RP^infinity

was a space with fundamental group Z/2, and all higher homotopy groups
trivial.  He showed this implies

H^n(RP^infinity,A) = H^n(Z/2,A)

where on the left we have cohomology of spaces and on the right we have cohomology of groups!  Using this, and using standard methods of calculating cohomology of spaces, one gets

H^n(Z/2,Z/2) = Z/2

for all n.

This implies some fun stuff!  For example

H^4(Z/2,Z/2) = Z/2

classifies monoidal <i>2-categories</i> with Z/2 as objects and Z/2 as endo-2-morphisms of any object!  So, there are just two of these, up to equivalence.  They differ in their "pentagonator", which defines a 4-cocycle.

And so on, ad infinitum....





H]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-29 20:14:05</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>39</wp:comment_id>
    <wp:comment_author><![CDATA[Robin]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>80.176.228.148</wp:comment_author_IP>
    <wp:comment_date>2006-06-23 11:44:48</wp:comment_date>
    <wp:comment_date_gmt>2006-06-23 11:44:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[John: This is very cool! Thanks a lot.

Sorry your second comment didn’t come through immediately, btw. I had to approve it, because it contains more than one link! I’ve changed that setting now, so it ought to work in future. (I’m still getting used to this software – I’ve only just discovered how to make it call me by my name!)

Last night I figured out a simple example where there are non-isomorphic associators (which is in fact a 2-group). Take two objects <i>I</i> and <i>X</i>, with one non-identity arrow <i>x: X → X</i> with <i>xx=1</i>. Define a tensor ⊗ for which <i>I</i> is a strict unit, and <i>X⊗X = I</i>. There is a trivial associator, but you can also define an associator <i>α</i> which is trivial except for <i>α_X,X,X = x</i>.  These monoidal categories are not equivalent, for suppose we had a monoidal equivalence <i>F</i> from one to the other. The underlying functor has to be the identity (that’s the only equivalence there is!) and, by considering the associator condition for the cases <i>I⊗I⊗X</i> and <i>X⊗I⊗I</i>, the monoidality part must be trivial too. But then the associator condition fails for <i>X⊗X⊗X</i>.

Using the correspondence explained in your 2-groups paper, I guess I’ve just described a non-trivial normalized 3-cocycle on <i><b>Z</b>_2</i> with coefficients in <i><b>Z</b>_2</i>. Put like that, it sounds very fancy!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-23 11:44:48</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>38</wp:comment_id>
    <wp:comment_author><![CDATA[John Baez]]></wp:comment_author>
    <wp:comment_author_email>baez@math.ucr.edu</wp:comment_author_email>
    <wp:comment_author_url>http://math.ucr.edu/home/baez/</wp:comment_author_url>
    <wp:comment_author_IP>68.121.242.41</wp:comment_author_IP>
    <wp:comment_date>2006-06-23 00:11:34</wp:comment_date>
    <wp:comment_date_gmt>2006-06-23 00:11:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[bosker writes:

<i>
Is it possible for the same tensor functor to admit non-isomorphic associators (where by ‘associator’ I mean the thing to satisfy the pentagon condition)?
</i>

Sure!  Otherwise we wouldn't care much about associators.

<i>
But I have an inkling that the answer may (disappointingly) be yes, because of something I once heard, but still don’t understand, about isomorphism classes of associators corresponding to 3-cocycles in some cohomological sense…
</i>

That's exactly right, at least for <b>2-groups</b>: monoidal categories where every morphism has an inverse and every object has a weak inverse.  2-groups are classified up to equivalence by: 1) the group of isomorphism classes of objects, G, 2) the group of automorphisms of the unit object, an abelian group A, 3) the obvious action of G on A, and 4) a function

a: G^3 -&gt; A

coming from the associator.  This function a satisfies an equation - the pentagon identity in disguise - which is also known as the "3-cocycle condition" in group cohomology.  And, two associators give equivalent 2-groups iff these cocycles differ by a coboundary.

This is great, because generalizing it to higher categories, we ultimately see that <a HREF="http://math.ucr.edu/home/baez/chicago.pdf" rel="nofollow">cohomology theory is part of n-category theory</A>, and everything makes wonderful sense.  

The idea that 2-groups are classified by 3-cocycles goes back to the thesis of Madame Sinh, a student of Grothendieck.  (I follow the sexist but charming tradition of calling her "Madame" - everyone seems to do that.)  Joyal and Street gave a very precise statement and proof in their paper <em>Braided tensor categories</em>, but then they didn't publish this version of their paper - they left it out of the final version.  So, Aaron Lauda and I decided to include a complete proof in <a HREF="http://front.math.ucdavis.edu/math.QA/0307200" rel="nofollow">our paper on 2-groups</A>.  It should be easy to follow even if you're not familiar with group cohomology.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2006-06-23 00:11:34</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1948</wp:comment_id>
    <wp:comment_author><![CDATA[J. Siehler]]></wp:comment_author>
    <wp:comment_author_email>maillwillnotbepublished@mailinator.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>137.113.69.140</wp:comment_author_IP>
    <wp:comment_date>2007-11-24 13:35:02</wp:comment_date>
    <wp:comment_date_gmt>2007-11-24 13:35:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[If you want more explicit calculations in the vein of Tambara &amp; Yamagami, I did an extension of their work which you can find here:
http://www.msp.warwick.ac.uk/agt/2003/03/p025.xhtml

It gives rather explicit associators for tensor categories where there is only simple, noninvertible object.  D8 and Q8 Representations, as in T-Y are an example.  A <i>family</i> of examples is given by representations of the affine group over a finite field.  The paper shows it's possible to have "nonstandard" associators in these categories that look like representations of the affine group.  

Almost everybody that messes with these - ie, trying to solve pentagons by giving explicit matrices - inevitably goes through a stage where they say "Hey, wait, why can't I always do this just by using the identity for all my associators!"  And the answer is "the identity matrix is not the same as the identity map."  Or, "there IS no identity map between DIFFERENT OBJECTS."]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2007-11-24 13:35:02</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Radical lax monoidal functors</title>
  <link>https://bosker.wordpress.com/2006/06/22/radical-lax-monoidal-functors/</link>
  <pubDate>Thu, 22 Jun 2006 19:57:47 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/2006/06/22/radical-lax-monoidal-functors/</guid>
  <description/>
  <content:encoded><![CDATA[In my <a href="/2006/06/20/rethinking-monoidal-categories/">previous entry</a>, I deferred the problem of defining lax monoidal functors between radical monoidal categories. But yesterday evening on the train I realised that there is a cute way to think about lax monoidal functors, which makes it possible to simply calculate the answer.

Suppose we have monoidal categories <i><b>C</b></i> and  <i><b>D</b></i>, and a functor <i>F: <b>C</b> → <b>D</b></i>. To give a lax monoidal structure on <i>F</i> is to give a monoidal structure on the comma category <i><b>C</b>↓F</i>, such that the projections <i><b>C</b>↓F → <b>C</b></i> and <i><b>C</b>↓F → <b>D</b></i> are strict monoidal.

I wasn’t going to explain that, because it’s fun to figure it out and rather dull to explain, but in the end I decided to put an explanation at the bottom of this post (appendix B).<!--more--> Anyway, looking at it this way makes it obvious how to radicalise it. We want a radical monoidal structure on <i><b>C</b>↓F</i>, such that the projections are strict monoidal in the obvious radical sense (i.e. a functor is strict monoidal when it strictly preserves the tensor, associator and unit object).

Such a monoidal structure amounts to the usual natural transformation <i>φ<sub>X,Y</sub>: FX⊗FY → F(X⊗Y)</i>, subject to the usual associativity requirement, together with an arrow <i>φ<sub>I</sub>: I → FI</i> that is isomorphic in the comma category to</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/comma-phi-i2.png" alt="comma-phi-i2.png" width="215" height="27" /></p>
<p>The other requirement is that the functors “tensoring with <i>φ<sub>I</sub></i> in the comma category” should be full and faithful. That works out equivalent to asking that the composites</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/kock-comp-1.png" alt="Kock composite (left unit)" width="220" height="27/"></p>
<p>and</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/kock-comp-2.png" alt="Kock composite (right unit)" width="220" height="25" /></p>
<p>be monic.</p>

(I ought to justify that last claim, because it’s not <i>completely</i> obvious, so I've done that in appendix A below.)

Ultimately all we have done here is to recover the expected definition, though this analysis makes it clear that the arrows displayed above need only be <i>monic</i>. In fact they will always turn out to be invertible of course, so in practice this difference is not terribly important. More importantly though, we have a compelling reason to believe that this is the <i>right</i> definition.

<b>Appendix A</b>
I’ll just do one of the two cases. Suppose we have a morphism, in the comma category, from <i>(I,I,φ<sub>I</sub>)⊗(A,X,f)</i> to <i>(I,I,φ<sub>I</sub>)⊗(B,Y,g)</i>. Because tensoring with a unit in <i><b>C</b></i> and <i><b>D</b></i> is full and faithful, this morphism is <i>(I⊗h,I⊗k)</i> for some unique <i>h: A → B</i> and <i>k: X → Y</i>. So we have a commutative diagram like this:</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/comma-hk.png" alt="comma-hk.png" width="272" height="126" /></p>
<p>The full-faithfulness condition thus boils down to the requirement that, whenever we have maps <i>h</i> and <i>k</i> that make the diagram above commute, the diagram</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/comma-square-hk.png" alt="comma-square-hk.png" width="120" height="122" /></p>
<p>also commutes. Now consider the diagram</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/comma-three-squares.png" alt="comma-three-squares.png" width="375" height="123/"></p>
<p>The centre and right squares always commute, and our condition requires that the left square commute whenever the outside does. It’s easy to see that this corresponds to the map</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/kock-comp-1.png" alt="Kock composite (left unit)" width="220" height="27/"></p>
<p>being monic, as claimed.</p>

<b>Appendix B</b>
Suppose that <i><b>C</b></i> and <i><b>D</b></i> are traditional monoidal categories. We want to show that putting a traditional monoidal structure on <i><b>C</b>↓F</i>, that is strictly preserved by the projections, amounts to putting a traditional lax monoidal structure on <i>F</i>.

An object of <i><b>C</b>↓F</i> consists of an object <i>A∈<b>D</b></i>, an object <i>X∈<b>C</b></i>, and an arrow <i>f: A → FX</i>. A morphism <i>m: (A,X,f) → (B,Y,g)</i> is a pair of arrows <i>m<sub>0</sub>: A → B</i> and <i>m<sub>1</sub>: X → Y</i> such that the square</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/comma-square.png" alt="Morphism of comma category" width="141" height="113" /></p>
<p>commutes. So, if we want to define a tensor product on this comma category that makes the projections strict monoidal, that means we need some operation that takes two objects <i>(A,X,f)</i> and <i>(B,Y,g)</i>, and gives us a object <i>(A⊗B,X⊗Y,h)</i>. The objects have to be <i>A⊗B</i> and <i>X⊗Y</i> if the projections are to be strict monoidal, so we only have to worry about defining <i>h</i>. Moreover, the projection requirement <i>completely</i> determines the behaviour of our tensor on morphisms. Now, to define the tensor on objects, in particular we need to define <i>(FA,A,1<sub>FA</sub>)⊗(FB,B,1<sub>FB</sub>)</i>, which is an arrow <i>φ<sub>A,B</sub>: FA⊗FB → F(A⊗B)</i>. And that totally determines the general case, for the following reason. Suppose we have objects <i>(A,X,f)</i> and <i>(B,Y,g)</i>: certainly the diagrams</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/comma-square-f.png" width="114" height="121" /> and <img src="http://bosker.files.wordpress.com/2006/06/comma-square-g.png" width="106" height="113" /></p>
<p>commute, which means that <i>(f,1)</i> is a morphism <i>(A,X,f) → (FX,X,1)</i> in the comma category, and so is <i>(g,1): (B,Y,g) → (FY,Y,1)</i>. Therefore the square</p>
<p class="center"><img src="http://bosker.files.wordpress.com/2006/06/comma-square-fg.png" alt="f tensor g" width="163" height="124" /></p>
<p>must also commute, where <i>(A⊗B,X⊗Y,h)</i> is the tensor product, in the comma category, of <i>(A,X,f)</i> and <i>(B,Y,g)</i>. So <i>h</i> is equal to <i>φ<sub>X,Y</sub>(f⊗g)</i>.

For the unit, we need an object of the comma category that projects onto <i>I</i> from both ends, which is to say an arrow <i>φ<sub>I</sub>: I → FI</i>. The three axioms in the definition of lax monoidal functor correspond to our requirement that the projections should preserve the structural isomorphisms.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>27</wp:post_id>
  <wp:post_date>2006-06-22 19:57:47</wp:post_date>
  <wp:post_date_gmt>2006-06-22 19:57:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>radical-lax-monoidal-functors</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
</item>
<item>
  <title>Games I</title>
  <link>https://bosker.wordpress.com/2007/07/03/games-i/</link>
  <pubDate>Tue, 03 Jul 2007 18:05:50 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/2007/07/03/games-i/</guid>
  <description/>
  <content:encoded><![CDATA[When I started doing research, I mostly worked on categories of games. I even went so far as to write a <a href="http://www.cs.man.ac.uk/~houstorx/continuation.pdf">first-year report</a> that suggested — even confidently claimed — that I would write a thesis on the subject. Well, I'm writing that thesis now, and games appear only in passing in a single paragraph. But recently, one or two people have expressed some interest in some of the ideas in that first-year report, so I'd like to flesh out one of idea that is only sketched very vaguely in what I wrote.

The starting point is the idea that a simple category of games is (equivalent to) the initial model of a certain simple theory. <!--more-->Before I explain, I should make it clear that this observation is not original: it's really just a different way of thinking about some of the ideas of <a href="http://www.tac.mta.ca/tac/volumes/18/2/18-02abs.html">Polarized category theory, modules, and game semantics</a> (Cockett and Seely).

Say that a <em>lift operator</em> on a category $latex \mathbb{C}$ is a functor $latex \mathop\uparrow: \mathbb{C} \to\mathbb{C}^\mathrm{op}$, self-adjoint on the right. That means there is a natural isomorphism
<p align="center">$latex \mathbb{C}(X, \mathop\uparrow Y)\cong\mathbb{C}(Y, \mathop\uparrow X)$</p>
or alternatively that there is a natural isomorphism $latex \eta$ — the unit of the adjunction — with components
<p align="center">$latex \eta_X: X\to\mathop\uparrow\mathop\uparrow X$</p>
such that the composite
<p align="center">$latex \mathop\uparrow X \mathrel{\mathop{\longrightarrow}\limits^{\eta_{\mathop\uparrow X}}}\mathop\uparrow\mathop\uparrow\mathop\uparrow X \mathrel{\mathop{\longrightarrow}\limits^{\mathop\uparrow\eta_X}} \mathop\uparrow X$</p>
is the identity.

Now say that an lp-category is a category equipped with a lift operator and finite products. I claim that the initial lp-category is equivalent to the category of <em>finite, simple games, with deterministic, winning strategies</em>.

There's a little subtlety here, which perhaps is worth mentioning. Products are defined in a non-algebraic way, by a universal property, but if we want to talk about the initial model then we need our structure to be algebraic. This issue is usually glossed over, because there is an easy way of dealing with it — at least if you believe in the axiom of choice. If you <em>choose</em> a product cone for each pair of objects, and you choose a terminal object, these choices suffice to determine a unique monoidal structure representing the product; a functor strictly preserves this monoidal structure just when it takes each chosen product cone to a chosen product cone in the target. It's actually more convenient for us to have easy access to $latex n$-ary products for arbitrary finite $latex n$, so we shall go further and insist that a product cone be chosen for every finite set of objects. (This gives rise to what Tom Leinster calls an <em>unbiased</em> monoidal structure on the category.)

Having found a suitably algebraic notion of lp-category, there is clearly an initial such thing, by the usual syntactic shenanigans. Let's call it $latex \mathbf{LP}$. Every object of $latex \mathbf{LP}$ is isomorphic to one of the form
<p align="center">$latex \prod_{i\in I} \mathop\uparrow A_i$</p>
where each $latex A_i$ is of the same form, recursively. (The recursion is grounded by the empty product, i.e. the terminal object, which we'll write as $latex 1$.)

Thus the objects of $latex \mathbf{LP}$ correspond to finite trees. For example, the object $latex \mathop\uparrow(\mathop\uparrow\mathop\uparrow1\times\mathop\uparrow1) \times \mathop\uparrow1$ can be drawn as
<p style="text-align:center;"><a title="A tree" href="http://bosker.files.wordpress.com/2007/07/tree.png"><img src="http://bosker.files.wordpress.com/2007/07/tree.thumbnail.png" alt="A tree" /></a></p>
Now, the claim is that a morphism $latex X\to Y$ in $latex \mathbf{LP}$ is a total strategy for the game $latex X\multimap Y$, where the trees $latex X$ and $latex Y$ are regarded as games.

It's pretty clear that at least <em>some</em> of the morphisms of $latex \mathbf{LP}$ correspond to strategies in a reasonably simple way. I'll give a recursive definition of "strategic" morphisms:
<ol>
	<li>Given a collection $latex (f_i: A \to \mathop\uparrow B_i)$ of strategic morphisms, the tuple $latex \langle f_i\rangle: A \to \prod_i \mathop\uparrow B_i$ is strategic. (In particular the case where the collection is empty implies that the unique map $latex A \to 1$ is strategic, which constitutes a base case for the recursion.) This represents the strategy where, when the opening O-move is in component $latex i$, we then play according to strategy $latex f_i$.</li>
	<li>Given a collection of objects $latex (X_i | i \in I)$, and a strategic morphism $latex f: A \to X_n$ for some $latex n \in I$, the composite
<p align="center">$latex \prod_i \mathop\uparrow(X_i)\mathrel{\mathop{\longrightarrow}\limits^{\pi_n}} \mathop\uparrow X_n\mathrel{\mathop{\longrightarrow}\limits^{\mathop\uparrow f}}\mathop\uparrow A$</p>
is strategic. This is the strategy in which the (unique) opening O-move is replied to in component '$latex n$' on the left, and then play continues according to the strategy $latex f$.</li>
	<li>Given a collection of objects $latex (Y_i | i \in I)$, and a strategic morphism $latex f: A \to Y_n$ for some $latex n \in I$, the composite
<p align="center">$latex A \mathrel{\mathop{\rightarrow}\limits^f}Y_n\mathrel{\mathop{\longrightarrow}\limits^{\eta_{Y_n}}} \mathop\uparrow\mathop\uparrow Y_n\mathrel{\mathop{\longrightarrow}\limits^{\mathop\uparrow\pi_n}}\mathop\uparrow(\prod_i\mathop\uparrow Y_i)$</p>
is strategic. This corresponds to the strategy in which the opening O-move is replied to in component '$latex n$' on the right, and then play continues according to $latex f$.</li>
</ol>
All that remains is to show that every morphism is strategic. It's easy enough to show that every <em>identity</em> morphism is strategic, by induction over the tree structure of the object and using rules 1 and 2. It's also immediate that the basic morphisms $latex \eta_A$ and the projections are strategic and 2 implies in particular that the lift of a strategic morphism is strategic. It is trivial to show, using 1, that the strategic morphisms are closed under tupling. Hence it remains only to show that the composite of two strategic morphisms is strategic.

Now, most of the cases are trivial. The one that isn't is the case of a tuple of 3-maps followed by a 2-map. (Of course this is the case where play continues on the hidden board, so you'd expect this to be the interesting case.) The projection extracts one of the elements of the tuple, so it amounts to considering the composite
<p align="center">$latex A \mathrel{\mathop{\longrightarrow}\limits^{f}} Y_n \mathrel{\mathop{\longrightarrow}\limits^{eta_(Y_n)}} \mathop\uparrow \mathop\uparrow Y_n \mathrel{\mathop{\longrightarrow}\limits^{\mathop\uparrow \pi_n}} \mathop\uparrow (\prod_i \mathop\uparrow Y_i) \mathrel{\mathop{\longrightarrow}\limits^{\mathop\uparrow g}} \mathop\uparrow B$</p>
where $latex f$ and $latex g$ are strategic. Since $latex g$ is a map into a product, we can go further and extract the appropriate component of $latex g$, which is clearly also strategic, so it suffices to show that the composite
<p align="center">$latex A \mathrel{\mathop{\longrightarrow}\limits^{f}} Y \mathrel{\mathop{\longrightarrow}\limits^{\eta_Y}} \mathop\uparrow \mathop\uparrow Y \mathrel{\mathop{\longrightarrow}\limits^{\mathop\uparrow g}} \mathop\uparrow B$</p>
is strategic whenever $latex f$ and $latex g$ are. This may be proved by induction over $latex g$: if $latex g$ is of type 2, then we have
<p align="center">$latex A \mathrel{\mathop{\longrightarrow}\limits^{f}} Y \mathrel{\mathop{\longrightarrow}\limits^{\eta_Y}} \mathop\uparrow \mathop\uparrow Y \mathrel{\mathop{\longrightarrow}\limits^{\mathop\uparrow \mathop\uparrow h}} \mathop\uparrow \mathop\uparrow B_n \mathrel{\mathop{\longrightarrow}\limits^{\mathop\uparrow pi_n}} \mathop\uparrow \prod_i \mathop\uparrow B_i$</p>
which, by naturality of $latex \eta$, is of type 3. If $latex g$ is of type 3, then we have $latex Y = \prod_i \mathop\uparrow Y_i$, and the map is
<p align="center">$latex A \mathrel{\mathop{\longrightarrow}\limits^{f}} Y \mathrel{\mathop{\longrightarrow}\limits^{\eta_Y}} \mathop\uparrow \mathop\uparrow Y \mathrel{\mathop{\longrightarrow}\limits^{\mathop\uparrow \mathop\uparrow \pi_n}} \mathop\uparrow \mathop\uparrow \mathop\uparrow Y_n \mathrel{\mathop{\longrightarrow}\limits^{\mathop\uparrow\eta_(Y_n)}} \mathop\uparrow Y_n \mathrel{\mathop{\longrightarrow}\limits^{\mathop\uparrow h}} \mathop\uparrow B$</p>
for some $latex h$ that is simpler than $latex g$. Using the naturality of $latex \eta$ and the adjunction triangle, this is
<p align="center">$latex A \mathrel{\mathop{\longrightarrow}\limits^{f}} Y \mathrel{\mathop{\longrightarrow}\limits^{\pi_n}} \mathop\uparrow Y_n \mathrel{\mathop{\longrightarrow}\limits^{\mathop\uparrow h}} \mathop\uparrow B$</p>
and the inductive hypothesis applies.

This is getting long, so I'll continue the story in <a title="Games II" href="http://bosker.wordpress.com/2007/07/05/games-ii/">another post</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>36</wp:post_id>
  <wp:post_date>2007-07-03 18:05:50</wp:post_date>
  <wp:post_date_gmt>2007-07-03 18:05:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>games-i</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2882</wp:comment_id>
    <wp:comment_author><![CDATA[Games II &laquo; Bosker Blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://bosker.wordpress.com/2007/07/05/games-ii/</wp:comment_author_url>
    <wp:comment_author_IP>72.233.69.24</wp:comment_author_IP>
    <wp:comment_date>2013-01-07 19:01:34</wp:comment_date>
    <wp:comment_date_gmt>2013-01-07 18:01:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Last time, I explained how the category of finite simple games is equivalent to the initial lift-product category. Now I want to show how this fact can be used to find nice ways of representing strategies. [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1357581694</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1357581695.0529320240020751953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-01-07 18:01:34</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Promonads</title>
  <link>https://bosker.wordpress.com/?p=39</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=39</guid>
  <description/>
  <content:encoded><![CDATA[
It often happens that categorical concepts can be usefully generalised, simply by replacing functors with profunctors. This is certainly the case with monads. A monad in <strong>Prof</strong> is sometimes called a <em>promonad</em>, and I'll stick with that. So, a promonad on a category $latex \mathbb{C}$ consists of a profunctor $latex P: \mathbb{C}\mathrel{\rlap{\(\;\,+\)}\mathord{\longrightarrow}}\mathbb{C}$ together with natural transformations $latex \eta: 1\Rightarrow P$ and $latex \mu: PP\Rightarrow P$, satisfying the monad equations. More concretely, we can say that $latex P$ is a functor $latex \mathbb{C}^{\mathrm{op}}\times\mathbb{C}\to\mathrm{Set}$, that $latex \eta$ is a natural transformation with components $latex \eta_{A,B}: \mathbb{C}(A,B)\to P(A,B)$, and $latex \mu$ is a transformation with components $latex \mu_{A,X,B}: P(A,X)\times P(X,B) \to P(A,B)$, natural in $latex A$ and $latex B$ and dinatural in $latex X$.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>39</wp:post_id>
  <wp:post_date>0000-00-00 00:00:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
</item>
<item>
  <title>Games II</title>
  <link>https://bosker.wordpress.com/2007/07/05/games-ii/</link>
  <pubDate>Thu, 05 Jul 2007 10:52:54 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/2007/07/05/games-ii/</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://bosker.wordpress.com/2007/07/03/games-i/" title="Games I">Last time</a>, I explained how the category of finite simple games is equivalent to the initial lift-product category. Now I want to show how this fact can be used to find nice ways of representing strategies.

<!--more-->

By definition, for every lp-category $latex \mathbb{C}$ there is a unique functor
<p align="center">$latex \mathbf{LP}\to\mathbb{C}$</p>

that strictly preserves the lp-structure. Where this functor is faithful, the morphisms of the target category $latex \mathbb{C}$ can be used to represent strategies. So we'd like to find some (at least sufficient) conditions under which this functor is faithful.

Before I continue, perhaps I should give some examples of lp-categories. While categories with finite products are generally recognised to abound, the lift structure is probably less familiar. However, there is no shortage of them. In a symmetric monoidal closed category, every object $latex X$ induces a lift operator $latex (-\multimap X)$, since we have
<p align="center">$latex \mathbb{C}(A, B\multimap X) \cong \mathbb{C}(A\otimes B, X)\cong\mathbb{C}(B\otimes A, X)\cong\mathbb{C}(B, A\multimap X).$</p>

For example, the contravariant powerset functor $latex 2^-$ on $latex \mathrm{Set}$ is a lift operator, as is the dual space operator on the category of vector spaces. Many natural examples — with the notable exception of the lift operator on $latex \mathbf{LP}$ itself — are of this form.

An example that will be important in a moment is the category $latex \mathrm{Rel}*$ of pointed sets and point-reflecting relations. An object of $latex \mathrm{Rel}*$ is a pair $latex (X, *)$ of a set $latex X$ and a chosen element $latex *\in X$. A morphism $latex R: (X,*)\to(Y,*)$ is a relation $latex X\mathrel{\rlap{\(\;\,+\)}\mathord{\longrightarrow}} Y$ such that $latex (x,*)\in R$ implies $latex x=*$. Alternatively, we could define a morphism to be a relation $latex X-\{*\} \mathrel{\rlap{\(\;\,+\)}\mathord{\longrightarrow}} Y$. This category is symmetric monoidal closed: the tensor is defined as $latex (X,*)\otimes(Y,*) = (X\times Y, \langle *,*\rangle)$ with unit $latex I=(\{*\},*)$. The internal hom is a semi-coalesced product:
<p align="center">$latex (X,*)\multimap(Y,*) = (X\times(Y-\{*\})+\{*\}, *).$</p>

We're particularly interested in the lift operator $latex \mathop\uparrow X = X\multimap I$, which adds a single element to the set $latex X$ and points to the new element.

Actually, there is a general recipe for constructing new lp-categories from old, of which the above is an example. Take an lp-category $latex \mathbb{C}$, and a 'lifting' object $latex L\in\mathbb{C}$. Consider the comonad $latex L\times-$, and pass to its co-Kleisli category $latex \mathbb{C}_{L\times-}$. This has products given as in $latex \mathbb{C}$, and a lift operator given as $latex \mathop\uparrow(L\times-)$, where $latex \mathop\uparrow$ is the lift operator of $latex \mathbb{C}$. This construction may be used to construct non-trivial lp-categories from trivial ones. In the above, we started with $latex \mathrm{Rel}$, which has a trivial lift given by the equivalence between $latex \mathrm{Rel}$ and $latex \mathrm{Rel}^{\mathrm{op}}$, and took the one-element set (tensor unit) as the lifting object.

<strong>Proposition</strong>. Let $latex \mathbb{C}$ be an lp-category. If:
<ol>
	<li> The lift functor is faithful,</li>
	<li> For every span $latex X \mathrel{\mathop{\longleftarrow}\limits^{f}} B \mathrel{\mathop{\longrightarrow}\limits^{g}} Y$, the diagram
<p align="center"><img src="http://bosker.files.wordpress.com/2007/07/square-diagram1.png" alt="Square diagram" width="201" height="169" /></p>

does not commute.</li>
	<li> Given finite collections $latex (X_i | i\in I)$ and $latex (Y_j | j\in J)$ of objects,
indices $latex m\in I$ and $latex n\in J$, and maps $latex f: \prod_j \mathop\uparrow Y_j \to X_m$
and $latex g: \prod_i \mathop\uparrow X_i \to Y_n$, the diagram
<p align="center"><img src="http://bosker.files.wordpress.com/2007/07/pentagon-diagram.png" alt="Pentagon diagram" width="288" height="169" /></p>

does not commute.</li>
</ol>
then the canonical functor $latex \mathbf{LP}\to\mathbb{C}$ is faithful.

<em>Proof.</em> Recall from <a href="/2007/07/03/games-i/">Games I</a> the recursive construction of the morphisms of $latex \mathbf{LP}$. We'll show that, in a category satisfying the conditions above, this construction produces distinct morphisms of $latex \mathbb{C}$. Since the tupling operation is automatically faithful, it suffices to consider morphisms whose target is a lift, i.e. morphisms
<p align="center">$latex \prod_i\mathop\uparrow X_i\to\mathop\uparrow\prod_j\mathop\uparrow Y_j.$</p>

Such a morphism is either
<p align="center">$latex \prod_i\mathop\uparrow X_i \mathrel{\mathop{\longrightarrow}\limits^{\pi_m}} \mathop\uparrow X_m \mathrel{\mathop{\longrightarrow}\limits^{\mathop\uparrow f}} \mathop\uparrow\prod_j\mathop\uparrow Y_j$</p>

for some $latex m\in I$ and $latex f: \prod_j\mathop\uparrow Y_j\to X_n$, or
<p align="center">$latex \prod_i\mathop\uparrow X_i \mathrel{\mathop{\longrightarrow}\limits^{g}} Y_n \mathrel{\mathop{\longrightarrow}\limits^{\eta_{Y_n}}}\mathop\uparrow\mathop\uparrow Y_n \mathrel{\mathop{\longrightarrow}\limits^{\mathop\uparrow\pi_n}} \mathop\uparrow\prod_j\mathop\uparrow Y_j$</p>

for some $latex n\in J$ and $latex g: \prod_i\mathop\uparrow X_i \to Y_n$. We shall write the former as $latex L_m(f)$, and the latter as $latex R_n(g)$. Notice that $latex L_n(f)$ corresponds, under the lifting adjunction, to $latex R_n(f)$. Now, condition 1 implies that $latex L_m(f)\neq L_m(g)$ whenever $latex f\neq g$, and similarly $latex R_n(f)\neq R_n(g)$ whenever $latex f\neq g$. Condition 2 implies that $latex L_m(f)\neq L_n(g)$ whenever $latex m\neq n$, and similarly for $latex R$. And finally, condition 3 implies that $latex L_m(f)\neq R_n(g)$ for all suitable $latex m$, $latex n$, $latex f$ and $latex g$.

For example, $latex \mathrm{Set}$ with the powerset lift fails condition 2. On the other hand, $latex \mathrm{Rel}*$ does satisfy all three. Therefore strategies may be faithfully represented by relations, in such a way that composition of strategies corresponds to relational composition. This is the standard relational interpretation of games, where a strategy $latex X\to Y$ is represented by a relation between the positions of $latex X$ and the positions of $latex Y$.

More refined interpretations are possible, along the same lines. For example, there is a category $latex \mathrm{Coh}*$ of pointed coherence spaces, built from $latex \mathrm{Coh}$ in the same way as $latex \mathrm{Rel}*$ is built from $latex \mathrm{Rel}$. In other words, $latex \mathrm{Coh}*$ is the co-Kleisli category of $latex I\times-$ in $latex \mathrm{Coh}$. This category also satisfies the conditions of the proposition above — clearly so, since it has a faithful lp-functor to $latex \mathrm{Rel}*$ that forgets the coherence structure. Therefore the set of positions of a game may be given the structure of a coherence space in such a way that strategies are represented by coherent relations. This is more or less obvious in the present setting, though it takes some real work to prove by hand.

In a similar way, one can start instead with Melliès's category of <em>hypergraphs</em>, to obtain an even more refined interpretation. Although it's getting closer, this interpretation is still not <em>full</em>, though we can characterise its image without too much trouble: a relation lies in the image just when it is 'downward complete' in the sense of Definition 2.10 of my report. This is not as easy as the faithfulness proofs above, but it's not hard either. <a href="/2007/07/03/games-i/">Games I</a> shows that the image consists of those morphisms that satisfy the conditions of my Lemma 2.8, and then we can appeal to Propositions 2.11, 2.12 and 2.19 from the report. With the exception of those three results, I think all the other material of Chapter 2 is subsumed by the approach presented here.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>48</wp:post_id>
  <wp:post_date>2007-07-05 10:52:54</wp:post_date>
  <wp:post_date_gmt>2007-07-05 10:52:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>games-ii</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="categories"><![CDATA[categories]]></category>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <category domain="post_tag" nicename="games"><![CDATA[games]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2332</wp:comment_id>
    <wp:comment_author><![CDATA[Games I &laquo; Bosker Blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://bosker.wordpress.com/2007/07/03/games-i/</wp:comment_author_url>
    <wp:comment_author_IP>74.200.247.247</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 13:28:17</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 12:28:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] This is getting long, so I&#8217;ll continue the story in another post. [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305204647.8986";s:7:"message";s:55:"Akismet cleared this comment during an automatic retry.";s:5:"event";s:10:"cron-retry";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1305203297.577";s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305203514</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305203514.5147";s:7:"message";s:45:"bosker changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 12:28:17</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Reboot</title>
  <link>https://bosker.wordpress.com/2009/05/23/reboot/</link>
  <pubDate>Sat, 23 May 2009 14:19:20 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=58</guid>
  <description/>
  <content:encoded><![CDATA[I've been thinking about restarting this blog for more than a year, but my plans to do so were always so ambitious that I never completed them: the charming essay <a title="Procrastination and Perfectionism" href="http://www.structuredprocrastination.com/light/perfectionism.php">Procrastination and Perfectionism</a> is perhaps relevant here. I read somewhere that it is a cardinal violation of blog etiquette to apologise for – or even to make reference to, if I remember rightly – a gap in posting. I cannot now remember what the reason for that was supposed to be, but a two-year delay surely cannot pass unremarked?

For what it's worth, I anticipate my frequency of posting to have a small mean and a large variance. The subject matter will be more varied than before, since I have a job that does not involve category theory, and if I tried to confine my postings to categories I would post about once every five years at present rates. At some point I did change the subtitle from "categorical maundering" to "miscellaneous maundering" in anticipation of this.

One piece of very old news that I never mentioned here: I did eventually finish writing up my thesis in September 2007. If anyone is interested, it's available at <a href="http://www.cs.man.ac.uk/~houstorx/robin-houston-phd-thesis.pdf">Linear Logic without Units</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>58</wp:post_id>
  <wp:post_date>2009-05-23 15:19:20</wp:post_date>
  <wp:post_date_gmt>2009-05-23 14:19:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>reboot</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Bad news for naïve sets</title>
  <link>https://bosker.wordpress.com/2009/05/24/bad-news-for-naive-sets/</link>
  <pubDate>Sun, 24 May 2009 11:08:15 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=77</guid>
  <description/>
  <content:encoded><![CDATA[I've been fascinated by <a href="http://plato.stanford.edu/entries/dialetheism/">dialetheism</a> ever since I first heard about it in 2005, from RM Sainsbury's wonderful book <em><a href="https://www.cambridge.org/uk/catalogue/catalogue.asp?isbn=9780521720793">Paradoxes</a></em>. The pleasure I derive from the notion that contradictions can be true is, I admit, the same as the dizziness obtainable from the best sort of science fiction; but I don't think that constitutes an argument against the idea.

If you're going to countenance true contradictions, but you are not yet ready to embrace the view of truth espoused by Malaclypse the Younger in <em><a href="http://en.wikipedia.org/wiki/Principia_Discordia">Principia Discordia</a></em>, then you need a system of logic in which a single contradiction does not necessarily entail everything whatsoever. Such systems are studied under the banner of <a href="http://plato.stanford.edu/entries/logic-paraconsistent/">Paraconsistent Logic</a>.

One of the early hopes of this line of enquiry was that it would be possible to rehabilitate naïve set theory by embedding it into a paraconsistent setting. For example, let $latex R$ be the Russell set
<p style="text-align:center;">$latex \{x | x \notin x\}$</p>
From $latex R\in R$ we can conclude that $latex R\notin R$, and vice versa, but in a paraconsistent setting that need not be a problem. All we've done is to locate a true contradiction, an occasion for excitement rather than despair!

I'm obviously not a specialist in the area, but from what I've read as a curious outsider I have the impression that the wheels have rather come off this initially-plausible endeavour. Not all the paradoxes of naïve set theory are so comfortably dispatched; in particular, paraconsistency is no defence against <a href="http://en.wikipedia.org/wiki/Curry's_paradox#In_naive_set_theory">Curry's paradox</a>. Some have proposed to modify the logic of implication to forbid that reasoning, though doesn't that smack a little of desperation?

Anyway, the always-interesting Greg Restall has just <a href="http://consequently.org/news/2009/05/21/problems_for_naive_theories_of_properties/">lobbed rather a fun grenade</a> into the ring. He has concocted a <a href="http://consequently.org/papers/bang.pdf">version of the paradox</a> that doesn't even use implication, though it does require an "initial" proposition from which everything follows.

<span style="text-decoration:line-through;">(Incidentally, I have no idea whether or why anything is gained by using the word "property" instead of "set", and tweaking the notation to use pointy brackets and curly epsilons rather than the other way around.)</span>

The funny thing from my point of view is that I'm more suspicious of logical "units" than of implication. (They cause no end of trouble in linear logic for little or no gain, which is what motivated the topic of my thesis.)
<div id="_mcePaste" style="position:absolute;left:-10000px;top:0;width:1px;height:1px;">Because I happen to be suspicious of $latex \bot$, I'm therefore mildly suspicious of arguments that depend on it -- I take Restall's point that $latex (\forall x)(\forall y)x\in y$ would do just as well, though it increases the demands made on the ambient logic.</div>
<div id="_mcePaste" style="position:absolute;left:-10000px;top:0;width:1px;height:1px;">Anyway, I thought it would be interesting to see how one could modify the argument to remove the dependency on $latex \bot$, without making other new demands on the ambient logic. (The lovely thing about Restall's proof is that it depends hardly at all on the logic: as far as I can see it assumes only equality, contraction and $latex \bot$.) My variation is here – it assumes a (primitive or derived) subset predicate that satisfies the obvious introduction and elimination rules, but of the logic demands nothing more than contraction.</div>
<div id="_mcePaste" style="position:absolute;left:-10000px;top:0;width:1px;height:1px;">This may well seem very naive to any philosopher who should happen across it. Perhaps there are already well-known objections to such an argument. In the context of this particular philosophical discourse it is presumably weaker than Greg Restall's argument -- it invites the objection that the subset predicate is disguised implication, for example -- but personally it's enough to convince me that tinkering with the logic is not going to rescue na\"ive set theory without unacceptable collateral damage. And that's a shame, because it was a cool idea.</div>
Because I happen to be suspicious of $latex \bot$, I'm therefore mildly suspicious of arguments that depend on it -- though I take Restall's point that $latex (\forall x)(\forall y)x\in y$ would do just as well, it increases the demands made on the ambient logic.

Anyway, I thought it would be interesting to see how one could modify the argument to remove the dependency on $latex \bot$, without making other new demands on the ambient logic. (The lovely thing about Restall's proof is that it depends hardly at all on the logic: as far as I can see it assumes only equality, contraction and $latex \bot$.) <a href="http://bosker.files.wordpress.com/2009/05/curry-restall.pdf">My variation is here</a> – it assumes a (primitive or definable) subset predicate that satisfies the obvious introduction and elimination rules, but of the logic demands nothing more than contraction.

This may seem naive to any philosopher who should happen across it. Perhaps there are already well-known objections to such an argument. In the context of this particular philosophical discourse it is presumably weaker than Greg Restall's version -- it invites the objection that the subset predicate is disguised implication, for example -- but personally it's enough to convince me that tinkering with the logic is not going to rescue naïve set theory without unacceptable collateral damage. And that's a shame, because it was a cool idea.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>77</wp:post_id>
  <wp:post_date>2009-05-24 12:08:15</wp:post_date>
  <wp:post_date_gmt>2009-05-24 11:08:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>bad-news-for-naive-sets</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2154</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.136.131.15</wp:comment_author_IP>
    <wp:comment_date>2009-05-24 14:31:33</wp:comment_date>
    <wp:comment_date_gmt>2009-05-24 13:31:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Sorry, your first comment got caught in the spam filter. I have now fished it out.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2153</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2009-05-24 13:31:33</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2155</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.136.131.15</wp:comment_author_IP>
    <wp:comment_date>2009-05-24 14:33:40</wp:comment_date>
    <wp:comment_date_gmt>2009-05-24 13:33:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Oh, I see. Yes, I suppose the word "set" has extensional connotations: thanks for the explanation.

I'm impressed you got here so quickly! I assumed – wrongly as it turns out – that it was the middle of the night in Melbourne.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2152</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2009-05-24 13:33:40</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2156</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.136.131.15</wp:comment_author_IP>
    <wp:comment_date>2009-05-24 16:50:03</wp:comment_date>
    <wp:comment_date_gmt>2009-05-24 15:50:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'm glad it's of some interest. I wasn't really expecting that!

I'd love to read about your view of contraction. Is it written down yet?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2151</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2009-05-24 15:50:03</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2161</wp:comment_id>
    <wp:comment_author><![CDATA[Greg Restall]]></wp:comment_author>
    <wp:comment_author_email>greg@consequently.org</wp:comment_author_email>
    <wp:comment_author_url>http://consequently.org</wp:comment_author_url>
    <wp:comment_author_IP>118.208.202.33</wp:comment_author_IP>
    <wp:comment_date>2009-05-25 12:24:49</wp:comment_date>
    <wp:comment_date_gmt>2009-05-25 11:24:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[There's bits in "<a href="http://consequently.org/writing/multipleconclusions" rel="nofollow">Multiple Conclusions</a>".  In short:

I like Gentzen’s two-sided sequent calculus for classical logic, and I defend the interpretation of it for which <em>X</em> &Rarr; <em>Y</em> says that a position in which you assert each member of <em>X</em> and deny each member of <em>Y</em> is ruled out by the Meaning of The Act.  And asserting <em>A</em> twice has the same effect as asserting it once.  The same goes for denying it.

Of course, I'm also a fan of Logics Without Contraction (I have been for <a href="http://consequently.org/writing/onlogics" rel="nofollow">years</a>), but as a pluralist, I'm allowed to go both ways here.  It's just that this inferentialist reading of classical logic seems to me to get something important right.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2156</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2009-05-25 11:24:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2151</wp:comment_id>
    <wp:comment_author><![CDATA[Greg Restall]]></wp:comment_author>
    <wp:comment_author_email>greg@consequently.org</wp:comment_author_email>
    <wp:comment_author_url>http://consequently.org</wp:comment_author_url>
    <wp:comment_author_IP>118.208.202.33</wp:comment_author_IP>
    <wp:comment_date>2009-05-24 13:20:34</wp:comment_date>
    <wp:comment_date_gmt>2009-05-24 12:20:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Sweet.  I like that a lot.  My former self would dislike the contraction. But now I have a story to tell about that (involving assertion, denial and the way proofs constrain them).

I absolutely <em>love</em> your version, as it works for properties too: just read $latex \subseteq$ as &quot;is no weaker than&quot;, (being red is no weaker than being coloured; etc. being a renate is no weaker than being a cordate) and there&#39;s no commitment to any extensionality at all in what you&#39;ve done.  You&#39;re not saying that if X is no weaker than Y and Y is no weaker than X then X and Y are the same properties.  So this is very very nice.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2009-05-24 12:20:34</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2152</wp:comment_id>
    <wp:comment_author><![CDATA[Greg Restall]]></wp:comment_author>
    <wp:comment_author_email>greg@consequently.org</wp:comment_author_email>
    <wp:comment_author_url>http://consequently.org</wp:comment_author_url>
    <wp:comment_author_IP>118.208.202.33</wp:comment_author_IP>
    <wp:comment_date>2009-05-24 13:33:48</wp:comment_date>
    <wp:comment_date_gmt>2009-05-24 12:33:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Oh, on the point of properties and not classes: it's that some folks like extensionality for classes/sets.  That's all.  And my main target was Field, and he endorses a naive property theory and not a naive set/class theory.  That's all.

On units. Yeah, they're a pain.  But here, if we've got quantifiers, we've got them, or at least enough to cause the pain.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2009-05-24 12:33:48</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2153</wp:comment_id>
    <wp:comment_author><![CDATA[Greg Restall]]></wp:comment_author>
    <wp:comment_author_email>greg@consequently.org</wp:comment_author_email>
    <wp:comment_author_url>http://consequently.org</wp:comment_author_url>
    <wp:comment_author_IP>118.208.202.33</wp:comment_author_IP>
    <wp:comment_date>2009-05-24 13:35:38</wp:comment_date>
    <wp:comment_date_gmt>2009-05-24 12:35:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ah, my first comment wasn't posted... Let me reconstruct it.

I <em>love</em> this version of the paradox. The proof is shorter than mine (hey, subset is simpler than identity) and you're not assuming extensionality anywhere here, so it works on people who don't like naïve sets but do like naive properties.  Very nicely done.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2009-05-24 12:35:38</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>The category of Conway games</title>
  <link>https://bosker.wordpress.com/2009/11/16/the-category-of-conway-games/</link>
  <pubDate>Mon, 16 Nov 2009 21:54:41 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=96</guid>
  <description/>
  <content:encoded><![CDATA[Several years ago I typed up a rough English translation of André Joyal's hard-to-find 1977 paper <em>Remarques sur la théorie des jeux à deux personnes,</em> describing the category of Conway games.

My version was on the web server of the University of Manchester mathematics department for a while: I've just noticed that it's not there any more, which is understandable. I'll put a copy <a href="http://bosker.files.wordpress.com/2010/12/joyal-games.pdf">here</a>, in case it's useful to somebody.

<em><strong>added on 2010-12-29</strong>: I’ve updated the file with a version that includes a correction to the definition of the sum of games. Thanks to Glynn in the comments (presumably Glynn Winskel?) for reminding me of this error. Apologies for mistakenly uploading the uncorrected version.</em>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>96</wp:post_id>
  <wp:post_date>2009-11-16 22:54:41</wp:post_date>
  <wp:post_date_gmt>2009-11-16 21:54:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-category-of-conway-games</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_ceb589cfeaab877cc781b38f0cce76b1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_48026f1871392446d61cc96b690ed6da</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f11309dd06936e958efc02d684dadb75</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2291</wp:comment_id>
    <wp:comment_author><![CDATA[Glynn]]></wp:comment_author>
    <wp:comment_author_email>gw104@cl.cam.ac.uk</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>87.57.189.212</wp:comment_author_IP>
    <wp:comment_date>2010-12-29 11:17:03</wp:comment_date>
    <wp:comment_date_gmt>2010-12-29 10:17:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Robin

Thanks for the translation which I've just been reading.

Isn't there a mistake in the defn of sum of games H+G?  It seems to allow left moves only from H and right moves from G. 

Best wishes

Glynn]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1293617824</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1293617825.3061";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2010-12-29 10:17:03</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2292</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.177.182.186</wp:comment_author_IP>
    <wp:comment_date>2010-12-29 17:31:06</wp:comment_date>
    <wp:comment_date_gmt>2010-12-29 16:31:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Dear Glynn,

Yes, indeed! There seems to be a mistake in that definition. Thank you.

<a href="http://web.archive.org/web/20050424173316/www.ma.man.ac.uk/~rhouston/Joyal-games.ps" rel="nofollow">As the Wayback Machine is my witness</a>, I noticed and corrected this in July 2003; but then I accidentally uploaded an older one here.

For what it’s worth, the error is in Joyal’s original.

I’ve now found a copy of the corrected version, and uploaded it here to replace the earlier one.

All the best,
Robin]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1293640266</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1293640266.5311";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2010-12-29 16:31:06</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2296</wp:comment_id>
    <wp:comment_author><![CDATA[Glynn Winskel]]></wp:comment_author>
    <wp:comment_author_email>gw104@cl.cam.ac.uk</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>81.101.128.226</wp:comment_author_IP>
    <wp:comment_date>2011-03-01 00:29:19</wp:comment_date>
    <wp:comment_date_gmt>2011-02-28 23:29:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Dear Robin

Sorry to be slow thanking you for posting the corrected version

I've just sent a message to your old Manchester email address which I hope you can still read  - it might be important

Best wishes

Glynn]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1298935760</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1298935760.2329";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-28 23:29:19</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2274</wp:comment_id>
    <wp:comment_author><![CDATA[Mike]]></wp:comment_author>
    <wp:comment_author_email>mcox235@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>94.173.143.163</wp:comment_author_IP>
    <wp:comment_date>2010-03-13 13:24:51</wp:comment_date>
    <wp:comment_date_gmt>2010-03-13 12:24:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi there,
Would you mind me referencing your translation? As you mentioned, the original is difficult to find, and so your translation is much appreciated. If this is okay, would you be able to supply me with the necessary information to write a BibTeX entry?

Thanks,
Mike]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2010-03-13 12:24:51</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2275</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.181.81.139</wp:comment_author_IP>
    <wp:comment_date>2010-03-13 21:02:53</wp:comment_date>
    <wp:comment_date_gmt>2010-03-13 20:02:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Mike,

I don't mind at all.

I'm not sure what I can give you in the way of bibliographical data; perhaps the best I can do is to quote the footnote on page 1:

* This paper was published in 1977, in French, in the <em>Gazette des sciences mathématiques du Québec</em>, 1(4), as <em>Remarques sur la Théorie des Jeux à Deux Personnes</em>. The present translation was prepared in April 2003 by Robin Houston. Compiled April 11, 2003.

I should mention that it's also unauthorised: although I wrote to Joyal about it in 2003, I never had a reply.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2010-03-13 20:02:53</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2276</wp:comment_id>
    <wp:comment_author><![CDATA[Mike]]></wp:comment_author>
    <wp:comment_author_email>mcox235@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>94.173.143.163</wp:comment_author_IP>
    <wp:comment_date>2010-03-14 10:44:49</wp:comment_date>
    <wp:comment_date_gmt>2010-03-14 09:44:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks Robin,

It's much appreciated. You (and your readers) may find the link below interesting, if you haven't already come across it; it's a note written for a Novemberfest 2009 talk given by Geoff Cruttwell, expanding on Joyal's paper.

http://pages.cpsc.ucalgary.ca/~gscruttw/CGCNovTalk.pdf]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2010-03-14 09:44:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2425</wp:comment_id>
    <wp:comment_author><![CDATA[Coqで超現実数(1) &laquo; ぴらぴら週記]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://log.pira.jp/?p=77</wp:comment_author_url>
    <wp:comment_author_IP>59.106.13.208</wp:comment_author_IP>
    <wp:comment_date>2011-12-05 14:31:27</wp:comment_date>
    <wp:comment_date_gmt>2011-12-05 13:31:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] 推移律も成り立つはずです、えーと、まだ証明していません。次回以降にやります。反射律と推移律があるなら、すくなくともposetとして圏になりますね。でも、ゲームがゲーム以下というのは、あっちのゲームの勝ち方がわかればこっちのゲームの勝ち方もわかるということで、戦略から戦略を計算する仕掛けと捉えることもできますから、もっと豊かな構造を持っていてもいいはずです…ということを考えている先人はたくさんいます。Joyal (1997)の英訳 [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1323091887</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1323091887.831";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-05 13:31:27</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3009</wp:comment_id>
    <wp:comment_author><![CDATA[mg1728]]></wp:comment_author>
    <wp:comment_author_email>shedoblyde@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/mg1728</wp:comment_author_url>
    <wp:comment_author_IP>68.54.30.66</wp:comment_author_IP>
    <wp:comment_date>2013-06-26 06:44:46</wp:comment_date>
    <wp:comment_date_gmt>2013-06-26 05:44:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks, I've been looking for the original and this is at least as useful!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1372225486</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1372225486.9148108959197998046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mg1728";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-06-26 05:44:46</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>I’m planning to write a few things about mazes.  </title>
  <link>https://bosker.wordpress.com/2011/04/27/112/</link>
  <pubDate>Wed, 27 Apr 2011 22:11:59 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=112</guid>
  <description/>
  <content:encoded><![CDATA[I had planned a short series of long, interactive essays, but it seems clear that I won't get round to finishing them if I do it like that, so I’m going to try writing a few shorter more self-contained blog posts and see if anyone is interested.

I started to think about mazes after reading <a href="http://weblog.jamisbuck.org/">Jamis Buck’s</a> excellent series of posts, and found that mazes lead quite directly to some interesting mathematics and some remarkable algorithms. So I’d like to share some of that here.

To whet your appetite, here is an exhaustive list of the 3×3 <a href="http://weblog.jamisbuck.org/2011/3/4/maze-generation-weave-mazes">weave mazes</a>:

<a href="http://bosker.files.wordpress.com/2011/04/all-the-3x3-weave-mazes.png"><img class="aligncenter size-full wp-image-113" title="All the 3x3 weave mazes" src="http://bosker.files.wordpress.com/2011/04/all-the-3x3-weave-mazes.png" alt="" width="480" height="480" /></a>I may or may not do it all on this site. Ideally I would like to post some interactive demos, which isn’t possible here.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>112</wp:post_id>
  <wp:post_date>2011-04-27 23:11:59</wp:post_date>
  <wp:post_date_gmt>2011-04-27 22:11:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>112</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <category domain="category" nicename="mazes"><![CDATA[mazes]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The worst algorithm in the world? </title>
  <link>https://bosker.wordpress.com/2011/04/29/the-worst-algorithm-in-the-world/</link>
  <pubDate>Fri, 29 Apr 2011 01:25:02 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=118</guid>
  <description/>
  <content:encoded><![CDATA[You know the Fibonacci numbers:

1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, …

Each number is the sum of the previous two. Let’s say the zeroth Fibonacci number is zero, so:
<p align="center">$latex \begin{array}{r@{\;}c@{\;}l}\mathop{\mathrm{fib}}(0)&amp;=&amp;0\\ \mathop{\mathrm{fib}}(1)&amp;=&amp;1\\ \mathop{\mathrm{fib}}(n+2)&amp;=&amp;\mathop{\mathrm{fib}}(n) + \mathop{\mathrm{fib}}(n+1)\end{array}&amp;fg=000000$</p>
And let’s say you want to write some code to compute this function. How would you do it? Perhaps something like this? (Python code)

[sourcecode lang="python"]
def fib_rec(n):
  assert n &gt;= 0
  if n &lt; 2: return n
  return fib_rec(n-2) + fib_rec(n-1)
[/sourcecode]

This is a pretty popular algorithm, which can be found in dozens of places online. It is also a strong candidate for the title of <em>Worst Algorithm in the World</em>. It’s not just bad in the way that <a href="http://en.wikipedia.org/wiki/Bubble_sort">Bubble sort</a> is a bad sorting algorithm; it’s bad in the way that <a href="http://en.wikipedia.org/wiki/Bogosort">Bogosort</a> is a bad sorting algorithm.
<!--more-->
Why so bad? Well, mainly it is quite astonishingly slow. Computing <code>fib_rec(40)</code> takes about a minute and a half, on my computer. To see why it’s so slow, let’s calculate how many calls are made to the <code>fib_rec</code> routine. If we write $latex c(n)&amp;fg=000000$ for the number of calls made when calculating <code>fib_rec(n)</code>, then:
<p align="center">$latex \begin{array}{r@{\;}c@{\;}l}c(0)&amp;=&amp;1\\ c(1)&amp;=&amp;1\\ c(n+2)&amp;=&amp;1 + c(n) + c(n+1)\end{array}&amp;fg=000000$</p>
So $latex c(n)&amp;fg=000000$ are the <a href="http://en.wikipedia.org/wiki/Leonardo_number">Leonardo numbers</a>, $latex c(n) = 2\mathop{\mathrm{fib}}(n+1)-1&amp;fg=000000$. In other words, computing <em>fib</em> using <code>fib_rec</code> takes time <em>O</em>(fib(<em>n</em>)).

So computing <code>fib_rec(40)</code> involves <em>c</em>(40) = 331,160,281 calls to the <code>fib_rec</code> routine, which is pretty crazy considering it’s only called with 40 different arguments. An obvious idea for improvement is to check whether it’s being called with an argument that we’ve seen before, and just return the result we got last time.

[sourcecode lang="python"]
cached_results = {}
def fib_improved(n):
  assert n &gt;= 0
  if n &lt; 2: return n
  if n not in cached_results:
   cached_results[n] = fib_improved(n-2) + fib_improved(n-1)
  return cached_results[n]
[/sourcecode]

That’s a huge improvement, and we can compute <code>fib_improved(40)</code> in a fraction of a millisecond, which is much better than a minute and a half. What about larger values?

[sourcecode lang="python"]
&gt;&gt;&gt; fib_improved(1000)
43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875L
[/sourcecode]

That looks good, and it’s still apparently instant. How about 10,000?

[sourcecode lang="python"]
&gt;&gt;&gt; fib_improved(10000)
Traceback (most recent call last):
  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;
  File &quot;&lt;stdin&gt;&quot;, line 6, in fib_improved
  File &quot;&lt;stdin&gt;&quot;, line 6, in fib_improved
  [...]
  File &quot;&lt;stdin&gt;&quot;, line 6, in fib_improved
RuntimeError: maximum recursion depth exceeded
[/sourcecode]

Oh dear! We’ve blown the stack. You could blame Python here for having a hard (if configurable) limit on stack size, but that’s not the real point. The problem here is that this algorithm creates <code>n</code> stack frames when you call <code>fib_improved(n)</code>, so it uses at least <em>O</em>(<em>n</em>) space.

(Actually it uses <em>O</em>(<em>n</em><sup>2</sup>) space -- later we’ll get into why that is. Thanks to <a href="http://www.reddit.com/r/programming/comments/h9x3r/the_worst_algorithm_in_the_world/c1ttxwv">CoderKyd on reddit</a> for pointing that out.)

It’s easy enough to write a version that only uses constant space -- well, not really: but it only uses twice as much space as we need for the end result, so it’s within a small constant factor of optimal -- as long as we’re willing to forgo recursion:

[sourcecode lang="python" wraplines="false"]
def fib_iter(n):
  assert n &gt;= 0
  i, fib_i, fib_i_minus_one = 0, 0, 1
  while i &lt; n:
    i = i + 1
    fib_i, fib_i_minus_one = fib_i_minus_one + fib_i, fib_i
  return fib_i
[/sourcecode]

This is much better. We can compute <code>fib_iter(100,000)</code> in less than a second (on my computer, again), and <code>fib_iter(1,000,000)</code> in about 80 seconds. Asymptotically, this algorithm takes <em>O</em>(<em>n</em><sup>2</sup>) time to compute fib(<em>n</em>).

(Maybe you think it should be <em>O</em>(<em>n</em>) time, because the loop runs for <em>n</em> iterations. But the numbers we’re adding are getting bigger exponentially, and you can’t add two arbitrarily-large numbers in constant time. If you think that sounds a bit theoretical, you might enjoy <a href="http://www.catonmat.net/blog/on-the-linear-time-algorithm-for-finding-fibonacci-numbers/">the post where Peteris Krumins measures</a> the running time of <code>fib_iter</code>, and explains why it’s quadratic rather than linear.)

That’s not the end of the story. Since the Fibonacci numbers are defined by a linear recurrence, we can express the recurrence as a matrix, and it’s easy to verify that
<p align="center">$latex \left(\begin{array}{cc}0&amp;1\\1&amp;1\end{array}\right)^n = \left(\begin{array}{cc}\mathop{\mathrm{fib}}(n-1)&amp;\mathop{\mathrm{fib}}(n)\\\mathop{\mathrm{fib}}(n)&amp;\mathop{\mathrm{fib}}(n+1)\end{array}\right) &amp;fg=000000$</p>
Since we can get from $latex \tiny\left(\begin{array}{cc}0&amp;1\\1&amp;1\end{array}\right)^n &amp;fg=000000$ to $latex \tiny\left(\begin{array}{cc}0&amp;1\\1&amp;1\end{array}\right)^{2n} &amp;fg=000000$ by squaring, this suggests we can compute fib(<em>n</em>) using just log<sub>2</sub>(<em>n</em>) iterations:

[sourcecode lang="python"]
def bits(n):
  &quot;&quot;&quot;Represent an integer as an array of binary digits.
  &quot;&quot;&quot;
  bits = []
  while n &gt; 0:
    n, bit = divmod(n, 2)
    bits.append(bit)
  bits.reverse()
  return bits

def fib_mat(n):
  assert n &gt;= 0
  a, b, c = 1, 0, 1
  for bit in bits(n):
    a, b, c = a*a + b*b, a*b + b*c, b*b + c*c
    if bit: a, b, c = b, c, b+c
  return b
[/sourcecode]

This is certainly much faster in practice. We can compute <code>fib_mat(1,000,000)</code> in less than a second and a half. The asymptotic complexity depends on the multiplication algorithm used. If it’s conventional long multiplication then multiplying two <em>k</em>-bit numbers takes time <em>O</em>(<em>k</em><sup>2</sup>), in which case this algorithm is actually still quadratic! I believe Python uses the <a href="http://en.wikipedia.org/wiki/Karatsuba_algorithm">Karatsuba algorithm</a>, which makes it about <em>O</em>(<em>n</em><sup>1.6</sup>) in Python.

While we’re writing code, let’s improve the constant factor. Each step of <code>fib_mat</code> uses six multiplications, but we can halve that just by observing that <code>c</code> can always be computed as <code>a+b</code> and rearranging things a little:

[sourcecode lang="python"]
def fib_fast(n):
  assert n &gt;= 0
  a, b, c = 1, 0, 1
  for bit in bits(n):
    if bit: a, b = (a+c)*b, b*b + c*c
    else:   a, b = a*a + b*b, (a+c)*b
    c = a + b
  return b
[/sourcecode]

And this does indeed run about twice as fast. Further improvement is possible, but I think the point has been made so let’s leave it there. If you want to see a super-efficient version, have a look at <a href="http://gmplib.org/manual/Fibonacci-Numbers-Algorithm.html">the algorithm in GMP</a>.

Another good article on the subject: <a href="http://www.ics.uci.edu/~eppstein/161/960109.html">David Eppstein’s lecture notes</a>, which cover similar ground to this.

If you’re thinking “This is silly! You can just compute Fibonacci numbers using the closed-form expression.” then you’ll probably enjoy the follow-up article on <a href="http://bosker.wordpress.com/2011/07/27/computing-fibonacci-numbers-using-binet’s-formula/">computing Fibonacci numbers using Binet’s formula</a>.

<small>Are you wondering what this has to do with mazes? We’ll get to that eventually, I hope…</small>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>118</wp:post_id>
  <wp:post_date>2011-04-29 02:25:02</wp:post_date>
  <wp:post_date_gmt>2011-04-29 01:25:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-worst-algorithm-in-the-world</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="algorithms"><![CDATA[algorithms]]></category>
  <category domain="post_tag" nicename="fibonacci"><![CDATA[fibonacci]]></category>
  <category domain="category" nicename="fibonacci-numbers"><![CDATA[Fibonacci numbers]]></category>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_eb436fc248bacbe99c6399051b06687a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_bf602c87dbaeba8a8fbe108ad85f7941</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c2551913d4b05a6f17b663280e28d182</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_5e8ac961f88e881c903dad02ed2e5569</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_ce93109bcbaf3070f8ab38f190e9565e</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8edf950403acf0d2006e6716b4b0c7f5</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2361</wp:comment_id>
    <wp:comment_author><![CDATA[State of Technology -#9 &laquo; Dr Data&#039;s Blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://doctordata.wordpress.com/2011/05/19/state-of-technology-9/</wp:comment_author_url>
    <wp:comment_author_IP>72.233.69.24</wp:comment_author_IP>
    <wp:comment_date>2011-05-19 12:01:40</wp:comment_date>
    <wp:comment_date_gmt>2011-05-19 11:01:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] This could really be the worst algorithm in the world! [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:13:"1305804301.32";s:7:"message";s:55:"Akismet cleared this comment during an automatic retry.";s:5:"event";s:10:"cron-retry";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305802900.6665";s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305804301</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-19 11:01:40</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2300</wp:comment_id>
    <wp:comment_author><![CDATA[Lionel Barrow]]></wp:comment_author>
    <wp:comment_author_email>lionelbarrow@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>192.246.234.101</wp:comment_author_IP>
    <wp:comment_date>2011-05-11 21:27:00</wp:comment_date>
    <wp:comment_date_gmt>2011-05-11 20:27:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[What do you think of an algorithm that uses the <a href="http://en.wikipedia.org/wiki/Fibonacci_number#Closed-form_expression" title="closed form expression" rel="nofollow">Closed-form expression</a> of Fibonacci numbers? Obviously you will have precision problems for large values of n, but if your exponential function is logarithmic time, the Fib function should be as well.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305145620</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1305145620.712";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-11 20:27:00</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2302</wp:comment_id>
    <wp:comment_author><![CDATA[Francisco Facioni]]></wp:comment_author>
    <wp:comment_author_email>fran6co@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>190.229.65.162</wp:comment_author_IP>
    <wp:comment_date>2011-05-11 21:50:48</wp:comment_date>
    <wp:comment_date_gmt>2011-05-11 20:50:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You should specify that the naive implementation is the worst algorithm in the world for some languages. For example a Haskell implementation of this algorithm doesn't incurr in the problems you are listing.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305147051</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305147051.8079";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-11 20:50:48</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2303</wp:comment_id>
    <wp:comment_author><![CDATA[Tom Rod]]></wp:comment_author>
    <wp:comment_author_email>poriphon@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>128.83.172.219</wp:comment_author_IP>
    <wp:comment_date>2011-05-11 22:11:00</wp:comment_date>
    <wp:comment_date_gmt>2011-05-11 21:11:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Well... there is an explicit functional form for the Fibonacci numbers. Why not use that instead of recursion?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305148260</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305148260.8986";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-11 21:11:00</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2304</wp:comment_id>
    <wp:comment_author><![CDATA[Ryan]]></wp:comment_author>
    <wp:comment_author_email>darwinawdwinner+comment@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>209.134.82.80</wp:comment_author_IP>
    <wp:comment_date>2011-05-11 22:50:49</wp:comment_date>
    <wp:comment_date_gmt>2011-05-11 21:50:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Because the closed form cannot be calculated exactly on a computer. It involves calculations using an irrational number.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2303</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305150650</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305150650.2189";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-11 21:50:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2305</wp:comment_id>
    <wp:comment_author><![CDATA[Warren Henning]]></wp:comment_author>
    <wp:comment_author_email>warren.henning@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>76.88.9.210</wp:comment_author_IP>
    <wp:comment_date>2011-05-11 22:59:20</wp:comment_date>
    <wp:comment_date_gmt>2011-05-11 21:59:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[let fibs = 0 : 1 : zipWith (+) fibs (tail fibs) in Haskell works fine for pretty high into the sequence, and is to me much prettier than anything that appears in this post.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305151160</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305151161.1881";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-11 21:59:20</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2306</wp:comment_id>
    <wp:comment_author><![CDATA[Alex Ogier]]></wp:comment_author>
    <wp:comment_author_email>aogier@princeton.edu</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>140.180.130.15</wp:comment_author_IP>
    <wp:comment_date>2011-05-11 23:01:53</wp:comment_date>
    <wp:comment_date_gmt>2011-05-11 22:01:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Careful there. You make the mistake several times of conflating n-bit numbers with size n numbers. A number n has ~log(n) bits in it. Addition is absolutely an O(log(n)) operation. Same with multiplication.

The algorithm you claim is O(n^2) is actually no more than O(n*log(n)). The "fast" version with matrices is not quadratic at all: the multiplication is O(log(n)) and so is the matrix decomposition, giving O(log(n)^2) time.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305151316</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305151316.8571";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-11 22:01:53</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2307</wp:comment_id>
    <wp:comment_author><![CDATA[Warren Henning]]></wp:comment_author>
    <wp:comment_author_email>warren.henning@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>76.88.9.210</wp:comment_author_IP>
    <wp:comment_date>2011-05-11 23:04:59</wp:comment_date>
    <wp:comment_date_gmt>2011-05-11 22:04:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Fast implementations in Haskell can be found at http://www.haskell.org/haskellwiki/The_Fibonacci_sequence#Using_2x2_matrices , kind of interesting.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305151501</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1305151501.205";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-11 22:04:59</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2308</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.177.183.172</wp:comment_author_IP>
    <wp:comment_date>2011-05-11 23:15:30</wp:comment_date>
    <wp:comment_date_gmt>2011-05-11 22:15:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Lionel. I’d love to see an algorithm using the closed-form expression. (One that gives an exact answer, I mean! Obviously it would be easy to do using floating-point arithmetic, but that would only give an approximate answer.)

It would only be logarithmic time in the way that <code>fib_mat</code> is, I think. In other words, it would use a logarithmic number of multiplications, but the numbers being multiplied would get bigger exponentially in <i>n</i>, which would counteract that. (To get an exact answer for larger <i>n</i> would require the calculation to be done with more bits of precision, I mean.)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2300</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305152131</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1305152131.983";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-11 22:15:30</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2309</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.177.183.172</wp:comment_author_IP>
    <wp:comment_date>2011-05-11 23:23:10</wp:comment_date>
    <wp:comment_date_gmt>2011-05-11 22:23:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Alex. I don’t think I’ve made that particular mistake, though I obviously haven’t explained myself very clearly if you think I did! Remember that <i>n</i> is the input value: the intermediate values used in the calculations are tending towards <i>fib</i>(<i>n</i>), which has <i>O</i>(<i>n</i>) bits.

I really liked <a href="http://www.catonmat.net/blog/on-the-linear-time-algorithm-for-finding-fibonacci-numbers/" rel="nofollow">Peteris Krumins’ explanation</a> of why <code>fib_iter</code> is quadratic. He actually measures the running time and observes quadratic behaviour, so I don’t think it can be pinned on a mistaken calculation.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2306</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305152590</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305152590.8896";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-11 22:23:10</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2310</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.177.183.172</wp:comment_author_IP>
    <wp:comment_date>2011-05-11 23:27:22</wp:comment_date>
    <wp:comment_date_gmt>2011-05-11 22:27:22</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes, that’s a beautiful bit of code! Very Haskellish.

The algorithm is essentially the one I called <code>fib_iter</code>, isn’t it? Though I suspect it uses <i>O</i>(<i>n</i>) memory, so maybe it’s really more similar to <code>fib_improved</code>.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2305</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305152844</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305152845.3314";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-11 22:27:22</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2311</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.177.183.172</wp:comment_author_IP>
    <wp:comment_date>2011-05-11 23:38:57</wp:comment_date>
    <wp:comment_date_gmt>2011-05-11 22:38:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Fransisco. I’m not sure I understand what you mean. The Haskell function

<code>fib 0 = 1
fib 1 = 1
fib (n+2) = fib n + fib (n+1)</code>

is just as bad as the Python equivalent, I believe, and for the same reasons. I’ve just tried it, and it can’t compute even <code>fib 100</code>.

Did you mean something different?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2302</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305153538</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305153538.2045";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-11 22:38:57</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2313</wp:comment_id>
    <wp:comment_author><![CDATA[Volker Grabsch]]></wp:comment_author>
    <wp:comment_author_email>vog@notjusthosting.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.profv.de/</wp:comment_author_url>
    <wp:comment_author_IP>93.241.121.194</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 00:25:58</wp:comment_date>
    <wp:comment_date_gmt>2011-05-11 23:25:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[One way to reach an exact result is using arbitrary precision floating point arithmetics.

Another way to perform the calulations in the ring Z[sqrt(5)], which means calculating with pairs of integers. (see HN the news comment where someone provided the formulas: http://news.ycombinator.com/item?id=2538724 )]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2308</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305156360</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305156361.6957";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-11 23:25:58</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2314</wp:comment_id>
    <wp:comment_author><![CDATA[Volker Grabsch]]></wp:comment_author>
    <wp:comment_author_email>vog@notjusthosting.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.profv.de/</wp:comment_author_url>
    <wp:comment_author_IP>93.241.121.194</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 00:30:06</wp:comment_date>
    <wp:comment_date_gmt>2011-05-11 23:30:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Don't underestimate the Haskell compiler. It is very possible that those (simple?) kinds of optimizations are already happening.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2310</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305156609</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305156609.7868";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-11 23:30:06</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2315</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.177.183.172</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 02:15:25</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 01:15:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Working in Z[sqrt(5)] is a very neat idea! Thanks for drawing my attention to that.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2308</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305162928</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305162928.8355";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 01:15:25</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2317</wp:comment_id>
    <wp:comment_author><![CDATA[Francisco Facioni]]></wp:comment_author>
    <wp:comment_author_email>fran6co@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>190.229.65.162</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 05:12:59</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 04:12:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[It should be as good as fib_improved in python. Haskell should not be evaluating twice the same expression. But I could be wrong.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2311</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305173580</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305173580.9524";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 04:12:59</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2318</wp:comment_id>
    <wp:comment_author><![CDATA[Francisco Facioni]]></wp:comment_author>
    <wp:comment_author_email>fran6co@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>190.229.65.162</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 05:19:46</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 04:19:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Good review of this particular problem:

http://cgi.cse.unsw.edu.au/~dons/blog/2007/11/29#smoking

To really get Haskell performance out you should use ghc compiler with optimization:

ghc -O2 fib.hs -o fib -no-recomp]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2311</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305173986</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305173986.6366";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 04:19:46</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2319</wp:comment_id>
    <wp:comment_author><![CDATA[datt]]></wp:comment_author>
    <wp:comment_author_email>datt_mba@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>115.113.47.66</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 05:26:12</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 04:26:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[We don't know this thing before reading this article.Very interesting and hidden truth about the program..]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305174372</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305174372.3907";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 04:26:12</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2320</wp:comment_id>
    <wp:comment_author><![CDATA[Colin Woobdury]]></wp:comment_author>
    <wp:comment_author_email>colingw@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://codeonthemind.blogspot.com</wp:comment_author_url>
    <wp:comment_author_IP>202.226.226.202</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 05:28:53</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 04:28:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This is a much better Haskell solution:

fibs = 0 : 1 : zipWith (+) fibs (tail fibs)

Then you just 'take' as many as you need.

-- Get the 10000th fib number:
last $ take 10000 fibs]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2311</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305174535</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305174536.4214";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 04:28:53</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2321</wp:comment_id>
    <wp:comment_author><![CDATA[Francisco Facioni]]></wp:comment_author>
    <wp:comment_author_email>fran6co@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>190.229.65.162</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 05:39:20</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 04:39:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[My point was that the naive implementation is not the worst algorithm ever. For some languages is not bad, it's clear and it's fast enough.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2311</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305175161</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305175161.7333";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 04:39:20</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2323</wp:comment_id>
    <wp:comment_author><![CDATA[Harrie]]></wp:comment_author>
    <wp:comment_author_email>Polichism@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.polichism.org</wp:comment_author_url>
    <wp:comment_author_IP>212.178.116.154</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 10:16:30</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 09:16:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[And what's wrong with simple http://pastebin.com/Xg9YYGbP ?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305191790</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305191790.4821";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 09:16:30</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2324</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.177.183.172</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 10:22:23</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 09:22:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ah, I see. You <em>are</em> wrong, I'm afraid. Try it!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2317</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305192143</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305192143.9709";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 09:22:23</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2325</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.177.183.172</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 10:39:58</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 09:39:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Gosh. I’m not sure how I feel about that. There is something a little disturbing about putting so much optimisation effort into such a slow algorithm.

It’s impressive that GHC can do so well with such a lousy algorithm — but it’s still never going to be able to compute <i>fib</i>(100) before the heat death of the universe.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2318</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305193198</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305193198.9244";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 09:39:58</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2326</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.177.183.172</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 10:45:51</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 09:45:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nothing wrong with that at all! Roughly it’s an iterative implementation of <code>fib_improved</code>, isn’t it? The main disadvantage of this, compared to the better algorithms, is that it uses a lot of memory.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2323</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305193551</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1305193551.386";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 09:45:51</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2327</wp:comment_id>
    <wp:comment_author><![CDATA[Harrie]]></wp:comment_author>
    <wp:comment_author_email>Polichism@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.polichism.org</wp:comment_author_url>
    <wp:comment_author_IP>212.178.116.154</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 10:51:34</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 09:51:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Fair enough, but if you use my improved one: http://pastebin.com/4Eq061xe it would use a lot of memory though, is it?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2326</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305193896</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305193897.4629";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 09:51:34</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2328</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.177.183.172</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 10:58:52</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 09:58:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Cute, Harrie! I think that’s the same as the one I called <code>fib_iter</code>, but using an array with two elements rather than two variables.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2326</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305194332</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305194332.8165";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 09:58:52</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2330</wp:comment_id>
    <wp:comment_author><![CDATA[Volker Grabsch]]></wp:comment_author>
    <wp:comment_author_email>vog@notjusthosting.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.profv.de/</wp:comment_author_url>
    <wp:comment_author_IP>88.73.5.132</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 12:30:47</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 11:30:47</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[It <i>can</i> be calculated, using arbitrary precision floating point arithmetics such as the GMP library. However, the question is whether this would be any faster than the other algorithms.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2304</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305199850</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305199851.1768";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 11:30:47</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2331</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.177.183.172</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 13:09:37</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 12:09:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Oh, I would never underestimate the Haskell compiler! That’s why I said “I suspect” rather than “I am sure”.

I just tried this simple program, compiled with ghc -O2

<code>import System (getArgs)

fibs = 0 : 1 : zipWith (+) fibs (tail fibs)

main = do
  args &lt;- getArgs  
  let n = read $ head args
  print $ fibs !! n</code>

I tried it with <code>./fibs 1000000</code>, and had to kill the process after it ate two GB, so I think it really is using all the memory you’d naively expect it to.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2310</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305202178</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1305202178.844";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 12:09:37</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2333</wp:comment_id>
    <wp:comment_author><![CDATA[The Vision]]></wp:comment_author>
    <wp:comment_author_email>a@b.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>76.234.144.3</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 13:55:42</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 12:55:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This material is covered in lecture 3 of MIT's class on algorithm theory, which is on-line at their Open Course-Ware (OCW) site.

http://tinyurl.com/2cg4yo9]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305204943</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305204943.2492";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 12:55:42</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2334</wp:comment_id>
    <wp:comment_author><![CDATA[Julio]]></wp:comment_author>
    <wp:comment_author_email>madth3@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>189.190.100.229</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 20:52:17</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 19:52:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Good analysis but I really dislike the title.

The only places where I've seen the recursive fibonacci is being used as a mathematical definition or as an example to explain the dangers in recursive algorithms.
Never would consider it a "real" algorithm.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305229937</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305229937.5603";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 19:52:17</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2335</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.174.37.207</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 21:07:27</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 20:07:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I agree it’s not a “real” algorithm, but I don’t think everyone realises that!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2334</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305230850</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305230850.8962";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 20:07:27</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2337</wp:comment_id>
    <wp:comment_author><![CDATA[Jesse]]></wp:comment_author>
    <wp:comment_author_email>eric.foxx@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>199.204.56.17</wp:comment_author_IP>
    <wp:comment_date>2011-05-12 22:55:34</wp:comment_date>
    <wp:comment_date_gmt>2011-05-12 21:55:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Unfortunately, this algorithm was presented with a straight face in many of my undergrad CS courses! It was the <i>de facto</i> implementation of F[n] and was never elaborated upon. *sigh*]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2335</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305237337</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305237338.0344";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-12 21:55:34</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2338</wp:comment_id>
    <wp:comment_author><![CDATA[Some Dude]]></wp:comment_author>
    <wp:comment_author_email>wordpress@hollon.net</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>209.180.166.137</wp:comment_author_IP>
    <wp:comment_date>2011-05-13 05:18:28</wp:comment_date>
    <wp:comment_date_gmt>2011-05-13 04:18:28</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[The use of O(log(n)) only seems better than the O(n) of simply adding the numbers sequentially if one forgets that arbitrary length multiplication (performed on the order of log2(n) times) is itself a O(n) operation giving us O(nlog(n)) for the matrix method.  This added complexity doesn't cease to exist just because the language hides it.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305260310</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305260311.2581";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-13 04:18:28</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2339</wp:comment_id>
    <wp:comment_author><![CDATA[Some Dude]]></wp:comment_author>
    <wp:comment_author_email>wordpress@hollon.net</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>209.180.166.137</wp:comment_author_IP>
    <wp:comment_date>2011-05-13 05:21:13</wp:comment_date>
    <wp:comment_date_gmt>2011-05-13 04:21:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I forgot to post my simple (truly) O(n) algorith.

def fib(n):
  assert n &gt;= 0
  a = 0
  b = 1
  i = 2
  while i &lt; n:
	c = a+b
	a,b,i = b,c,i+1

  return b]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2338</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305260476</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305260476.9984";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-13 04:21:13</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2340</wp:comment_id>
    <wp:comment_author><![CDATA[John M]]></wp:comment_author>
    <wp:comment_author_email>middleofvortex@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>81.111.211.223</wp:comment_author_IP>
    <wp:comment_date>2011-05-13 08:12:52</wp:comment_date>
    <wp:comment_date_gmt>2011-05-13 07:12:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[With recursion 
- write algorithm with recursion 
- make sure you have a trap out 
- check performance at likely max number of recursive calls 
- if that is unacceptable you rewrite non recursively using recursive algorithm to compare results

and as "Some Dude" post - this is trivial to re-write non-recursively]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305270773</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305270773.2891";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-13 07:12:52</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2341</wp:comment_id>
    <wp:comment_author><![CDATA[Fibonacci number generation in Java &laquo; mytechstuff]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://mytechstuff.dyndns.org/wordpress/?p=131</wp:comment_author_url>
    <wp:comment_author_IP>63.223.127.23</wp:comment_author_IP>
    <wp:comment_date>2011-05-13 08:39:10</wp:comment_date>
    <wp:comment_date_gmt>2011-05-13 07:39:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Nice post on Fibonacci number generation here [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305272351</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305272352.1608";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-13 07:39:10</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2342</wp:comment_id>
    <wp:comment_author><![CDATA[Calculating the Fibonacci Numbers | Irreal]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://irreal.org/blog/?p=66</wp:comment_author_url>
    <wp:comment_author_IP>173.83.247.214</wp:comment_author_IP>
    <wp:comment_date>2011-05-13 12:31:26</wp:comment_date>
    <wp:comment_date_gmt>2011-05-13 11:31:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] you&#8217;re fascinated by the Fibonacci numbers you should take a look at Robin Houston&#8217;s The Worst Algorithm in the World post over at the Bosker [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305286287</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305286288.1613";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-13 11:31:26</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2343</wp:comment_id>
    <wp:comment_author><![CDATA[Alex]]></wp:comment_author>
    <wp:comment_author_email>nevknown@rambler.ru</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>93.75.219.170</wp:comment_author_IP>
    <wp:comment_date>2011-05-13 13:47:22</wp:comment_date>
    <wp:comment_date_gmt>2011-05-13 12:47:22</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This algorithm is usually used to introduce the concept of recursion. Of course, an easier and more obvious way to write it is using a loop. That's not the problem of education though, as any adequate programmer will get to this conclusion without any advice.

Still, I wonder how many times have you seen Fibonacci numbers computed in the production code? Is it worth optimizing the thing which is never really used for anything useful other than introducing the concept of recursion?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305290843</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305290843.2252";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-13 12:47:22</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2344</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>80.46.48.235</wp:comment_author_IP>
    <wp:comment_date>2011-05-13 13:55:04</wp:comment_date>
    <wp:comment_date_gmt>2011-05-13 12:55:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I don’t know any practical use for computing the actual Fibonacci numbers, but the reason I started to think about this is because I wanted to compute the function

m(0) = 0
m(1) = 1
m(<i>n</i>+2) = 4m(<i>n</i>+1) - m(<i>n</i>)

(This computes the number of possible mazes on a 2×n grid. If you’ve looked at the <a href="http://bosker.wordpress.com/category/mazes/" rel="nofollow">maze posts</a> here, you’ll see the relevance of that.)

When it comes to algorithms, one linear recurrence is much like another, so I wrote about the Fibonacci numbers because they’re friendly and familiar – but this was very much inspired by a real problem I wanted to solve.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2343</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305291306</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305291307.3818";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-13 12:55:04</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2345</wp:comment_id>
    <wp:comment_author><![CDATA[MJF]]></wp:comment_author>
    <wp:comment_author_email>foo@bar.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>198.152.13.67</wp:comment_author_IP>
    <wp:comment_date>2011-05-13 15:04:21</wp:comment_date>
    <wp:comment_date_gmt>2011-05-13 14:04:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Francisco you are probably assuming automagic memoization.

See
FYI - http://www.haskell.org/haskellwiki/Memoization
with naive Fib being the 'canonical' example.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2311</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305295464</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305295464.8734";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-13 14:04:21</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2346</wp:comment_id>
    <wp:comment_author><![CDATA[Alex]]></wp:comment_author>
    <wp:comment_author_email>nevknown@rambler.ru</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>93.75.219.170</wp:comment_author_IP>
    <wp:comment_date>2011-05-13 21:12:17</wp:comment_date>
    <wp:comment_date_gmt>2011-05-13 20:12:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[No offense. I totally see the point of the post. I just don't like the title. Naming something that's meant as an example the worst thing ever just doesn't seem right.

After all, we've all learned bubble sort. No matter how impractical this algorithm is, it's arguably the easiest one to understand. So is the case with Fibonacci numbers: it's easier to explain recursion using them (or using factorial, doesn't matter) than using a wave-algorithm for pathfinding or something similar.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2344</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305317537</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305317537.7506";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-13 20:12:17</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2348</wp:comment_id>
    <wp:comment_author><![CDATA[Scott S. McCoy]]></wp:comment_author>
    <wp:comment_author_email>tag@cpan.org</wp:comment_author_email>
    <wp:comment_author_url>http://www.blisted.org/</wp:comment_author_url>
    <wp:comment_author_IP>24.23.179.48</wp:comment_author_IP>
    <wp:comment_date>2011-05-14 06:02:43</wp:comment_date>
    <wp:comment_date_gmt>2011-05-14 05:02:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[An interesting anecdote — to play with this idea, I implemented the iterative algorithm on an HP 12-C calculator in RPN (I happened to already have this handy just from playing with RPN).  I implemented the recursive algorithm in bc, and executed it on an 3ghz Intel i7.

I started them both at the same time.  The 200khz HP 12-C was over four times faster than the recursive version on a 3ghz intel.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305349365</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305349365.2411";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-14 05:02:43</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2390</wp:comment_id>
    <wp:comment_author><![CDATA[Developer42]]></wp:comment_author>
    <wp:comment_author_email>johnlbevan@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://developer42.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>82.69.19.10</wp:comment_author_IP>
    <wp:comment_date>2011-06-28 20:52:15</wp:comment_date>
    <wp:comment_date_gmt>2011-06-28 19:52:15</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[For a slightly more efficient recursive algorithm how about:

def f(n):
	if n 0), 0)
	else:
		a,b=f(n-1)
		return (a+b,a)

It's a bit pointless since you'll run out of stack space pretty quickly, but it feels good to write something "better than textbook" ;).

JB]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>10330265</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1309290736</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1309290736.5433";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"developer42";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-28 19:52:15</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2388</wp:comment_id>
    <wp:comment_author><![CDATA[stupid post...]]></wp:comment_author>
    <wp:comment_author_email>stfu@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>132.203.98.75</wp:comment_author_IP>
    <wp:comment_date>2011-06-23 20:08:31</wp:comment_date>
    <wp:comment_date_gmt>2011-06-23 19:08:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Dynamic programming would save you from recalculating the value in the recurrence.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1308856111</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1308856111.6051";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-23 19:08:31</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2353</wp:comment_id>
    <wp:comment_author><![CDATA[Mickey]]></wp:comment_author>
    <wp:comment_author_email>mkawick@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://mkawick@yahoo.com</wp:comment_author_url>
    <wp:comment_author_IP>70.181.134.106</wp:comment_author_IP>
    <wp:comment_date>2011-05-16 13:23:12</wp:comment_date>
    <wp:comment_date_gmt>2011-05-16 12:23:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Exactly. I was looking for someone with this approach. This is relatively easy, linear time, and cannot be significantly improved.

Excellent.

Which language are you using?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2339</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305548592</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305548592.6838";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-16 12:23:12</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2382</wp:comment_id>
    <wp:comment_author><![CDATA[Fibonacci recursivo ou iterativo? - Márcio Francisco Dutra e Campos]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://microprojeto.com.br/wordpress/?p=517</wp:comment_author_url>
    <wp:comment_author_IP>174.36.134.115</wp:comment_author_IP>
    <wp:comment_date>2011-06-23 13:29:40</wp:comment_date>
    <wp:comment_date_gmt>2011-06-23 12:29:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] http://bosker.wordpress.com/2011/04/29/the-worst-algorithm-in-the-world/   This entry is filed under Informática. [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1308832182</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-23 12:29:40</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2384</wp:comment_id>
    <wp:comment_author><![CDATA[cdmillstx]]></wp:comment_author>
    <wp:comment_author_email>cmills@kubra.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>64.124.236.135</wp:comment_author_IP>
    <wp:comment_date>2011-06-23 15:03:49</wp:comment_date>
    <wp:comment_date_gmt>2011-06-23 14:03:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Or, if you solve the linear equation for fib(n), you get:
fib(n) = (((1+sqrt(5))/2)^n-((1-sqrt(5))/2)^n)/sqrt(5)
Assuming that exponentiation is implemented with logs, it's O(1).]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1308837829</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1308837829.7815";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-23 14:03:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2355</wp:comment_id>
    <wp:comment_author><![CDATA[Gareth Rees]]></wp:comment_author>
    <wp:comment_author_email>gdr@garethrees.org</wp:comment_author_email>
    <wp:comment_author_url>http://garethrees.org/</wp:comment_author_url>
    <wp:comment_author_IP>82.69.91.179</wp:comment_author_IP>
    <wp:comment_date>2011-05-16 22:00:12</wp:comment_date>
    <wp:comment_date_gmt>2011-05-16 21:00:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[It's a fine algorithm: it just needs memoizing!

Using the <code>memoized</code> decorator from the Python Decorator Library:

<pre>@memoized
def fib(n):
    assert n &gt;= 0
    if n &lt; 2: return n
    return fib(n-2) + fib(n-1)

&gt;&gt;&gt; import timeit
&gt;&gt;&gt; timeit.timeit("fib(100)", "from __main__ import fib")
0.57807588577270508 #microseconds
</pre>]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305579612</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1305579612.965";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-16 21:00:12</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2356</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.179.199.8</wp:comment_author_IP>
    <wp:comment_date>2011-05-16 22:13:27</wp:comment_date>
    <wp:comment_date_gmt>2011-05-16 21:13:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for the comment, Gareth. I agree this is a lovely example of the power of memoization.

I thought about writing <code>fib_improved</code> using a decorator rather than memoizing it by hand. I decided not to, for two reasons:

1. I thought it would be more confusing for readers who didn't know Python, because Python’s decorator syntax is rather idiosyncratic.

2. The result is not as good, because each recursive call uses two stack frames rather than one, so you hit the limit much sooner: even <code>fibonacci(500)</code> fails with the default recursion limit.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2355</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305580410</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1305580410.669";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-16 21:13:27</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2357</wp:comment_id>
    <wp:comment_author><![CDATA[Alex Clemmer]]></wp:comment_author>
    <wp:comment_author_email>clemmer.alexander@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.google.com/profiles/clemmer.alexander</wp:comment_author_url>
    <wp:comment_author_IP>71.224.68.31</wp:comment_author_IP>
    <wp:comment_date>2011-05-17 00:30:42</wp:comment_date>
    <wp:comment_date_gmt>2011-05-16 23:30:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Interesting post.

One thing, though: if I'm not mistaken, Python probably doesn't use Karatsuba for arbitrary multiplication. Karatsuba has really, really bad constants, and is typically reserved for only very large numbers. It probably will transition to Karatsuba as the numbers become large enough, but especially for small numbers, it is not the case that this is the best algorithm available.

That's a relatively minor point though.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305588643</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305588643.1527";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-16 23:30:42</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2358</wp:comment_id>
    <wp:comment_author><![CDATA[ncr]]></wp:comment_author>
    <wp:comment_author_email>ncr@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>70.91.166.181</wp:comment_author_IP>
    <wp:comment_date>2011-05-18 18:51:25</wp:comment_date>
    <wp:comment_date_gmt>2011-05-18 17:51:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'm pretty sure bogosort has upper bounds of O(infinity) since it is a random algorithm.  That would make it worse.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305741087</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305741088.4451";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-18 17:51:25</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2360</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.178.87.243</wp:comment_author_IP>
    <wp:comment_date>2011-05-19 11:32:58</wp:comment_date>
    <wp:comment_date_gmt>2011-05-19 10:32:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[True.

I still think the comparison with bogosort is reasonably fair, because the running time of bogosort – measured in number of swaps, assuming the Fisher-Yates algorithm is used to implement the shuffle - has a geometric distribution with a mean of <i>n</i>·<i>n</i>!, so the expected run-time is of the same approximate order of badness as the c(<i>n</i>) estimate for <code>fib_rec</code>.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2358</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305801180</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1305801181.082";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-19 10:32:58</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2386</wp:comment_id>
    <wp:comment_author><![CDATA[Br.Bill]]></wp:comment_author>
    <wp:comment_author_email>boctorbill@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>69.30.62.114</wp:comment_author_IP>
    <wp:comment_date>2011-06-23 18:23:51</wp:comment_date>
    <wp:comment_date_gmt>2011-06-23 17:23:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'm pretty sure the worst algorithm in the world is hidden somewhere in the source for Lotus Notes.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1308849834</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1308849835.046";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-23 17:23:51</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2387</wp:comment_id>
    <wp:comment_author><![CDATA[edgartoe]]></wp:comment_author>
    <wp:comment_author_email>edgar.taor@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/edgartoe</wp:comment_author_url>
    <wp:comment_author_IP>189.243.131.133</wp:comment_author_IP>
    <wp:comment_date>2011-06-23 19:43:02</wp:comment_date>
    <wp:comment_date_gmt>2011-06-23 18:43:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[What about the Ackermann funtion?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1308854583</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1308854583.6047";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-23 18:43:02</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2385</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.176.248.237</wp:comment_author_IP>
    <wp:comment_date>2011-06-23 15:26:44</wp:comment_date>
    <wp:comment_date_gmt>2011-06-23 14:26:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Computing powers, even if you do it using logarithms, is definitely not a constant-time operation. See http://en.wikipedia.org/wiki/Computational_complexity_of_mathematical_operations for example.

Of course you can write a program that will work for small values of <i>n</i> using floating-point arithmetic, but it will start to give wrong answers pretty quickly as <i>n</i> gets larger.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2384</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1308839205</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1308839205.4166";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-23 14:26:44</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2391</wp:comment_id>
    <wp:comment_author><![CDATA[zephodthegreat]]></wp:comment_author>
    <wp:comment_author_email>zephod@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/zephodthegreat</wp:comment_author_url>
    <wp:comment_author_IP>86.26.9.234</wp:comment_author_IP>
    <wp:comment_date>2011-07-03 23:10:53</wp:comment_date>
    <wp:comment_date_gmt>2011-07-03 22:10:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[A good article, but this made me twitch:
"what use is a model whose assumptions hide a physical impossibility?"
It's like a civil engineer sneering at a physicist. Engineering is a product of science, and you should have a little more respect for the scientist's tools.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1309731055</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1309731056.1419";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-07-03 22:10:53</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2392</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.176.248.237</wp:comment_author_IP>
    <wp:comment_date>2011-07-03 23:32:46</wp:comment_date>
    <wp:comment_date_gmt>2011-07-03 22:32:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hmm, interesting. That isn’t how I meant it to sound, but I can see why you read it that way.

I should probably delete that whole paragraph. There is a serious and important point to be made, I believe; but I don’t think I’ve succeeded in making it here, and it doesn’t really belong in the middle of an essay about computing Fibonacci numbers.

Thanks for the comment.

<em>(<strong>Added later</strong>: I did delete the paragraph, which might make this exchange hard to understand if you’re reading it now.</em>)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2391</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1309732368</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1309732369.3699";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-07-03 22:32:46</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2397</wp:comment_id>
    <wp:comment_author><![CDATA[Computing Fibonacci numbers using Binet’s formula &laquo; Bosker Blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://bosker.wordpress.com/2011/07/27/computing-fibonacci-numbers-using-binet%e2%80%99s-formula/</wp:comment_author_url>
    <wp:comment_author_IP>216.151.210.35</wp:comment_author_IP>
    <wp:comment_date>2011-07-27 23:55:51</wp:comment_date>
    <wp:comment_date_gmt>2011-07-27 22:55:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] few months ago I wrote something about algorithms for computing Fibonacci numbers, which was discussed in some of the nerdier corners of the internet (and even, curiously, made it [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1311807354</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1311807354.8975";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-07-27 22:55:51</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2389</wp:comment_id>
    <wp:comment_author><![CDATA[Dietmar Kern]]></wp:comment_author>
    <wp:comment_author_email>dietmar.kern@evosoft.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>194.138.39.55</wp:comment_author_IP>
    <wp:comment_date>2011-06-27 12:35:12</wp:comment_date>
    <wp:comment_date_gmt>2011-06-27 11:35:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[What about parallel computing? Any algorithms running faster on multicore machines?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1309174515</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1309174515.8673";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-27 11:35:12</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2504</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.177.2.45</wp:comment_author_IP>
    <wp:comment_date>2012-01-09 15:40:29</wp:comment_date>
    <wp:comment_date_gmt>2012-01-09 14:40:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Removed. Thanks for reminding me.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2502</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1326120032.9765";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1326120032</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-09 14:40:29</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2502</wp:comment_id>
    <wp:comment_author><![CDATA[Volker Grabsch]]></wp:comment_author>
    <wp:comment_author_email>vog@notjusthosting.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.profv.de/</wp:comment_author_url>
    <wp:comment_author_IP>62.96.207.15</wp:comment_author_IP>
    <wp:comment_date>2012-01-09 11:40:48</wp:comment_date>
    <wp:comment_date_gmt>2012-01-09 10:40:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Could anyone remove this comment spam, please?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2500</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1326105651.905";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1326105651</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-09 10:40:48</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2520</wp:comment_id>
    <wp:comment_author><![CDATA[Mike]]></wp:comment_author>
    <wp:comment_author_email>mike.zentner@gatech.edu</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>24.9.117.96</wp:comment_author_IP>
    <wp:comment_date>2012-02-18 21:01:26</wp:comment_date>
    <wp:comment_date_gmt>2012-02-18 20:01:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[That is why I program in Mathematica (disclaimer: I am an engineer and program for mostly modeling purposes and multivariate optimization), but it is surprisingly versatile.  True, some languages handle some things a bit more elegantly, but functional, procedural and OO programming in it is easy and all can be incorporated simultaneously.  

In addition, I love the ability to have a Java and Python plugin.  Good article though, I learned something :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329595292</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329595293.0803";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-02-18 20:01:26</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2524</wp:comment_id>
    <wp:comment_author><![CDATA[James Brannan]]></wp:comment_author>
    <wp:comment_author_email>irregularexpression@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.jamesbrannan.info</wp:comment_author_url>
    <wp:comment_author_IP>50.88.49.69</wp:comment_author_IP>
    <wp:comment_date>2012-03-08 08:22:13</wp:comment_date>
    <wp:comment_date_gmt>2012-03-08 07:22:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I read the entire article thinking, "why not just use the closed-form algorithm?" and then I got to the last sentence :D]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1331191335</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1331191335.5499";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-03-08 07:22:13</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2526</wp:comment_id>
    <wp:comment_author><![CDATA[The worst algorithm in the world? &#8211; aldemir.net]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.aldemir.net/?p=260</wp:comment_author_url>
    <wp:comment_author_IP>212.175.105.8</wp:comment_author_IP>
    <wp:comment_date>2012-03-28 14:13:27</wp:comment_date>
    <wp:comment_date_gmt>2012-03-28 13:13:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] http://bosker.wordpress.com/2011/04/29/the-worst-algorithm-in-the-world/ [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1332940408</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1332940408.1125";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-03-28 13:13:27</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2557</wp:comment_id>
    <wp:comment_author><![CDATA[Steve Chastain]]></wp:comment_author>
    <wp:comment_author_email>stevepuffin@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>99.135.153.47</wp:comment_author_IP>
    <wp:comment_date>2012-07-20 19:14:56</wp:comment_date>
    <wp:comment_date_gmt>2012-07-20 18:14:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I enjoy reading your Algorithm Blog, and would like to respectfully ask a question.  
 
I was wondering if you had any thoughts on buying mathematical algorithms vs. programming them yourself?   Especially for complicated mathematical subroutines, is it cost effective to subscribe to an algorithm library (like www.nag.com) for about $3000 per year, or let your programmers do all the work?  
Have you ever offered an opinion on this subject?   
about this, I would sincerely appreciate a link.  If not, I would appreciate any informed opinions. 
Thanks, Steve
Thanks, Steve Chastain]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1342808098</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342808099.1138";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-20 18:14:56</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2558</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.179.193.133</wp:comment_author_IP>
    <wp:comment_date>2012-07-20 22:15:05</wp:comment_date>
    <wp:comment_date_gmt>2012-07-20 21:15:05</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Steve. What an interesting question. I would have thought it depends rather a lot on what algorithms you need. Algorithms that are used a lot usually have at least an acceptably-good free implementation available somewhere, so I guess there is a third option: use an open source library. But between the three options I think the decision has to be made on a case-by-case basis. The relevant factors certainly include:
<ul>
	<li>How hard is the algorithm to implement?</li>
	<li>Is there a good free implementation?</li>
	<li>Is there a good commercial implementation you could buy?</li>
</ul>

The same considerations as when deciding “build or buy” for any software, I suppose. Do you have a particular problem or algorithm in mind?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2557</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1342818906</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342818906.2103";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-20 21:15:05</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2559</wp:comment_id>
    <wp:comment_author><![CDATA[Steve Chastain]]></wp:comment_author>
    <wp:comment_author_email>stevepuffin@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>99.135.153.47</wp:comment_author_IP>
    <wp:comment_date>2012-07-23 18:22:33</wp:comment_date>
    <wp:comment_date_gmt>2012-07-23 17:22:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Robin,
Great answer thanks!  I was interested it you, or any of your readers, had any specific experience with algorithm libraries?  I'm wondering about the quality of the algorithms and how helpful the Tech Support people are in making it work in your program?  If anyone has any experience (like Numerical Algorithm Group), I'd love hear any opinions. 
Thanks again, Steve]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2558</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1343064154.0758";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343064153</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-23 17:22:33</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2914</wp:comment_id>
    <wp:comment_author><![CDATA[Just occasionally, one would be quite lost without recursion | Bosker Blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://bosker.wordpress.com/2010/08/26/just-occasionally-one-would-be-quite-lost-without-recursion/</wp:comment_author_url>
    <wp:comment_author_IP>66.135.48.190</wp:comment_author_IP>
    <wp:comment_date>2013-03-13 11:22:36</wp:comment_date>
    <wp:comment_date_gmt>2013-03-13 10:22:36</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] is a good example – but it’s telling that good examples of recursive code are so rare that shockingly bad examples are often [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1363170156</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1363170156.8090889453887939453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-03-13 10:22:36</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2769</wp:comment_id>
    <wp:comment_author><![CDATA[Darkvoid]]></wp:comment_author>
    <wp:comment_author_email>darkvoid@netcabo.pt</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>95.93.117.85</wp:comment_author_IP>
    <wp:comment_date>2012-08-31 23:25:19</wp:comment_date>
    <wp:comment_date_gmt>2012-08-31 22:25:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I never tried to code a Fibonacci function. 
But it took me 1 minute to realize it could not be done using: 
 
def fib_rec(n): 
 assert n &gt;= 0 
 if n &lt; 2: return n 
return fib_rec(n-2) + fib_rec(n-1)  
 
This is probably the most inefficient algorithm ever. Even your cached one is super inefficient. 
 
In 5 minutes I have done this C# function that gives me all results in milliseconds: 
 
long fib(int numb) 
        { 
            if (numb == 0) 
                return 0; 
            if (numb == 1) 
                return 1; 
 
            long a = 0; 
            long b = 1; 
            long c = 0; 
 
            for (int i = 2; i &lt;= numb; i++) 
 { 
 c = a + b; 
 a = b; 
 b = c; 
 } 
 
 return c; 
 }]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1346451920</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1346451920.6430680751800537109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-08-31 22:25:19</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3002</wp:comment_id>
    <wp:comment_author><![CDATA[Hardik H Hadvani]]></wp:comment_author>
    <wp:comment_author_email>hhhadvani00@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.hhhprogram.com/</wp:comment_author_url>
    <wp:comment_author_IP>106.76.122.175</wp:comment_author_IP>
    <wp:comment_date>2013-06-05 16:40:07</wp:comment_date>
    <wp:comment_date_gmt>2013-06-05 15:40:07</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Dear Florian Philipp,
                                     I know this is not faster way to calculate Fibonacci series but for the better understanding i write like that its easy to understand for beginners.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1370446809.1645100116729736328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1370446808</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-06-05 15:40:07</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3813</wp:comment_id>
    <wp:comment_author><![CDATA[tony]]></wp:comment_author>
    <wp:comment_author_email>dpierson1141@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>99.45.101.86</wp:comment_author_IP>
    <wp:comment_date>2015-08-23 10:27:33</wp:comment_date>
    <wp:comment_date_gmt>2015-08-23 09:27:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[in python, (without the encoding and decoding strucgures) this gives the nth number (im on the phone, you can do 1 &amp; 2 yourself lol)
a,b=0,1
import time
def fibn(n):
    time.clock()
    for i in range(int(n/2)):
        a,b=a+b,a+b
    return time.clock(), len(b)
for a simple iteration algorithm,
it can do up to n=100,000 in under a second, not too shabby for 2 minutes of work]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2769</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>14005343995</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1440322054</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1440322054.0818269252777099609375;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1440322054</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>What’s all this about mazes? A statement of intent. </title>
  <link>https://bosker.wordpress.com/2011/05/08/what%e2%80%99s-all-this-about-mazes-a-statement-of-intent/</link>
  <pubDate>Sun, 08 May 2011 21:11:59 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=186</guid>
  <description/>
  <content:encoded><![CDATA[I’m trying something that I think is going to be fun and interesting – and, who knows, maybe even useful.

I want to write a program that allows “random access” to all possible mazes, and does it quickly enough to be practical. I think I know how it can be done. That’s why I’m writing about mazes now.
<!--more-->
When I say “maze”, I’m talking about the sort of thing you see in cheap puzzle-books at railway stations, like this:

<a href="http://bosker.files.wordpress.com/2011/05/23x23-rb.png"><img class="aligncenter size-full wp-image-187" title="23x23-rb" src="http://bosker.files.wordpress.com/2011/05/23x23-rb.png" alt="" width="480" height="480" /></a>

Every part of the maze is reachable from every other by precisely one path (so there are no loops). In technical terms, a maze is a spanning tree of a finite rectangular two-dimensional grid.

By random access I mean the following: there are about 8 × 10<sup>249</sup> different possible mazes on a 23×23 grid like the one above. To be precise, there are

<small>8,092,641,670,349,801,721,804,781,137,713,499,621,097,587,118,741,157,248,189,969,
007,805,754,000,654,382,335,518,531,150,471,089,108,161,995,245,369,248,205,451,808,
922,452,989,483,589,738,382,020,054,505,965,237,374,754,791,692,455,943,268,962,118,
313,156,618,241,194,351,661,577,177,461,488,002,356,030,814,981,288,323,446,734,848</small>

of them. I want to assign each of these mazes an index number, from 0 to that huge number above, and to write a pair of programs:
<ul>
	<li>one that can take an index number and generate the corresponding maze,</li>
	<li>one that can take a description of a maze, and return the index number of that maze.</li>
</ul>
I’m not aware that anyone has done precisely this before – if they have, I’d love to hear about it.

But there won’t be much in the way of actual new mathematics: I think I can do it using well-established theories. On the other hand most of the mathematics is new to me, so perhaps it’s new to you as well, and it’s ever so beautiful.

I haven’t worked everything out yet. My desire to write about anything peaks when I think I understand it completely, and diminishes exponentially after that, with a half-life of only a week or two. If I worked everything out before starting to write this, I am sure I should never finish it. But I believe the summit is attainable, and I’ve explored enough of the route that I’m certain the journey will be enjoyable. The whole landscape is interesting enough that I mean to take a scenic route, with the occasional day-trip to enticing bordering lands.

It’s going to be an adventure! Do join me.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>186</wp:post_id>
  <wp:post_date>2011-05-08 22:11:59</wp:post_date>
  <wp:post_date_gmt>2011-05-08 21:11:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>what%e2%80%99s-all-this-about-mazes-a-statement-of-intent</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="algorithms"><![CDATA[algorithms]]></category>
  <category domain="category" nicename="mazes"><![CDATA[mazes]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2381</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>81.152.227.61</wp:comment_author_IP>
    <wp:comment_date>2011-06-13 19:42:06</wp:comment_date>
    <wp:comment_date_gmt>2011-06-13 18:42:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Mithrandir,

Yes, there is a closed-form formula: see the paper <a href="http://front.math.ucdavis.edu/cond-mat/0001408" rel="nofollow">Spanning Trees on Hypercubic Lattices and Non-orientable Surfaces</a>.

But this formula does not seem to be very useful for computing these numbers, because it requires trigonometric functions to be computed to high precision. There are better methods for computing them.

If you really want a fast algorithm for computing the counts, have a look at the code I’ve written in https://github.com/robinhouston/mazing – in particular, <code>fmc.c</code> contains the fast maze-counting algorithm. To run it, you can just use <code>./mazing &lt;width&gt; &lt;height&gt;</code> and it will print the total count for mazes of that size. (It uses libgmp, so you’ll have to install that before you can build it.)

I’m planning to write about it here, when I get time.

Another interesting piece of work on this topic is Paul Raff’s <a href="http://arxiv.org/abs/0809.2551" rel="nofollow">Spanning Trees in Grid Graphs</a>, which derives explicit recurrences for grids that have a fixed (small) size in one dimension.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2379</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1307990528</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1307990528.849";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-13 18:42:06</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2299</wp:comment_id>
    <wp:comment_author><![CDATA[Random access to mazes: plan of attack &laquo; Bosker Blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://bosker.wordpress.com/2011/05/10/random-access-to-mazes-plan-of-attack/</wp:comment_author_url>
    <wp:comment_author_IP>72.233.127.216</wp:comment_author_IP>
    <wp:comment_date>2011-05-10 10:20:55</wp:comment_date>
    <wp:comment_date_gmt>2011-05-10 09:20:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] the last post, I explained what I’m trying to do: to assign each maze an index number in such a way that we can [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305020557.8577";s:7:"message";s:55:"Akismet cleared this comment during an automatic retry.";s:5:"event";s:10:"cron-retry";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1305019255.901";s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305020558</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-10 09:20:55</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2379</wp:comment_id>
    <wp:comment_author><![CDATA[Mithrandir]]></wp:comment_author>
    <wp:comment_author_email>mihai.maruseac@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://pgraycode.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>86.126.4.197</wp:comment_author_IP>
    <wp:comment_date>2011-06-13 14:25:56</wp:comment_date>
    <wp:comment_date_gmt>2011-06-13 13:25:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi, is there a closed form formula for the total count of mazes?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>1853284</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1307971558</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1307971558.4441";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"mmaruseacph2";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-13 13:25:56</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3511</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.175.16.193</wp:comment_author_IP>
    <wp:comment_date>2014-09-15 22:34:34</wp:comment_date>
    <wp:comment_date_gmt>2014-09-15 21:34:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes, this is a useful way to represent mazes in software. The reason it doesn’t solve the problem is that most of these codes represent “imperfect” mazes, where parts of the maze are completely blocked off or where there are loops. I want mazes where “every part of the maze is reachable from every other by precisely one path”, and I want every code to represent such a maze.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3510</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1410816875</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-09-15 21:34:36</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1410816874</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1410816875.1034009456634521484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3510</wp:comment_id>
    <wp:comment_author><![CDATA[max]]></wp:comment_author>
    <wp:comment_author_email>maxxflyer@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.monkeyscage.org/puzzle-hub/</wp:comment_author_url>
    <wp:comment_author_IP>92.225.130.143</wp:comment_author_IP>
    <wp:comment_date>2014-09-15 22:30:38</wp:comment_date>
    <wp:comment_date_gmt>2014-09-15 21:30:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I describe a maze with a grid, that is an Array plus X and Y as width and length. Each door can be open or closed. 0 or 1. so this sequence is the number describing your maze. You don't need a program, or maybe I don't understand the problem. You just need something that takes the 01001101000 sequence and renders it, so it is implicit. diferent is if you want to start from an image and obtain the code: totally different technology. a serious tool could extract the graph...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1410816639</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1410816640.3212299346923828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1410816640</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-09-15 21:30:42</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Random access to mazes: plan of attack</title>
  <link>https://bosker.wordpress.com/2011/05/10/random-access-to-mazes-plan-of-attack/</link>
  <pubDate>Tue, 10 May 2011 09:15:10 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=204</guid>
  <description/>
  <content:encoded><![CDATA[In the <a title="What’s all this about mazes? A statement of intent." href="http://bosker.wordpress.com/2011/05/08/what%e2%80%99s-all-this-about-mazes-a-statement-of-intent/">last post</a>, I explained what I’m trying to do: to assign each maze an index number in such a way that we can generate a maze given its index number, and find out the index number of any maze. One way to think of it is as a perfect compression algorithm for mazes.

But how can we do that? There are a huge number of possible mazes on any decent-sized grid, so it's not feasible to loop through them one-by-one.
<!--more-->
To put this in perspective, if we could somehow generate mazes at a rate of a quadrillion mazes per second – one every attosecond – it would still take ten million times the age of the universe to generate all the mazes that can be drawn on a modest 10×10 grid.

A source of possible hope is the fact that the mazes naturally organise themselves into a binary tree. Here’s what it looks like for the 2×2 grid:
<p style="text-align:center;"><img class="aligncenter size-full wp-image-207" title="tree-of-2x2-x" src="http://bosker.files.wordpress.com/2011/05/tree-of-2x2-x.png" alt="" width="479" height="394" /></p>
We are taking the boundaries between cells – the places where wall segments might go – and considering them one-by-one. First the boundary between the top two cells is considered: on the left is the partially-drawn maze without a wall on that boundary, and on the right is the one with a wall. Then the other three boundaries are considered in order. If an impossible configuration is reached, we cross it out.

At the end we are left with the four possible 2×2 mazes as the remaining leaves of the tree.

The trees will not be very nicely balanced, as you can see in this case where three of the four mazes are on the left-hand branch. But the depth of the tree is equal to the number of cell boundaries, which in general is <strong>much</strong> smaller than the number of possible mazes.

On this picture I’ve written on the branches the number of mazes that branch ultimately leads to. Because the point is this: if we could, somehow, efficiently compute those numbers, then we could use these trees to solve our problem.

Let’s just number the mazes in the order they appear along the leaves of the tree. Then we can use the branching information to derive each of those mazes from its index number, by considering the cell boundaries in turn. In our example, we know that mazes 0–2 are on the left-hand branch, and maze 3 is on the right-hand branch. So maze 3 has a wall at twelve o’clock, and the others don’t. Now the wall at nine o’clock: on the right, it leads to an impossible configuration, so leave it out; on the left, maze 2 has it and mazes 0–1 don’t. And so on, down the tree.

So next time we’ll start to look at how to count mazes – or rather how to count the number of possible completions of a partial maze, which turns out to amount to more or less the same problem. If we can solve that, then we can use it to solve the random access problem.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>204</wp:post_id>
  <wp:post_date>2011-05-10 10:15:10</wp:post_date>
  <wp:post_date_gmt>2011-05-10 09:15:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>random-access-to-mazes-plan-of-attack</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <category domain="category" nicename="mazes"><![CDATA[mazes]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Fibonacci numbers and the Golden Ratio</title>
  <link>https://bosker.wordpress.com/?p=215</link>
  <pubDate>Thu, 12 May 2011 20:28:01 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=215</guid>
  <description/>
  <content:encoded><![CDATA[<p>My recent post on <a title="The worst algorithm in the world?" href="http://bosker.wordpress.com/2011/04/29/the-worst-algorithm-in-the-world/">computing Fibonacci numbers</a> attracted a lot of interesting comment.</p>
<p>Several people suggested using <a href="http://mathworld.wolfram.com/BinetsFibonacciNumberFormula.html">Binet’s formula</a>, which is an interesting idea; but a difficult one to realise efficiently, if you want an exact answer. The most interesting suggestion along these lines was on Hacker News, where <a href="http://news.ycombinator.com/item?id=2538724">one commenter suggested</a> computing $latex 2\varphi^n &amp;fg=000000$ in the extension ring $latex \mathbb{Z}[\sqrt{5}] &amp;fg=000000$.</p>
<p>Let’s unpack this a bit. $latex \varphi &amp;fg=000000$ is the Golden Ratio: the unique positive real number such that</p>
<p style="text-align:center;">$latex \varphi^2 = \varphi + 1 &amp;fg=000000$</p>
<p style="text-align:left;">from which it follows by induction that</p>
<p style="text-align:center;">$latex \varphi^n = \varphi \mathop{\mathrm{fib}}(n) +\mathop{\mathrm{fib}}(n-1) &amp;fg=000000$</p>
<p style="text-align:left;">So one thing you could do would be to compute $latex \varphi^n &amp;fg=000000$ in the ring $latex \mathbb{Z}[\varphi] &amp;fg=000000$ – but that would lead to precisely the same calculations we were already using.</p>
<p style="text-align:left;">Alternatively you could use the fact that</p>
<p style="text-align:center;">$latex \displaystyle\varphi = \frac{\sqrt{5}+1}{2} &amp;fg=000000$</p>
<p style="text-align:left;">to conclude that</p>
<p style="text-align:center;">$latex \displaystyle \varphi^n = \frac{(\sqrt{5}+1)\mathop{\mathrm{fib}}(n) + 2\mathop{\mathrm{fib}}(n-1)}{2} &amp;fg=000000$</p>
<p style="text-align:left;">Hence</p>
<p>$latex \displaystyle \varphi^n = \frac{\sqrt{5}\mathop{\mathrm{fib}}(n) + (\mathop{\mathrm{fib}}(n-1) + \mathop{\mathrm{fib}}(n+1))}{2} &amp;fg=000000$</p>
<p style="text-align:left;">The relation of $latex \varphi &amp;fg=000000$ to the Fibonacci numbers becomes clearer if you multiply that equation by $latex \varphi^n &amp;fg=000000$:</p>
<p style="text-align:center;">$latex \varphi^{n+2} = \varphi^{n+1} + \varphi^{n} &amp;fg=000000$</p>
<p style="text-align:left;">which follows the same pattern as</p>
<p style="text-align:center;">$latex \mathop{\mathrm{fib}}(n+2)=\mathop{\mathrm{fib}}(n+1) + \mathop{\mathrm{fib}}(n) &amp;fg=000000$</p>
<p>The <a href="http://news.ycombinator.com/item?id=2538724">discussion on Hacker News</a> about <a title="The worst algorithm in the world?" href="http://bosker.wordpress.com/2011/04/29/the-worst-algorithm-in-the-world/">computing Fibonacci numbers</a> made me realise a nice relation between the Fibonacci numbers and the golden ratio, that I didn’t know before.</p>
<p>Let $latex \varphi = \frac{\sqrt{5} + 1}{2}&amp;fg=000000$, and let $latex F_n&amp;fg=000000$ denote the Fibonacci numbers: $latex F_0=0&amp;fg=000000$, $latex F_1=1&amp;fg=000000$, $latex F_{n+2}=F_n+F_{n+1}&amp;fg=000000$.</p>
<p><strong>Claim</strong>. $latex \vbox{\[\varphi^n = \frac{F_n\sqrt{5} + F_{n-1} + F_{n+1}}{2}\]} &amp;fg=000000$</p>
<p><em>Proof</em>: By induction. The base case <em>n</em>=1 is obvious. For the induction step we need to show that</p>
<p>$latex \vbox{\[\bigl(\frac{F_n\sqrt{5} + F_{n-1} + F_{n+1}}{2}\bigr)\varphi\ =\ \frac{F_{n+1}\sqrt{5} + F_{n} + F_{n+2}}{2}\]} &amp;fg=000000$</p>
<p>Multiplying out the left-hand side gives:</p>
<p>$latex \frac{1}{4}\bigl[F_{n-1}+F_{n+1}+5F_n + (F_n+F_{n-1}+F_{n+1})\sqrt{5}\bigr] &amp;fg=000000$</p>
<p>so it suffices to show that:</p>
<p>$latex \vbox{\begin{eqnarray}F_{n-1}+F_{n+1}+5F_n&amp;=&amp;2F_n+2F_{n+2}\\F_{n-1}+F_{n+1}+F_n&amp;=&amp;2F_{n+1}\end{eqnarray}} &amp;fg=000000$</p>
<p>For (1), we have:</p>
<p>$latex \begin{array}{r@{\;}c@{\;}l}F_{n-1}+F_{n+1}+5F_n&amp;=&amp;(F_{n-1}+F_n)+4F_n+F_{n+1}\\&amp;=&amp;2F_{n+1}+4F_n\\&amp;=&amp;2(F_n+F_{n+1})+2F_n\\&amp;=&amp;2F_n+2F_{n+2}\end{array} &amp;fg=000000$</p>
<p>and (2) is simply:</p>
<p>$latex \begin{array}{r@{\;}c@{\;}l}F_{n-1}+F_{n+1}+F_n&amp;=&amp;(F_{n-1}+F_n)+F_{n+1}\\&amp;=&amp;2F_{n+1}\end{array} &amp;fg=000000$</p>
<p style="text-align:left;">so it’s true, and we are done.<span style="float:right;display:inline-block;">∎</span></p>
<p style="text-align:left;">Is this a famous theorem? Does it have a name?</p>
<p style="text-align:left;"><strong>Ah!</strong> I’ve just realised this is a roundabout way of saying $latex \varphi^n = F_{n-1} + \varphi F_n &amp;fg=000000$, which is almost obvious: it follows immediately by induction from the defining equation $latex \varphi^2 = \varphi+1 &amp;fg=000000$.</p>
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>215</wp:post_id>
  <wp:post_date>2011-05-12 21:28:01</wp:post_date>
  <wp:post_date_gmt>2011-05-12 20:28:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>fibonacci-numbers-and-the-golden-ratio</wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="fibonacci"><![CDATA[fibonacci]]></category>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2347</wp:comment_id>
    <wp:comment_author><![CDATA[Mikola]]></wp:comment_author>
    <wp:comment_author_email>mikolalysenko@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://0fps.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>70.226.170.72</wp:comment_author_IP>
    <wp:comment_date>2011-05-14 05:41:02</wp:comment_date>
    <wp:comment_date_gmt>2011-05-14 04:41:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[There is a more direct way.  Just solve the characteristic equation for the matrix describing the Fibonacci recurrence.  The Golden ration shows up as one of the two eigenvalues.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1305348063</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1305348063.7479";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-14 04:41:02</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Counting mazes: before we begin</title>
  <link>https://bosker.wordpress.com/2011/05/17/counting-mazes-before-we-begin/</link>
  <pubDate>Mon, 16 May 2011 23:00:31 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=263</guid>
  <description/>
  <content:encoded><![CDATA[If you’re following the <a href="http://bosker.wordpress.com/category/mazes">maze series</a>, I hope you’re persuaded that thinking about how to count mazes is a reasonable line of attack on the random access problem.
<!--more-->
I’ve thought a lot about how best to explain this part. I don’t really want to talk about <a href="http://en.wikipedia.org/wiki/Kirchhoff's_theorem">Kirchhoff’s theorem</a> yet, but if I don’t mention it then those of you that know it will wonder why on earth I haven’t.

So I’ll say it: Kirchhoff”s theorem. It’s a wonderful theorem, which relates the problem of counting mazes to the problem of computing the determinant of a matrix. But that’s all I’m going to say about it for now.

The trouble is it’s not at all obvious how to compute the exact determinant of a large integer matrix efficiently, so it doesn’t automatically make our task any easier. I don’t just want to describe how to count mazes; I want to <em>explain</em> it — and bringing some fairly complicated linear algebra into the picture at this stage doesn’t really help to keep the story straightforward and comprehensible.

More importantly, it turns out there is a fairly natural way to tell the whole story purely in terms of mazes, so that’s what I’m going to do. Later I’ll explain how mazes relate to matrices, just to round it off.

Before we start, we need to formulate the problem precisely. It’s not enough just to count the number of mazes on a rectangular grid, because we also need to count the number of completions of partly-completed grids. So we need something more general.

There’s a simple trick that will prove incredibly useful: we’re going to think about <em>directed</em> mazes. Suppose we have a maze, say this one:

<a href="http://bosker.files.wordpress.com/2011/05/maze-example-undirected.png"><img class="aligncenter size-full wp-image-268" title="maze-example-undirected" src="http://bosker.files.wordpress.com/2011/05/maze-example-undirected.png" alt="" width="200" height="200" /></a>

To convert a maze into a directed maze, you choose a cell to be the root. We could choose any of the 8×8=64 cells in this example maze, but let’s plump for the top-left. Then, in all the other cells except that one, draw an arrow in the direction of the path to the root. Like this:

<a href="http://bosker.files.wordpress.com/2011/05/maze-example-directed-tl.png"><img class="aligncenter size-full wp-image-267" title="maze-example-directed-tl" src="http://bosker.files.wordpress.com/2011/05/maze-example-directed-tl.png" alt="" width="200" height="200" /></a>

Because there is always just one path from every cell to every other, so there is just one path from every other cell to the root, wherever we chose the root to be. So every cell – apart from the root itself – has an arrow pointing out of it in a direction determined unambiguously by the maze and the choice of root.

Once we’ve drawn the arrows, we can remove the walls. You can get them back by looking at the arrows: just draw a wall on any cell boundary that has no arrow pointing to it from either side.

So this gives a useful way to represent a maze:
<ul>
	<li>Choose one cell to be the root;</li>
	<li>For every cell other than the root, draw an arrow from that cell to one neighbouring cell,</li>
	<li>In such a way that there are no cycles (chains of consecutive arrows that return to the starting point).</li>
</ul>
Also, we don’t only want to count the number of mazes on a grid. Just as importantly, we need to count the number of possible completions of a partial maze. As it turns out – not terribly surprisingly – the simplest way to formulate the problem in sufficient generality is to look at (directed) mazes on general graphs, rather than just grids.

For example, suppose we have a partially-completed 3×3 maze, like this:

<a href="http://bosker.files.wordpress.com/2011/05/maze-partial-3x3.png"><img class="aligncenter size-full wp-image-295" title="maze-partial-3x3" src="http://bosker.files.wordpress.com/2011/05/maze-partial-3x3.png" alt="" width="152" height="153" /></a>

We are considering the possible ways this could be completed – and we’re thinking of those completions as directed mazes, so we have to choose a root. Let’s choose the top-left cell. The two cells that are definitely connected to this cell are also part of the root, so we remove all three of them:

<a href="http://bosker.files.wordpress.com/2011/05/maze-partial-3x3-root-removed.png"><img class="aligncenter size-full wp-image-296" title="maze-partial-3x3-root-removed" src="http://bosker.files.wordpress.com/2011/05/maze-partial-3x3-root-removed.png" alt="" width="151" height="153" /></a>

Now we mark the possible arrows that a directed maze might have, consistent with the partial completion:
<a href="http://bosker.files.wordpress.com/2011/05/maze-partial-3x3-graph.png"><img class="aligncenter size-full wp-image-294" title="maze-partial-3x3-graph" src="http://bosker.files.wordpress.com/2011/05/maze-partial-3x3-graph.png" alt="" width="152" height="153" /></a>

This is a sort of directed graph, but it has one slightly unusual feature: arrows that point away from a node but don’t point to another node. (We’re thinking of the root as being outside our graph, remember.) We’ll call them <em>outgoing arrows</em>.

So these are the graphs we’re going to think about, the substrate for our mazes: directed graphs with outgoing arrows.

The scene is set. Let us count!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>263</wp:post_id>
  <wp:post_date>2011-05-17 00:00:31</wp:post_date>
  <wp:post_date_gmt>2011-05-16 23:00:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>counting-mazes-before-we-begin</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <category domain="category" nicename="mazes"><![CDATA[mazes]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Counting mazes, at last</title>
  <link>https://bosker.wordpress.com/?p=307</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=307</guid>
  <description/>
  <content:encoded><![CDATA[I am wary of trying your patience with too many digressions, dear reader, so we’re going to do this in the wrong order.

First of all we’ll play with some actual maze-counting, which I’m sure you’re simply <em>dying</em> to do – but it will require one leap of faith. Then we’ll take a brief and amusing diversion from our main path and return triumphant, a well-built bridge of logic across the chasm.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>307</wp:post_id>
  <wp:post_date>2011-05-17 12:40:58</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <category domain="category" nicename="mazes"><![CDATA[mazes]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Counting small mazes</title>
  <link>https://bosker.wordpress.com/2011/05/19/counting-small-mazes/</link>
  <pubDate>Thu, 19 May 2011 17:01:03 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=314</guid>
  <description/>
  <content:encoded><![CDATA[Before we get into general algorithms for counting mazes, I thought it would be interesting to do some small cases by hand. It’s quite fun to do, and it’ll give us a few numbers to check against the results of more general methods.
<!--more-->
There is one 1×1 maze. Not much to say about that.

There are four 2×2 mazes: <img class="alignnone size-full" style="vertical-align:bottom;margin-top:0;" title="2x2-0" src="http://bosker.files.wordpress.com/2011/05/2x2-01.png" alt="" width="40" height="40" /><img class="alignnone size-full" style="vertical-align:bottom;margin-top:0;" title="2x2-0" src="http://bosker.files.wordpress.com/2011/05/2x2-11.png" alt="" width="40" height="40" /><img class="alignnone size-full" style="vertical-align:bottom;margin-top:0;" title="2x2-0" src="http://bosker.files.wordpress.com/2011/05/2x2-21.png" alt="" width="40" height="40" /><img class="alignnone size-full" style="vertical-align:bottom;margin-top:0;" title="2x2-0" src="http://bosker.files.wordpress.com/2011/05/2x2-31.png" alt="" width="40" height="40" />
<p style="clear:both;">So the first interesting case is 3×3. For this, we’ll classify the 3×3 mazes according to which of its four neighbours the central cell is connected to:</p>

<h3>One neighbour</h3>
Suppose the central cell is connected to the cell above:
<img class="aligncenter size-full" style="margin-top:0;border:1px solid #888;" title="one-neighbour" src="http://bosker.files.wordpress.com/2011/05/one-neighbour.png" alt="" width="58" height="58" />
Then the rest of the maze must consist of two arms growing from the upper cell, with a combined length of 7, so there are eight possibilities:
<img class="alignnone size-full" title="one-neighbour-0" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-0.png" alt="" width="58" height="58" /><img class="alignnone size-full" title="one-neighbour-0" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-1.png" alt="" width="58" height="58" /><img class="alignnone size-full" title="one-neighbour-0" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-2.png" alt="" width="58" height="58" /><img class="alignnone size-full" title="one-neighbour-0" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-3.png" alt="" width="58" height="58" /><img class="alignnone size-full" title="one-neighbour-0" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-4.png" alt="" width="58" height="58" /><img class="alignnone size-full" title="one-neighbour-0" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-5.png" alt="" width="58" height="58" /><img class="alignnone size-full" title="one-neighbour-0" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-6.png" alt="" width="58" height="58" /><img class="alignnone size-full" title="one-neighbour-0" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-7.png" alt="" width="58" height="58" />
These could also be rotated so the single neighbour is at the right, bottom, or left:

<img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-0-r" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-0-r.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-1-r" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-1-r.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-2-r" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-2-r.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-3-r" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-3-r.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-4-r" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-4-r.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-5-r" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-5-r.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-6-r" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-6-r.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-7-r" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-7-r.png" alt="" width="58" height="58" />
<img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-0-b" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-0-b.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-1-b" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-1-b.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-2-b" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-2-b.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-3-b" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-3-b.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-4-b" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-4-b.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-5-b" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-5-b.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-6-b" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-6-b.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-7-b" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-7-b.png" alt="" width="58" height="58" />
<img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-0-l" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-0-l.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-1-l" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-1-l.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-2-l" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-2-l.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-3-l" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-3-l.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-4-l" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-4-l.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-5-l" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-5-l.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-6-l" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-6-l.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="one-neighbour-7-l" src="http://bosker.files.wordpress.com/2011/05/one-neighbour-7-l.png" alt="" width="58" height="58" />
making a total of 32 mazes of this type.

<h3>Two opposite neighbours</h3>
If the central cell is connected to the cells above and below:
<img class="aligncenter size-full" style="margin-top:0;border:1px solid #888;" title="opposite-neighbours" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours.png" alt="" width="58" height="58" />
then there are two independent arms – one on the left, and one on the right, and there are four possibilities for each arm:

<img class="alignnone size-full" style="margin-top:0;margin-left:120px;border-right:1px solid #888;" title="opposite-neighbours-0" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;border-right:1px solid #888;" title="opposite-neighbours-1" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;border-right:1px solid #888;" title="opposite-neighbours-2" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-3" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3.png" alt="" width="58" height="58" />

So there are sixteen of these:

<img class="alignnone size-full" style="margin-top:0;margin-left:120px;" title="opposite-neighbours-0-0" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-0.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-0-1" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-0-2" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-2.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-0-3" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-3.png" alt="" width="58" height="58" /><br><img class="alignnone size-full" style="margin-top:0;margin-left:120px;" title="opposite-neighbours-1-0" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-0.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-1-1" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-1-2" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-2.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-1-3" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-3.png" alt="" width="58" height="58" /><br>
<img class="alignnone size-full" style="margin-top:0;margin-left:120px;" title="opposite-neighbours-2-0" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-0.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-2-1" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-2-2" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-2.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-2-3" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-3.png" alt="" width="58" height="58" /><br><img class="alignnone size-full" style="margin-top:0;margin-left:120px;" title="opposite-neighbours-3-0" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-0.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-3-1" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-3-2" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-2.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-3-3" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-3.png" alt="" width="58" height="58" /><br>

And there are another sixteen rotated versions, where the central cell is connected to the two cells to its left and right:

<img class="alignnone size-full" style="margin-top:0;margin-left:120px;" title="opposite-neighbours-0-0-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-0-r1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-0-1-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-1-r1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-0-2-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-2-r1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-0-3-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-0-3-r1.png" alt="" width="58" height="58" /><br><img class="alignnone size-full" style="margin-top:0;margin-left:120px;" title="opposite-neighbours-1-0-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-0-r1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-1-1-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-1-r1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-1-2-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-2-r1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-1-3-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-1-3-r1.png" alt="" width="58" height="58" /><br>
<img class="alignnone size-full" style="margin-top:0;margin-left:120px;" title="opposite-neighbours-2-0-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-0-r1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-2-1-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-1-r1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-2-2-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-2-r1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-2-3-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-2-3-r1.png" alt="" width="58" height="58" /><br><img class="alignnone size-full" style="margin-top:0;margin-left:120px;" title="opposite-neighbours-3-0-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-0-r1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-3-1-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-1-r1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-3-2-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-2-r1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="opposite-neighbours-3-3-r" src="http://bosker.files.wordpress.com/2011/05/opposite-neighbours-3-3-r1.png" alt="" width="58" height="58" /><br>

<h3>Two adjacent neighbours</h3>
If the central cell is connected to two adjacent neighbours:

<img class="aligncenter size-full" style="margin-top:0;border:1px solid #888;" title="adjacent-neighbours" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours.png" alt="" width="58" height="58" />

then there are two possible ways for the corner cell to be connected:

<img class="alignnone size-full" style="margin-top:0;margin-left:180px;border-right:1px solid #888;" title="adjacent-neighbours-0x" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-0x.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-1x" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-1x.png" alt="" width="58" height="58" />

and six possibilities for the long arms:
<img class="alignnone size-full" style="margin-top:0;margin-left:60px;" title="adjacent-neighbours-x0" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x0.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-x1" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x1.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-x2" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x2.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-x3" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x3.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-x4" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x4.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-x5" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-x5.png" alt="" width="58" height="58" />

for a total of twelve possibilities in this orientation:

<img class="alignnone size-full" style="margin-top:0;margin-left:60px;" title="adjacent-neighbours-00" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-00.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-01" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-01.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-02" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-02.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-03" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-03.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-04" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-04.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-05" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-05.png" alt="" width="58" height="58" />
<img class="alignnone size-full" style="margin-top:0;margin-left:60px;" title="adjacent-neighbours-10" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-10.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-11" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-11.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-12" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-12.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-13" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-13.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-14" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-14.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-15" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-15.png" alt="" width="58" height="58" />

and the other three orientations make a total of 12×4 = 48:

<img class="alignnone size-full" style="margin-top:0;margin-left:60px;" title="adjacent-neighbours-tr-00" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-00.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-tr-01" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-01.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-tr-02" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-02.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-tr-03" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-03.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-tr-04" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-04.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-tr-05" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-05.png" alt="" width="58" height="58" />
<img class="alignnone size-full" style="margin-top:0;margin-left:60px;" title="adjacent-neighbours-tr-10" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-10.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-tr-11" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-11.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-tr-12" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-12.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-tr-13" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-13.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-tr-14" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-14.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-tr-15" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-tr-15.png" alt="" width="58" height="58" />
<img class="alignnone size-full" style="margin-top:0;margin-left:60px;" title="adjacent-neighbours-rb-00" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-00.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-rb-01" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-01.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-rb-02" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-02.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-rb-03" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-03.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-rb-04" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-04.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-rb-05" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-05.png" alt="" width="58" height="58" />
<img class="alignnone size-full" style="margin-top:0;margin-left:60px;" title="adjacent-neighbours-rb-10" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-10.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-rb-11" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-11.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-rb-12" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-12.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-rb-13" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-13.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-rb-14" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-14.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-rb-15" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-rb-15.png" alt="" width="58" height="58" />
<img class="alignnone size-full" style="margin-top:0;margin-left:60px;" title="adjacent-neighbours-bl-00" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-00.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-bl-01" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-01.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-bl-02" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-02.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-bl-03" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-03.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-bl-04" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-04.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-bl-05" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-05.png" alt="" width="58" height="58" />
<img class="alignnone size-full" style="margin-top:0;margin-left:60px;" title="adjacent-neighbours-bl-10" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-10.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-bl-11" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-11.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-bl-12" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-12.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-bl-13" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-13.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-bl-14" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-14.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="adjacent-neighbours-bl-15" src="http://bosker.files.wordpress.com/2011/05/adjacent-neighbours-bl-15.png" alt="" width="58" height="58" />

<h3>Three neighbours</h3>
If the central cell is connected to three neighbours:

<img class="aligncenter size-full" style="margin-top:0;border:1px solid #888;" title="three-neighbours" src="http://bosker.files.wordpress.com/2011/05/three-neighbours.png" alt="" width="58" height="58" />

then there are two possibilities for each corner, again, and four for the arms, for a total of 2×2×4 = 16 in this orientation:

<img class="alignnone size-full" style="margin-top:0;margin-left:120px;" title="three-neighbours-000" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-0001.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="three-neighbours-001" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-0011.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="three-neighbours-002" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-0021.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="three-neighbours-003" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-0031.png" alt="" width="58" height="58" />
<img class="alignnone size-full" style="margin-top:0;margin-left:120px;" title="three-neighbours-010" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-010.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="three-neighbours-011" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-011.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="three-neighbours-012" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-012.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="three-neighbours-013" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-013.png" alt="" width="58" height="58" />
<img class="alignnone size-full" style="margin-top:0;margin-left:120px;" title="three-neighbours-100" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-100.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="three-neighbours-101" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-101.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="three-neighbours-102" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-102.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="three-neighbours-103" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-103.png" alt="" width="58" height="58" />
<img class="alignnone size-full" style="margin-top:0;margin-left:120px;" title="three-neighbours-110" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-110.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="three-neighbours-111" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-111.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="three-neighbours-112" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-112.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="three-neighbours-113" src="http://bosker.files.wordpress.com/2011/05/three-neighbours-113.png" alt="" width="58" height="58" />

and the other three orientations bring the total to 16×4 = 64.

<h3>Four neighbours</h3>
The last case is where the central cell is connected to all four of its neighbours.
<img class="aligncenter size-full" style="margin-top:0;border:1px solid #888;" title="four-neighbours" src="http://bosker.files.wordpress.com/2011/05/four-neighbours.png" alt="" width="58" height="58" />
Two possibilities for each corner makes 2×2×2×2 = 16:

<img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-0000" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-0000.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-0001" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-0001.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-0010" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-0010.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-0011" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-0011.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-0100" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-0100.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-0101" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-0101.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-0110" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-0110.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-0111" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-0111.png" alt="" width="58" height="58" />
<img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-1000" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-1000.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-1001" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-1001.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-1010" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-1010.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-1011" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-1011.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-1100" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-1100.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-1101" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-1101.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-1110" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-1110.png" alt="" width="58" height="58" /><img class="alignnone size-full" style="margin-top:0;" title="four-neighbours-1111" src="http://bosker.files.wordpress.com/2011/05/four-neighbours-1111.png" alt="" width="58" height="58" />

So there are <strong>a total of 192</strong> 3×3 mazes.

Unfortunately there’s no obvious way to generalise this nice classification to larger mazes: the next post in this series will look at a general algorithm.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>314</wp:post_id>
  <wp:post_date>2011-05-19 18:01:03</wp:post_date>
  <wp:post_date_gmt>2011-05-19 17:01:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>counting-small-mazes</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mazes"><![CDATA[mazes]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2367</wp:comment_id>
    <wp:comment_author><![CDATA[kenkin]]></wp:comment_author>
    <wp:comment_author_email>guinev_gs@yahoo.co.nz</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>222.124.203.54</wp:comment_author_IP>
    <wp:comment_date>2011-05-27 04:46:47</wp:comment_date>
    <wp:comment_date_gmt>2011-05-27 03:46:47</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice post.. ^_^ .. I've the interest in this case too..
Wait ur complete series... Thanks.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1306468012</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1306468013.0736";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-27 03:46:47</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2368</wp:comment_id>
    <wp:comment_author><![CDATA[kenkin]]></wp:comment_author>
    <wp:comment_author_email>guinev_gs@yahoo.co.nz</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>222.124.203.54</wp:comment_author_IP>
    <wp:comment_date>2011-05-27 04:55:15</wp:comment_date>
    <wp:comment_date_gmt>2011-05-27 03:55:15</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[generally, i want to know more about this counting maze concept for larger size of maze... is there a specific formula to count the larger maze? or can we use the 3x3 concept as the basic for larger maze? I have no references at it. Nice to be helped on it... ^_^ ...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2367</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1306468519</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1306468520.1123";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-27 03:55:15</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2374</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.180.124.151</wp:comment_author_IP>
    <wp:comment_date>2011-05-30 13:36:43</wp:comment_date>
    <wp:comment_date_gmt>2011-05-30 12:36:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Kenkin. Yeah, I’m going to talk about that in later posts. You can’t just extend the method I used for 3×3, I don’t think, but there is a way to do it reasonably efficiently.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2368</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1306759019</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1306759020.3386";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-30 12:36:43</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Encoding pairs of strings as a single string</title>
  <link>https://bosker.wordpress.com/?p=619</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=619</guid>
  <description/>
  <content:encoded><![CDATA[[sourcecode lang="python"]
import re
def escape(s):
  return re.sub(r&quot;[\\,]&quot;, lambda mo: &quot;\\&quot; + mo.group(0), s)

def unescape(s):
  return re.sub(r&quot;\\(.)&quot;, lambda mo: mo.group(1), s)

def pair_comma(a, b):
  return escape(a) + &quot;,&quot; + escape(b)

def unpair_comma(x):
  mo = re.match(r&quot;^([^\\,]|\\.)*,([^\\,]|\\.)*$&quot;
  if mo:
    return mo.group(1), mo.group(2)
  raise ValueError(&quot;Not a pair&quot;)
[/sourcecode]

[sourcecode lang="python"]
def pair_ab(a, b):
  return &quot;{0}a{1}{0}b{1}&quot;.format(a, b)

def unpair_ab(s):
  n = len(s) // 2
  for i in range(n):
    if s[i] != s[n + i]:
      return s[:i], s[i:n]
[/sourcecode]
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>619</wp:post_id>
  <wp:post_date>2011-05-20 16:03:17</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Computing Fibonacci numbers using Binet’s formula</title>
  <link>https://bosker.wordpress.com/2011/07/27/computing-fibonacci-numbers-using-binet%e2%80%99s-formula/</link>
  <pubDate>Wed, 27 Jul 2011 22:55:48 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=626</guid>
  <description/>
  <content:encoded><![CDATA[A few months ago I wrote something about algorithms for <a href="http://bosker.wordpress.com/2011/04/29/the-worst-algorithm-in-the-world/">computing Fibonacci numbers</a>, which was discussed in some of the <a href="http://news.ycombinator.com/item?id=2537811">nerdier</a> <a href="http://www.reddit.com/r/programming/comments/h9x3r/">corners</a> of the internet (and even, curiously, made it into <a href="http://hackermonthly.com/issue-14.html">print</a>).

Several people suggested that Binet’s closed-form formula for Fibonacci numbers might lead to an even faster algorithm. That’s an interesting idea, which we’re going to explore in this post. So, what is Binet’s formula? It goes like this:
<p align="center">$latex \begin{array}{r@{\;}c@{\;}l}\mathop{\mathrm{fib}}(n)&amp;=&amp;\displaystyle\frac{\varphi^n + (1 - \varphi)^n}{\sqrt{5}}\end{array}&amp;fg=000000$</p>
where $latex \varphi=\frac{1+\sqrt{5}}{2}&amp;fg=000000$ is the golden ratio.
<!--more-->
I’d like to explain why this formula works, because it’s a lovely story; and, despite what you might think from most of the explanations on the web, it’s perfectly possible to understand and appreciate it without knowing what “eigenvalue” means. But I fear that would be too long a digression here, so I’ll save it for another post.

There is a nice trick we can use to simplify the computation of this expression, taking advantage of the fact we know it always comes out as an integer. Since <em>φ</em> is about 1.618, its negative cousin (1-<em>φ</em>) is about -0.618, which means that the term
<p align="center">$latex \displaystyle\frac{(1 - \varphi)^n}{\sqrt{5}}&amp;fg=000000$</p>
is always between -1/2 and 1/2. So we can just compute
<p align="center">$latex \displaystyle\frac{\varphi^n}{\sqrt{5}}&amp;fg=000000$</p>
and round to the nearest integer.

The simplest way to implement this idea is to use ordinary floating-point arithmetic. For example, in C we might write:

[sourcecode lang="c"]
double fib_fixed(long n)
{
    double phi = (sqrt(5) + 1) / 2.0;
    return round(pow(phi, n) / sqrt(5));
}
[/sourcecode]

This is simple and fast. The only trouble is that it almost always gives the wrong answer. On my machine the answer is wrong whenever <em>n</em> &gt; 70. For example <code>fib_fixed(71)</code> gives <code>308061521170130</code>, whereas the correct answer is <code>308061521170129</code>, and it only gets worse from there.

We can improve the situation a little by tweaking the computation, but, however cunningly we do that, we’ll soon run into a fundamental obstacle: <code>fib(79)</code> is <code>14472334024676221</code>, which can’t even be represented in an <a href="http://en.wikipedia.org/wiki/Double_precision_floating-point_format">IEEE double</a>. You can see that illustrated as a <a href="http://www.google.com/search?q=14472334024676221+-+14472334024676220">comedy Google calculator fail</a>.

So if we want to implement this in a general way then we need to use arbitrary-precision floating-point arithmetic. For some reason this has not gone mainstream in the way that big ints have done, but the <a href="http://www.gmplib.org/">GMP</a> library has a good implementation, so we’ll use that. Here’s the code:

[sourcecode lang="c"]
void fib_float(mpf_t *result, long n)
{
    mpf_t sqrt5, phi;
    mp_bitcnt_t bitcnt;

    /* We need about n lg(phi) bits of precision */
    bitcnt = n * 7 / 10;

    /* Initialise sqrt5 to the square root of 5 */
    mpf_init2(sqrt5, bitcnt);
    mpf_sqrt_ui(sqrt5, 5);

    /* Initialise phi to the Golden Ratio */
    mpf_init2(phi, bitcnt);
    mpf_set(phi, sqrt5);
    mpf_add_ui(phi, phi, 1);
    mpf_div_2exp(phi, phi, 1);

    /* Compute phi ^ n / sqrt5 */
    mpf_init2(*result, bitcnt);
    mpf_pow_ui(*result, phi, n);
    mpf_div(*result, *result, sqrt5);

    /* Dispose of the temporary variables */
    mpf_clear(sqrt5);
    mpf_clear(phi);
}[/sourcecode]

This works fine, gives correct answers, and is reasonably fast. But how does it compare to the integer methods? For comparison, I rewrote the <code>fib_fast</code> algorithm from my last post to use GMP integers. Click to see the code:

[sourcecode lang="c" collapse="true"]
void fib_int(mpz_t *result, long n)
{
    mpz_t a, b, c;
    long bit, mask;

    /* Set 'bit' to the most-significant 1-bit of 'n' */
    bit = 1; mask = 1;
    while (n &gt; mask) {
        bit = bit &lt;&lt; 1;
        mask = (mask &lt;&lt; 1) | 1;     }           mpz_init_set_ui(a, 1);     mpz_init_set_ui(b, 0);     mpz_init_set_ui(c, 1);          while (bit &gt; 0) {
        if ( (n &amp; bit) != 0 ) {
            /*  a, b = (a + c) * b, (b * b) + (c * c)  */
            mpz_add(a, a, c);
            mpz_mul(a, a, b);

            mpz_mul(b, b, b);
            mpz_addmul(b, c, c);
        }
        else {
            /*  a, b = (a * a) + (b * b), b * (c + a)  */
            mpz_add(c, c, a); /* Temporarily set c := c + a */

            mpz_mul(a, a, a);
            mpz_addmul(a, b, b);

            mpz_mul(b, b, c);
        }

        mpz_add(c, a, b);
        bit &gt;&gt;= 1;
    }

    mpz_init_set(*result, b);
    mpz_clear(a); mpz_clear(b); mpz_clear(c);
}
[/sourcecode]

Then I made a graph showing the execution time of both methods, against the input <em>n</em>. The vertical axis shows elapsed time, in ticks, when running on my computer. (But it doesn’t really matter what it is, since we are interested in the relationship between the speed of the two methods, rather than the exact speed of either.)

<img class="alignnone size-full wp-image-643" title="Computation time of Fibonacci numbers" alt="" src="http://bosker.files.wordpress.com/2011/07/linear-graph.png" width="480" height="319" />

Clearly the integer method is faster, but the curves are not obviously different shapes. A log-log plot shows the relationship more clearly:

<img class="alignnone size-full wp-image-648" title="A log-log plot of the same data" alt="" src="http://bosker.files.wordpress.com/2011/07/graph-002.png" width="480" height="356" />

which supports the idea (consistent with what you’d expect in theory) that both algorithms have the same big-O complexity, but the integer method is consistently about five times faster.

Floating-point arithmetic has a reputation for being difficult and unreliable; a technique that is good for finding approximate answers quickly, but best avoided when a precise answer is required. And actually I think that’s a fair assessment on the whole, but it’s interesting to see how arbitrary-precision floating point arithmetic can give us an exact answer very easily in this case. Of course we lose a lot of the speed advantage that floating-point conventionally offers, because our hardware doesn’t have the same fast native support for these “big floats” that it does for IEEE doubles.
<h2>Another approach</h2>
A related idea is to take advantage of the fact that all the calculations produce numbers of a special form, e.g. <em>a</em>+<em>bφ</em> for integers <em>a</em> and <em>b</em>. This works essentially because <em>φ</em><sup>2</sup> = 1 + <em>φ</em>, and so any polynomial in <em>φ</em> can be reduced to that form.

This turns out to be precisely equivalent to the matrix technique we used last time, because <em>φ</em><sup><em>n</em></sup> = fib(<em>n</em>-1) + fib(<em>n</em>)<em>φ</em>, and so computing powers of <em>φ</em> in this representation is just directly equivalent to computing Fibonacci numbers.

A variation of this – as <a href="http://news.ycombinator.com/item?id=2538724">suggested on HN</a> – is to use the fact that <em>φ</em><sup><em>n</em></sup> is always of the form
<p style="text-align:center;">$latex \displaystyle \frac{a + b\sqrt{5}}{2} &amp;fg=000000$</p>
for integers <em>a</em> and <em>b</em>. This idea leads to the <a href="http://en.wikipedia.org/wiki/Lucas_number">Lucas numbers</a>, because
<p style="text-align:center;">$latex \displaystyle \varphi^n = \frac{{\mathop{\mathrm{luc}}(n) + \mathop{\mathrm{fib}}(n) \sqrt{5}}}{2} &amp;fg=000000$</p>
where luc(<i>n</i>) = fib(<i>n</i>-1) + fib(<i>n</i>+1), and hence to an efficient integer algorithm based on the identities

fib(2<i>n</i>) = luc(<i>n</i>) fib(<i>n</i>)
luc(2<i>n</i>) = 5 fib(<i>n</i>)^2 + 2 (-1)<sup><i>n</i></sup>

luc(2<i>n</i> + 1) = (5/2) fib(<i>n</i>) (fib(<i>n</i>) + luc(<i>n</i>)) + (-1)<sup><i>n</i></sup>
fib(2<i>n</i> + 1) = luc(2<i>n</i> + 1) - 2 luc(<i>n</i>) fib(<i>n</i>)

The complete code for this algorithm is <a href="https://github.com/robinhouston/fibonacci-float-calc/blob/master/lucas.c">here</a>, and more generally all the code used in this post is <a href="https://github.com/robinhouston/fibonacci-float-calc">on GitHub</a>. Remarks and critique would be very welcome. You can follow me on Twitter at <a href="http://twitter.com/robinhouston">@robinhouston</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>626</wp:post_id>
  <wp:post_date>2011-07-27 23:55:48</wp:post_date>
  <wp:post_date_gmt>2011-07-27 22:55:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>computing-fibonacci-numbers-using-binet%e2%80%99s-formula</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="algorithms"><![CDATA[algorithms]]></category>
  <category domain="post_tag" nicename="fibonacci"><![CDATA[fibonacci]]></category>
  <category domain="category" nicename="fibonacci-numbers"><![CDATA[Fibonacci numbers]]></category>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_1669861</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2399</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.178.80.120</wp:comment_author_IP>
    <wp:comment_date>2011-07-28 21:18:06</wp:comment_date>
    <wp:comment_date_gmt>2011-07-28 20:18:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yeah, that’s what I did. The graphs show the arbitrary-precision floating point algorithm compared with the arbitrary-precision integer algorithm.

Sorry it was unclear. Out of interest, what did you think I meant? (I’m wondering how I could make it clearer.)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1311884289</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1311884290.0783";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-07-28 20:18:06</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2400</wp:comment_id>
    <wp:comment_author><![CDATA[Delphi Geek]]></wp:comment_author>
    <wp:comment_author_email>SorryNo@example.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>69.118.167.199</wp:comment_author_IP>
    <wp:comment_date>2011-07-29 15:25:33</wp:comment_date>
    <wp:comment_date_gmt>2011-07-29 14:25:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This article made me check my Fibonacci routines in Delphi, and sure enough, they were slightly off at "high" values like 71 and 79. However, Delphi and its ancestors have access to Intel's extended precision reals (extended type; most likely "long double" for most C compilers). Both the integer and floating point functions were using extendeds (long doubles) where appropriate, but the constants I had defined for Phi and SqrtOf5 were only defined to the precision of a double. After looking up the current definitions of those values (in Wikipedia, which changed a lot since those routines were written) and adding a few more digits of precision, the old routines provide correct values over a greater range of their domains.  It's not important enough for me to test thoroughly right now, and I'm short on time... but it looks pretty good on quick tests.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1311949533</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1311949533.7092";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-07-29 14:25:33</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2401</wp:comment_id>
    <wp:comment_author><![CDATA[Delphi Geek]]></wp:comment_author>
    <wp:comment_author_email>SorryNo@example.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>69.118.167.199</wp:comment_author_IP>
    <wp:comment_date>2011-07-29 15:51:45</wp:comment_date>
    <wp:comment_date_gmt>2011-07-29 14:51:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Oh yeah...  I don't return doubles; either int64's (long long) or extended (long double). The long long return type doesn't overflow until the input paramter is greater than 92! Of course the extended function will never show more than 20 digits of precision... One of these days I'll find a good arbitrary-precision lib for floats for old Delphis... ]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1311951105</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1311951105.7459";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-07-29 14:51:45</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2398</wp:comment_id>
    <wp:comment_author><![CDATA[c janscen]]></wp:comment_author>
    <wp:comment_author_email>cjanscen@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>134.134.137.71</wp:comment_author_IP>
    <wp:comment_date>2011-07-28 20:15:02</wp:comment_date>
    <wp:comment_date_gmt>2011-07-28 19:15:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[to be fair, you should compare arbitrary precision integer version against the arbitrary precision floating point version, right?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1311880505</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1311880505.6157";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-07-28 19:15:02</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2409</wp:comment_id>
    <wp:comment_author><![CDATA[Richard Zetterberg]]></wp:comment_author>
    <wp:comment_author_email>richard.zetterberg@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>81.25.81.123</wp:comment_author_IP>
    <wp:comment_date>2011-08-02 10:16:36</wp:comment_date>
    <wp:comment_date_gmt>2011-08-02 09:16:36</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Very interesting article! I was wondering how this approach would match (performance vise) against a very simple and naive approach like this: http://pastebin.com/quZ3qz7q (Proof of concept code).]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1312276596</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1312276596.8314";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-08-02 09:16:36</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2421</wp:comment_id>
    <wp:comment_author><![CDATA[Mike]]></wp:comment_author>
    <wp:comment_author_email>michael.conlen@ncf.edu</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>131.247.152.133</wp:comment_author_IP>
    <wp:comment_date>2011-10-11 00:50:46</wp:comment_date>
    <wp:comment_date_gmt>2011-10-10 23:50:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I think there's a small problem in your code for binet's formula. You estimate the value of the base 2 log of the golden ratio right, but when you multiply by n and it gets typecast to an unsigned long (per the gmp docs, mp_bitcnt_t is unsigned long) many (if not all) C compilers floor the result to typecast. You can loose some precision because you're just shy of what you need. This was evidenced by some large (circa 10^6) computations compared against an iterative integer computation (unrolling the tail recursion of a recursive solution) also using gmp. 

You should add a +1 to the precision.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1318290648</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1318290649.2321";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-10-10 23:50:46</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2422</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.180.125.183</wp:comment_author_IP>
    <wp:comment_date>2011-10-11 01:22:57</wp:comment_date>
    <wp:comment_date_gmt>2011-10-11 00:22:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Mike: Interesting comment. Thanks. Since 7/10 is a slight over-estimate for lg(φ) I thought I was safe here, but I didn’t analyse it carefully.

Do you have a concrete example where my float-calc program gives an incorrect answer? I can’t seem to find one. Even 10^7 is checking out for me.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2421</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1318292577</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:13:"1318292577.43";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-10-11 00:22:57</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2982</wp:comment_id>
    <wp:comment_author><![CDATA[0 1 1 2 3 5 8 13&#8230; | Cute Code]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://matthewarcus.wordpress.com/2012/12/28/219/</wp:comment_author_url>
    <wp:comment_author_IP>72.232.113.87</wp:comment_author_IP>
    <wp:comment_date>2013-05-18 23:28:48</wp:comment_date>
    <wp:comment_date_gmt>2013-05-18 22:28:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] We can save a bignum multiplication in each recursive step by replacing a,b = a*b,(5*a*a+b*b)//2 with something like ab = a*b; t = (a+b)*(5*a+b); a,b = ab,t//2-3*ab (suggestion due to Robin Houston at http://bosker.wordpress.com/2011/07/27/computing-fibonacci-numbers-using-binet%E2%80%99s-formula/). [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368916128</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368916128.885529041290283203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-05-18 22:28:48</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Something I don’t understand about homomorphic encryption</title>
  <link>https://bosker.wordpress.com/2011/07/31/something-i-don%e2%80%99t-understand-about-homomorphic-encryption/</link>
  <pubDate>Sun, 31 Jul 2011 17:05:40 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=662</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Added later:</strong> <em>In retrospect, now I know a little more about cryptography, I can see that my confusion here is caused entirely by the fact that I didn’t know the meaning of the technical term “semantic security”.</em>

Ever since Craig Gentry’s seminal work in 2009, there has been a certain amount of excitement about the potential of fully homomorphic encryption. The idea, I gather, is that using a fully homomorphic encryption scheme makes it possible to perform computations on encrypted data <em>without decrypting it</em>, yielding an encrypted result. For example, this would make it possible to process confidential data in an untrusted data centre.

The technology is edging towards practicality as better schemes are devised, and it may soon reach the point where it’s useful in some real-world situations.

But there’s something I don’t understand. I’m hoping that someone who <em>does</em> understand it may come across this and explain it.
<!--more-->
The techniques used seem to allow the computation of arbitrary polynomials over various finite rings, and – at least in everything I’ve read – it’s always treated as obvious that this is equivalent to allowing arbitrary computations. Is that actually true? If so, is it really obvious? I’d love some enlightenment here.

A related source of confusion is that clearly any encryption scheme that <em>actually</em> supported arbitrary computations on encrypted values would be hopelessly insecure. For example, suppose you have encrypted a ten-character ascii password. I then run the function that extracts the first character. The result I get is still encrypted, but since there are only 128 possible values for an ascii character, I can encrypt each of these values and compare the result to the result of my computation. (I can do this because I can always encrypt any data of my choice, just by running a constant-valued function inside the encryption.) Then I do the same for the second character, and so on, till I have your complete password. Encryption fail!

The only reasonable conclusion I can draw from this is that fully homomorphic encryption does not really permit arbitrary computations on the encrypted data. In that case,
<ol>
<li>Why do people keep saying it does?</li>
<li>What is the class of computations that are in fact permitted? Is it just the evaluation of polynomials?</li>
</ol>

People of the Internet, I thank you.

<b>Added later</b>: After reading some more about it, I think Gentry’s scheme has the property that each plaintext can be represented by a large number of possible ciphertexts. This could potentially have the effect that the decoding scheme I described can’t be made to work. Is that relevant?]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>662</wp:post_id>
  <wp:post_date>2011-07-31 18:05:40</wp:post_date>
  <wp:post_date_gmt>2011-07-31 17:05:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>something-i-don%e2%80%99t-understand-about-homomorphic-encryption</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="algorithms"><![CDATA[algorithms]]></category>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_1669861</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2402</wp:comment_id>
    <wp:comment_author><![CDATA[davidcash]]></wp:comment_author>
    <wp:comment_author_email>cdc@gatech.edu</wp:comment_author_email>
    <wp:comment_author_url>http://www.cse.ucsd.edu/~cdcash/</wp:comment_author_url>
    <wp:comment_author_IP>99.150.247.58</wp:comment_author_IP>
    <wp:comment_date>2011-07-31 19:17:37</wp:comment_date>
    <wp:comment_date_gmt>2011-07-31 18:17:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Your "added later" comment nails it.  

A basic property of a secure encryption scheme (homomorphic or not) is: "Given a ciphertext C and message M, you shouldn't be able to check if C is an encryption of M."

Gentry's scheme has this property, as well as every other "modern" public-key encryption scheme. For most settings, this means that the encryption algorithm must be randomized in order to prevent "re-encryption attacks" like the one you described.  Having a randomized encryption algorithm implies that for each message there are very many possible ciphertexts corresponding to it, so when you re-encrypt, even if you are re-encrypting the same message, it's very unlikely that you'll get a matching ciphertext.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1312136258</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1312136258.4781";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-07-31 18:17:37</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2403</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.178.80.120</wp:comment_author_IP>
    <wp:comment_date>2011-07-31 19:43:03</wp:comment_date>
    <wp:comment_date_gmt>2011-07-31 18:43:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thank you, David. That’s very helpful indeed.

What about the leap from polynomials to arbitrary functions? Is it just the case that all functions can be expressed as polynomials, in the rings that are used?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2402</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1312137783</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1312137783.9584";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-07-31 18:43:03</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2404</wp:comment_id>
    <wp:comment_author><![CDATA[fractalcat]]></wp:comment_author>
    <wp:comment_author_email>sio@tesser.org</wp:comment_author_email>
    <wp:comment_author_url>http://tesser.org</wp:comment_author_url>
    <wp:comment_author_IP>124.168.2.243</wp:comment_author_IP>
    <wp:comment_date>2011-07-31 21:21:14</wp:comment_date>
    <wp:comment_date_gmt>2011-07-31 20:21:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[The leap from polynomials to arbitrary functions isn't obvious to me either. From what I can gather, Gentry initially defines an evaluation function which operates on circuits consisting of add and multiply gates, then uses those two operations to define nand; from nand, you can build any circuit of a given depth; and as the evaluate function can execute circuits of arbitrary depth, a series of circuits can be constructed to compute any function that's computable by a Turing machine. 

This may be completely wrong (no higher education and very limited knowledge of computation theory) - I look forward to a better explanation.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2403</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1312143674</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1312143674.1605";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-07-31 20:21:14</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2405</wp:comment_id>
    <wp:comment_author><![CDATA[Paul Roberts]]></wp:comment_author>
    <wp:comment_author_email>proberts@microsoft.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.facebook.com/pacaro</wp:comment_author_url>
    <wp:comment_author_IP>98.203.251.137</wp:comment_author_IP>
    <wp:comment_date>2011-07-31 23:40:43</wp:comment_date>
    <wp:comment_date_gmt>2011-07-31 22:40:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You need to read up a little about group theory. My (limited) understanding is that if you can provide a bijective mapping between all the elements of one group (say polynomials) with the elements on another group (say integers modulo n), then you can prove that mathematical results that apply in one group apply in either...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1312152043</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1312152043.5457";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value/>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>620837152</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-07-31 22:40:43</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2406</wp:comment_id>
    <wp:comment_author><![CDATA[davidcash]]></wp:comment_author>
    <wp:comment_author_email>cdc@gatech.edu</wp:comment_author_email>
    <wp:comment_author_url>http://www.cse.ucsd.edu/~cdcash/</wp:comment_author_url>
    <wp:comment_author_IP>174.65.127.213</wp:comment_author_IP>
    <wp:comment_date>2011-08-01 00:26:33</wp:comment_date>
    <wp:comment_date_gmt>2011-07-31 23:26:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[No problem!

I am not sure about the best way to go from polynomials to arbitrary functions.  My understanding is that are two ways. The first is, as you suggest, to express the function you want to compute as a polynomial.  You can always do this, but it's not very efficient for arbitrary functions, and you will have to fix the degree of the polynomial ahead of time (when you generate the key).  The second way is to use the "bootstrapping" technique introduced in the original paper, or one of its recent variants.  It's more complicated, but briefly, it involves expressing the program as a boolean NAND circuit.  One homomorphically evaluates this circuit using a clever trick where one repeatedly evaluates a polynomial that corresponds to the decryption circuit with an additional NAND gate.  Thus you only have to deal with that one polynomial instead of an arbitrary one.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2403</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1312154793</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1312154793.7081";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-07-31 23:26:33</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2411</wp:comment_id>
    <wp:comment_author><![CDATA[Challenging the Power of Twitter &laquo; Bosker Blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://bosker.wordpress.com/2011/08/03/challenging-the-power-of-twitter/</wp:comment_author_url>
    <wp:comment_author_IP>72.233.61.64</wp:comment_author_IP>
    <wp:comment_date>2011-08-03 17:44:16</wp:comment_date>
    <wp:comment_date_gmt>2011-08-03 16:44:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] about things I understand, so it was something of an experiment when on Sunday evening I wrote a short post about something I did not [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1312389856</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1312389856.3242";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-08-03 16:44:16</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Challenging the Power of Twitter</title>
  <link>https://bosker.wordpress.com/2011/08/03/challenging-the-power-of-twitter/</link>
  <pubDate>Wed, 03 Aug 2011 16:44:05 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=672</guid>
  <description/>
  <content:encoded><![CDATA[Most of the time I use this blog to write about things I understand, so it was something of an experiment when on Sunday evening I wrote <a href="http://bosker.wordpress.com/2011/07/31/something-i-don%e2%80%99t-understand-about-homomorphic-encryption/" title="Something I don’t understand about homomorphic encryption">a short post</a> about something I did not understand.
<!--more-->
I wrote the post quickly, and posted a link to Twitter. In a shameless bid to get a few more people interested, I then tweeted:

<blockquote>A test of the power of Twitter. Can I reach someone who understands homomorphic encryption, and is willing to help a confused soul? (<a href="https://twitter.com/#!/robinhouston/status/97716051378323456">link</a>)</blockquote>

I should have known better than to challenge the Power of Twitter, because that sparked a frenzy of retweeting. And so I learnt that Twitter is home to a great many kind generous people who like nothing better than to come to the aid of a stranger who calls for help — though unfortunately none of these people knows anything about homomorphic encryption.

Colin Wright was also kind enough to post my question to Hacker News, which led to <a href="http://news.ycombinator.com/item?id=2828887">a depressingly ill-informed but mercifully brief discussion</a> there.

But it worked out well, because somehow or other <a href="http://cseweb.ucsd.edu/~cdcash/">David Cash</a> found my post. David understood what I was asking, knew the answers, and explained them clearly and succinctly. Thanks, David.

For the benefit of anyone else who is curious, I should explain briefly what I’ve learnt – though I suggest you also look at <a href="http://bosker.wordpress.com/2011/07/31/something-i-don’t-understand-about-homomorphic-encryption/#comments">David’s comments</a>.

In the simplest proof-of-principle presentation of homomorphic encryption, each bit is encrypted separately. I failed to realise this, because I hadn’t understood that the encryption is randomised so the encryption process is unlikely to give the same result twice even when encrypting with the same key. This randomisation protects against the re-encryption attack I mentioned, though of course it means that each encrypted bit must be a lot bigger than one bit, so there is a substantial blow-up in size when encrypting the data.

So as long as there is a way to perform (say) the AND and XOR operations on encrypted values – which there is, since they correspond to multiplication and addition modulo 2 – it’s possible to perform some arbitrary computation with the encrypted values.

There is a little mathematics to be found here as well. It’s something that I probably ought to have known all along; but I didn’t, or if I ever did then I had forgotten, so perhaps you will also find it interesting.

<b>Claim</b>. If F is a finite field, then every function F<sup>n</sup>→F can be represented by a polynomial in n variables.

This is not hard to prove, and it’s always more enlightening to prove something oneself than to read someone else’s proof, so I shan’t give it away. If you haven’t seen this before, and you like that sort of thing, do feel free to write your proof in the comments.
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>672</wp:post_id>
  <wp:post_date>2011-08-03 17:44:05</wp:post_date>
  <wp:post_date_gmt>2011-08-03 16:44:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>challenging-the-power-of-twitter</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2412</wp:comment_id>
    <wp:comment_author><![CDATA[HTFB]]></wp:comment_author>
    <wp:comment_author_email>braun@mobquad.org</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>95.147.164.75</wp:comment_author_IP>
    <wp:comment_date>2011-08-03 20:40:37</wp:comment_date>
    <wp:comment_date_gmt>2011-08-03 19:40:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[If c is any element of the (N-element) finite field F, consider the product of all the polynomials (X-d) as d ranges over all elements of F other than c. This is a polynomial in one variable of degree N-1 that evaluates to value 0 when X is not equal to c, and has value -1 at X = c. (Because every non-zero element of F has a multiplicative inverse and we are multiplying all the pairs of mutually inverse elements together, except for +/-1 which are self-inverse---or the same, in a field of characteristic two.)

These polynomials in X clearly form an F-linear basis for the set of functions mapping F to F. And by multiplying together a basis polynomial in X with a basis polynomial in Y, we get a polynomial in two variables of degree 2N-2 which isolates an element of FxF; between them these form a basis for the functions of two variables. Et cetera.

(A LaTeX-free proof. It's like working in constructivist logic.)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1312400437</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1312400438.1788";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-08-03 19:40:37</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2509</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.181.154.243</wp:comment_author_IP>
    <wp:comment_date>2012-02-12 23:58:51</wp:comment_date>
    <wp:comment_date_gmt>2012-02-12 22:58:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I think perhaps you <i>are</i> allowed $latex \LaTeX$ in the comments. But I’m not sure, so this comment is an experiment.

<strong>Edited to add</strong>: Ah good, that worked. You just have to surround your $latex \LaTeX$ code with <code>&#036;latex … &#036;</code>.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2412</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329087534</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329087534.7322";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-02-12 22:58:51</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>How to record a screencast video for free on Mac OS X</title>
  <link>https://bosker.wordpress.com/2011/12/11/how-to-record-a-screencast-video-for-free-on-mac-os-x-10-7-lion/</link>
  <pubDate>Sun, 11 Dec 2011 00:42:37 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=680</guid>
  <description/>
  <content:encoded><![CDATA[It’s hard to find any detailed information on the web about how to record a screen video without buying expensive software. I found out how to do it, so here I’m going to explain what I did for the benefit of anyone else who’s trying to do the same.

<!--more-->

I did this on Mac OS X 10.7 ‘Lion’, but I've been told it works on 10.6 ‘Snow Leopard’ too. The basic technique still works on 10.8 ‘Mountain Lion’, though sadly the trick for recording the application’s audio doesn’t work any more.

Taking a screen video is very easy, once you know where the feature is hidden. The QuickTime Player application has an option to record a screen video: <img src="http://bosker.files.wordpress.com/2011/12/quicktime-player_s-file-menu-truncated.png" alt="" title="QuickTime Player’s File menu truncated" width="314" height="110" class="aligncenter size-full wp-image-732" />

When you choose New Screen Recording from the menu, a small black window appears:
<img src="http://bosker.files.wordpress.com/2011/12/screen-recording-window.png" alt="" title="screen-recording-window" width="402" height="199" class="aligncenter size-full wp-image-685" />

The little triangle reveals a menu that allows you to add an audio track from a microphone, and change a couple of other settings:
<img src="http://bosker.files.wordpress.com/2011/12/screen-recording-dropdown-closeup2.png" alt="" title="screen-recording-dropdown-closeup" width="380" height="329" class="aligncenter size-full wp-image-694" />

This works very nicely, and you can record a voiceover using an internal or external mic. The only trouble is the video doesn’t include the sounds made by the app itself. In some cases that probably doesn’t matter much, but it’s a real problem if you’re trying to demonstrate an app whose audio matters, like a game.

<strong>The next part does not work any more on 10.8. Sorry.</strong>

Fortunately there is a clever little app called <a href="http://jackosx.com/">Jack OS X</a> that you can use to fix it.<sup><a href="#footnote-1">1</a></sup> So download and install Jack 0.89 or later.<sup><a href="#footnote-2">2</a></sup> Right now it’s still in beta, so you’ll have to look at the <a href="http://tech.groups.yahoo.com/group/jackosx/messages">mailing list messages</a> to find a link to the latest beta release. Make sure you have beta 20 or later. (Jack 0.89 should be released pretty soon, then this part will be easier.)

Open JackPilot. The first time you run it, the Preferences window will open. Make sure the option “Auto-Connect with physical ports” is ticked, and press Save. Then you’ll see a little window like this. Click Start.
<img src="http://bosker.files.wordpress.com/2011/12/jackpilot-window.png" alt="" title="jackpilot-window" width="360" height="212" class="aligncenter size-full wp-image-706" />

Now open System Preferences &gt;; Sound:
<img src="http://bosker.files.wordpress.com/2011/12/sound-prefs.png" alt="" title="sound-prefs" width="480" height="387" class="aligncenter size-full wp-image-701" />
and change the sound output device to JackRouter.

Next open QuickTime Player and choose New Screen Recording from the File menu. Using the dropdown menu in the Screen Recording window, choose JackRouter as the microphone. Then open the app you want to record.

Go back to JackPilot, and click Routing. Select QuickTime Player in the middle column (the column labelled Receive Ports). In the left-hand “Send Ports” column, double-click on the name of the app you want to record. If you’re planning to record a live voiceover, double-click system as well. After you double-click these items, they’ll turn red, so it should look something like this:

<img src="http://bosker.files.wordpress.com/2011/12/jackpilot-routing.png" alt="" title="jackpilot-routing" width="480" height="374" class="aligncenter size-full wp-image-708" />

Finally you can go to QuickTime Player and click the red button to start recording.

When you’ve finished recording your video, you should connect the QuickTime Player Send Port to the system Receive Port using JackRouter, or else you won’t hear the audio when you play it back.

If you have any trouble with this, post a comment below.

<strong>Footnotes:</strong>

<p id="footnote-1">1. Some blogs recommend using an app called SoundFlower for this. However, there are reports of SoundFlower causing serious problems on Lion (examples: <a href="https://discussions.apple.com/thread/3389720">one</a>, <a href="http://code.google.com/p/soundflower/issues/detail?id=113">two</a>), as well as <a href="http://code.google.com/p/soundflower/issues/detail?id=105">distorting the sound</a>. The SoundFlower code has not been updated for more than a year, so these problems seem unlikely to be resolved soon. At the moment it does not look like a good choice for Lion users.</p>

<p id="footnote-2">2. The released version of Jack didn’t quite work for me when I tried, so I <a href="http://tech.groups.yahoo.com/group/jackosx/message/3567">emailed the project mailing list</a> and Stéphane Letz <a href="http://tech.groups.yahoo.com/group/jackosx/message/3586">fixed it the very same day</a>. Open source development at its best.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>680</wp:post_id>
  <wp:post_date>2011-12-11 01:42:37</wp:post_date>
  <wp:post_date_gmt>2011-12-11 00:42:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-record-a-screencast-video-for-free-on-mac-os-x-10-7-lion</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;a:2:{s:7:"user_id";s:12:"robinhouston";s:7:"post_id";s:18:"145664753577111552";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_1669861</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>twitter_cards_summary_img_size</wp:meta_key>
    <wp:meta_value><![CDATA[a:6:{i:0;i:314;i:1;i:110;i:2;i:3;i:3;s:24:"width="314" height="110"";s:4:"bits";i:8;s:4:"mime";s:9:"image/png";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8654cfbe26b80bd281a14b1ab3bafa52</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c0c039d3fbbb233758a92b89b91672eb</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_84b56dcd365ca90f9fae11b6d399dfc6</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1d8e8cb95682637d97aeac5939a8d18a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_01ca3ebdd8e541b84a9457dbbba75c1d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3039c897d30aa0f372ce4a4201d42b71</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_5dd06904e084e36e9cdb81f7bfd45ca1</wp:meta_key>
    <wp:meta_value><![CDATA[<div class="embed-slideshare"><iframe src="https://www.slideshare.net/slideshow/embed_code/15970415" width="479" height="511" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/dejansoftware/how-toreallyuselinked-indigitalen-15970415" title="How to-really-use-linked in-digital-en" target="_blank">How to-really-use-linked in-digital-en</a> </strong> from <strong><a href="http://www.slideshare.net/dejansoftware" target="_blank">Majkic.net</a></strong> </div></div>]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_time_5dd06904e084e36e9cdb81f7bfd45ca1</wp:meta_key>
    <wp:meta_value><![CDATA[1414981163]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3b4cd88935fdd7f0205d353411c6ca75</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2432</wp:comment_id>
    <wp:comment_author><![CDATA[Octavio Gutiérrez]]></wp:comment_author>
    <wp:comment_author_email>vjtavo@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>189.227.234.30</wp:comment_author_IP>
    <wp:comment_date>2011-12-16 19:05:11</wp:comment_date>
    <wp:comment_date_gmt>2011-12-16 18:05:11</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks, so useful. I use Snowleopard and are the same steps.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1324058712</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1324058712.5936";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-16 18:05:11</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2427</wp:comment_id>
    <wp:comment_author><![CDATA[Duncan Clark]]></wp:comment_author>
    <wp:comment_author_email>mail@duncanclark.net</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>82.132.218.244</wp:comment_author_IP>
    <wp:comment_date>2011-12-12 13:08:59</wp:comment_date>
    <wp:comment_date_gmt>2011-12-12 12:08:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks, this is brilliant! I was thinking about shelling out for screen grab software this week no less. Remind me that I owe you a pint.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1323691740</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1323691740.7566";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-12 12:08:59</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2428</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>79.173.182.18</wp:comment_author_IP>
    <wp:comment_date>2011-12-12 18:22:22</wp:comment_date>
    <wp:comment_date_gmt>2011-12-12 17:22:22</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ah, I'm glad it was useful to someone. I look forward to seeing what you come up with. If you have any trouble, let me know &amp; I'll try to improve the instructions.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2427</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1323710543</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1323710544.0253";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-12 17:22:22</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2440</wp:comment_id>
    <wp:comment_author><![CDATA[kriket]]></wp:comment_author>
    <wp:comment_author_email>kriket56@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>98.215.85.250</wp:comment_author_IP>
    <wp:comment_date>2011-12-18 20:33:18</wp:comment_date>
    <wp:comment_date_gmt>2011-12-18 19:33:18</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[After following above steps I see the QuickTime Player only in sender  ports not in receiver ports. I made sure that the jackpilot is selected as mic input for quick time. Can you please help me on this.

Thanks]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1324236799</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:13:"1324236799.52";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-18 19:33:18</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2441</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2011-12-18 21:31:35</wp:comment_date>
    <wp:comment_date_gmt>2011-12-18 20:31:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi kriket, 

Do you have the beta version of Jack? That sounds a lot like the problem I had with Jack till Stéphane fixed it. 

Robin 

]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2440</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1324240296</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1324240296.277";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-18 20:31:35</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2456</wp:comment_id>
    <wp:comment_author><![CDATA[Guy Serle]]></wp:comment_author>
    <wp:comment_author_email>gserle1@me.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.mymac.com</wp:comment_author_url>
    <wp:comment_author_IP>169.253.194.1</wp:comment_author_IP>
    <wp:comment_date>2011-12-23 19:51:24</wp:comment_date>
    <wp:comment_date_gmt>2011-12-23 18:51:24</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Do you think this might also work for a DAW program like GarageBand or Logic Pro? Currently I do a podcast (the MyMac.com Podcast) with a friend in the UK (I'm in the US). We talk via Skype and I use Ambrosia's WireTap Anywhere to route my Microphone, Skype, and Ambrosia's Soundboard program into seperate tracks in GB (post editing with music, ads, and bumpers on seperate tracks too). This worked great in 10.6, but Apple did something in 10.7 that killed the process and it doesn't look like Ambrosia is going to fix it anytime soon. I currently have to reboot into Snow Leopard to record which leaves me without some regular tools. I'm on a Mac Pro so I have the disk space, but I'd rather be able to start and finish with 10.7. Not to mention that eventually Apple will stop updating 10.6 so I need to figure out how to go forward in the future.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1324666285</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1324666285.7537";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-23 18:51:24</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2457</wp:comment_id>
    <wp:comment_author><![CDATA[Guy Serle]]></wp:comment_author>
    <wp:comment_author_email>gserle1@me.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.mymac.com</wp:comment_author_url>
    <wp:comment_author_IP>169.253.194.1</wp:comment_author_IP>
    <wp:comment_date>2011-12-23 19:54:49</wp:comment_date>
    <wp:comment_date_gmt>2011-12-23 18:54:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Forgot to add one more thing. I also need to route my microphone and SoundBoard audio to Skype so that my UK partner can also hear me and the sound clips from SoundBoard]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1324666490</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1324666490.3081";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-23 18:54:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2519</wp:comment_id>
    <wp:comment_author><![CDATA[Annamarie]]></wp:comment_author>
    <wp:comment_author_email>connect@sharinghousing.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.sharinghousing.com</wp:comment_author_url>
    <wp:comment_author_IP>216.158.175.79</wp:comment_author_IP>
    <wp:comment_date>2012-02-16 12:45:25</wp:comment_date>
    <wp:comment_date_gmt>2012-02-16 11:45:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for this. Just starting researching apps and discover I already have it. Yeah Apple!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329392732.6305";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329392731</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-02-16 11:45:25</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2540</wp:comment_id>
    <wp:comment_author><![CDATA[monkeybuddha]]></wp:comment_author>
    <wp:comment_author_email>seanj@xyke.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/monkeybuddha</wp:comment_author_url>
    <wp:comment_author_IP>67.171.25.98</wp:comment_author_IP>
    <wp:comment_date>2012-05-16 17:16:35</wp:comment_date>
    <wp:comment_date_gmt>2012-05-16 16:16:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thank you for posting this. I recently hit the Soundflower corruption bug on my MacPro 10.6.8 which made audio work impossible. Jack has had zero issues and I have been running for over 10 hours.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1337184996</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1337184996.1575";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"monkeybuddha";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-05-16 16:16:35</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2542</wp:comment_id>
    <wp:comment_author><![CDATA[Mark]]></wp:comment_author>
    <wp:comment_author_email>addison8019@live.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>27.32.175.26</wp:comment_author_IP>
    <wp:comment_date>2012-05-17 13:46:44</wp:comment_date>
    <wp:comment_date_gmt>2012-05-17 12:46:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Robin! You're a legend, saved my bacon :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1337258805.8368";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1337258805</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-05-17 12:46:44</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2843</wp:comment_id>
    <wp:comment_author><![CDATA[cris]]></wp:comment_author>
    <wp:comment_author_email>crisbuzzi@arcor.de</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>88.70.140.195</wp:comment_author_IP>
    <wp:comment_date>2012-12-18 22:52:54</wp:comment_date>
    <wp:comment_date_gmt>2012-12-18 21:52:54</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[have this app installed for a while now and finally understood, what it's good for. works well with my usb interface.
thanks a lot!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1355867575.3123528957366943359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1355867575</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-12-18 21:52:54</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2659</wp:comment_id>
    <wp:comment_author><![CDATA[praveen vijayan]]></wp:comment_author>
    <wp:comment_author_email>praveenv.vijayan@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://decodize.com</wp:comment_author_url>
    <wp:comment_author_IP>117.199.1.100</wp:comment_author_IP>
    <wp:comment_date>2012-07-26 16:18:54</wp:comment_date>
    <wp:comment_date_gmt>2012-07-26 15:18:54</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thank dude!! its a hidden gem.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343315935</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343315935.5977079868316650390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"praveenvijayan";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-26 15:18:54</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2909</wp:comment_id>
    <wp:comment_author><![CDATA[cyann]]></wp:comment_author>
    <wp:comment_author_email>isabeau.vidal@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>67.243.9.28</wp:comment_author_IP>
    <wp:comment_date>2013-02-02 00:43:58</wp:comment_date>
    <wp:comment_date_gmt>2013-02-01 23:43:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[For those on Mountain Lion (or any other OS X version really): you can simply use a male-to-male audio cable to connect your headphone out to your line in. Similar to recording through the built-in microphone which someone else mentioned, but this doesn't require you to remain quiet while recording. 

You may have to tweak your line-in and headphone-out levels a bit to get the volume right, but it worked perfectly for me just now...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1359762240</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1359762240.6955950260162353515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-02-01 23:43:58</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2778</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.176.2.58</wp:comment_author_IP>
    <wp:comment_date>2012-11-29 00:21:53</wp:comment_date>
    <wp:comment_date_gmt>2012-11-28 23:21:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[If the web page is playing the audio using a plugin, it might show up in JackPilot as PluginProcess rather than the name of the browser itself. Is that it? If not, and the browser still doesn’t show up, you could enable System port monitoring in the JackPilot preferences, and then route the monitor channels to QuickTime Player.

But there does seem to be a more serious problem. Apparently in OS X 10.8, Jack doesn’t work with QuickTime Player at all! See the note from the Jack OS X developer here: http://tech.groups.yahoo.com/group/jackosx/message/3902

Sorry to be the bearer of bad news. This was a useful trick, while it worked… *sigh* Having said that, if you haven’t yet upgraded to 10.8 then my suggestions above may help.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2777</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1354144914</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1354144915.3482038974761962890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-11-28 23:21:53</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2779</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.176.2.58</wp:comment_author_IP>
    <wp:comment_date>2012-11-29 00:27:38</wp:comment_date>
    <wp:comment_date_gmt>2012-11-28 23:27:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I’ve just updated the post to explain that the Jack trick won’t work on Mountain Lion. What a bore! Thanks again for drawing it to my attention.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2777</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1354145259.6113789081573486328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1354145259</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-11-28 23:27:38</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2770</wp:comment_id>
    <wp:comment_author><![CDATA[Jim]]></wp:comment_author>
    <wp:comment_author_email>boldplum@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>99.113.185.168</wp:comment_author_IP>
    <wp:comment_date>2012-09-07 10:02:58</wp:comment_date>
    <wp:comment_date_gmt>2012-09-07 09:02:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks Robin. Your instructions worked. I had spent a couple of frustrating hours before I found your blog. Jim]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1347008578</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1347008578.928474903106689453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-09-07 09:02:58</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2824</wp:comment_id>
    <wp:comment_author><![CDATA[Aaron]]></wp:comment_author>
    <wp:comment_author_email>Aaron@asdf.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>76.115.54.191</wp:comment_author_IP>
    <wp:comment_date>2012-12-15 06:54:30</wp:comment_date>
    <wp:comment_date_gmt>2012-12-15 05:54:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Very handy! I had no idea. Thanks, Robin!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1355550870.995410919189453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1355550870</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-12-15 05:54:30</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2783</wp:comment_id>
    <wp:comment_author><![CDATA[Alex]]></wp:comment_author>
    <wp:comment_author_email>maclean_199@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>64.235.96.2</wp:comment_author_IP>
    <wp:comment_date>2012-12-03 03:36:44</wp:comment_date>
    <wp:comment_date_gmt>2012-12-03 02:36:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks this is really helpful! However I followed the steps to setting up Jack OS X but it does not show up in the list of my inputs and outputs in preferences. Would you know why?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1354502204</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1354502204.6896550655364990234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-12-03 02:36:44</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2784</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.176.2.58</wp:comment_author_IP>
    <wp:comment_date>2012-12-03 07:37:50</wp:comment_date>
    <wp:comment_date_gmt>2012-12-03 06:37:50</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Are you using OS X 10.8? If so, it looks as though this trick doesn't work any more. Such a pity.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2783</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1354516670</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1354516670.727446079254150390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-12-03 06:37:50</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2702</wp:comment_id>
    <wp:comment_author><![CDATA[Athena]]></wp:comment_author>
    <wp:comment_author_email>pericles451@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>209.55.101.27</wp:comment_author_IP>
    <wp:comment_date>2012-07-27 20:42:19</wp:comment_date>
    <wp:comment_date_gmt>2012-07-27 19:42:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ya know, if you just have your laptop or desktop in a quiet place you can set the Quicktime microphone to 'built-in microphone...,' turn up the volume; start Quicktime screen recording; then start the movie playback that you're recording --- and you won't need Jack OS X.  Granted, if you want to make noise while you're making the screen recording you'll have to use Jack OS X or something else.  But, if you use the internal mic in Quicktime when you play your recorded screenshot the audio is there too.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343418140</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343418140.258831024169921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-27 19:42:19</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2775</wp:comment_id>
    <wp:comment_author><![CDATA[Maddie]]></wp:comment_author>
    <wp:comment_author_email>maddie@ragingaddgirl.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>24.1.160.203</wp:comment_author_IP>
    <wp:comment_date>2012-10-21 04:22:56</wp:comment_date>
    <wp:comment_date_gmt>2012-10-21 03:22:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I think you just saved my project!! THANKYOU!!!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1350789776</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1350789776.9072558879852294921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-10-21 03:22:56</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2776</wp:comment_id>
    <wp:comment_author><![CDATA[Deepti]]></wp:comment_author>
    <wp:comment_author_email>deepti.123@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>14.139.82.6</wp:comment_author_IP>
    <wp:comment_date>2012-11-02 07:12:52</wp:comment_date>
    <wp:comment_date_gmt>2012-11-02 06:12:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hey thanks alot dude. It really helped.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1351836772</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1351836772.76387691497802734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-11-02 06:12:52</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2777</wp:comment_id>
    <wp:comment_author><![CDATA[phil]]></wp:comment_author>
    <wp:comment_author_email>philbmaher@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>121.44.162.179</wp:comment_author_IP>
    <wp:comment_date>2012-11-28 14:09:42</wp:comment_date>
    <wp:comment_date_gmt>2012-11-28 13:09:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'm trying to record a webnair, so trying to record it through a browser and so it doesn't seem that the browser appears in the send ports column - or am i missing something? thanks in advance]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1354108182</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1354108182.818005084991455078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-11-28 13:09:42</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3029</wp:comment_id>
    <wp:comment_author><![CDATA[Recording a Screencast in OS X]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://michaelwieckowski.com/?p=390</wp:comment_author_url>
    <wp:comment_author_IP>74.208.16.81</wp:comment_author_IP>
    <wp:comment_date>2013-07-17 14:18:13</wp:comment_date>
    <wp:comment_date_gmt>2013-07-17 13:18:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] just found a great post on how to record a screencast using your Mac without any additional software.  Simply fire up [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1374067093</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1374067093.7181880474090576171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-07-17 13:18:13</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3255</wp:comment_id>
    <wp:comment_author><![CDATA[Navid]]></wp:comment_author>
    <wp:comment_author_email>hi@recordit.co</wp:comment_author_email>
    <wp:comment_author_url>http://recordit.co</wp:comment_author_url>
    <wp:comment_author_IP>187.163.15.100</wp:comment_author_IP>
    <wp:comment_date>2014-02-15 21:30:59</wp:comment_date>
    <wp:comment_date_gmt>2014-02-15 20:30:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Everyone - we built a free native screencasting tool this past week for Mac. It's super super fast / perfect for short screencasts.

Give it a try please

http://recordit.co

I'd love to hear any feedback as well. Thanks]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1392496259</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>21869709835</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1392496259.5082900524139404296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1392496259</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-15 20:30:59</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2953</wp:comment_id>
    <wp:comment_author><![CDATA[Hack-in-a-Box | 10 tips for hackathon success]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://hackinabox.net/2013/04/05/10-tips-for-hackathon-success/</wp:comment_author_url>
    <wp:comment_author_IP>94.136.40.100</wp:comment_author_IP>
    <wp:comment_date>2013-04-05 15:19:37</wp:comment_date>
    <wp:comment_date_gmt>2013-04-05 14:19:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] If you don&#8217;t want to spend $99 for Screenflow, you can use the built-in Quicktime player to make a screen recording.  And if you to record the audio from your computer, visit this post. [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1365171580.3868858814239501953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1365171579</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-04-05 14:19:37</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2972</wp:comment_id>
    <wp:comment_author><![CDATA[Rick Thomas]]></wp:comment_author>
    <wp:comment_author_email>rickpthomas@comcast.net</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/rickpthomas</wp:comment_author_url>
    <wp:comment_author_IP>24.21.79.10</wp:comment_author_IP>
    <wp:comment_date>2013-04-29 19:45:55</wp:comment_date>
    <wp:comment_date_gmt>2013-04-29 18:45:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi - Just found your blog...thank you for the info! I downloaded the JackPilot and followed all the steps however I can't seem to get the playback sound. I am screencasting a PowerPoint presentation with an embedded audio file. I can email a screen shot of the JackPilot dialogue box to show you what settings I've selected as you suggested to ensure playback audio. Not sure what I'm doing wrong.
Thanks for your help!
Rick]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1367261155</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1367261155.376120090484619140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"rickpthomas";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-04-29 18:45:55</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2995</wp:comment_id>
    <wp:comment_author><![CDATA[castle ville bot]]></wp:comment_author>
    <wp:comment_author_email>marvin_butterfield@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://mavenmall.com/groups/be-the-king-in-castleville-online-game-castleville-is-coming/</wp:comment_author_url>
    <wp:comment_author_IP>198.52.128.95</wp:comment_author_IP>
    <wp:comment_date>2013-05-28 23:56:17</wp:comment_date>
    <wp:comment_date_gmt>2013-05-28 22:56:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[For newest information you have to pay a visit the web and on internet I found this website 
as a finest web site for newest updates.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1369781778</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1369781779.3828690052032470703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-05-28 22:56:17</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2979</wp:comment_id>
    <wp:comment_author><![CDATA[Eliana C.]]></wp:comment_author>
    <wp:comment_author_email>elita_lu4@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>186.46.68.252</wp:comment_author_IP>
    <wp:comment_date>2013-05-12 17:59:55</wp:comment_date>
    <wp:comment_date_gmt>2013-05-12 16:59:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for this !! Amazing very helpful]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368377995</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368377996.1873950958251953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-05-12 16:59:55</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3033</wp:comment_id>
    <wp:comment_author><![CDATA[mrhoopersblog]]></wp:comment_author>
    <wp:comment_author_email>ericdhooper@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://mrhoopersblog.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>207.87.34.66</wp:comment_author_IP>
    <wp:comment_date>2013-07-18 20:40:57</wp:comment_date>
    <wp:comment_date_gmt>2013-07-18 19:40:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Reblogged this on <a href="http://mrhoopersblog.wordpress.com/2013/07/18/how-to-record-a-screencast-video-for-free-on-mac-os-x/" rel="nofollow">Mr. Hooper&#039;s blog</a> and commented: 
I couldn't figure out how to use a powerpoint and add my audio over it on my mac.  With Imovie you have to get the images from you camera or Iphoto.  This trick allowed me to open a powerpoint and just record my voice over the existing slides.  Very easy and useful for out assignment and if you are going to make these videos in the future. ]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>50246280</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1374176458</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1374176459.13269901275634765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"mrhoopersblog";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>reblog_ping</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-07-18 19:40:57</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3238</wp:comment_id>
    <wp:comment_author><![CDATA[Sounds in AngryBot game | tomaspo blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://tomaspoblog.wordpress.com/2013/10/22/18/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.82.170</wp:comment_author_IP>
    <wp:comment_date>2013-12-28 20:37:34</wp:comment_date>
    <wp:comment_date_gmt>2013-12-28 19:37:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] (http://bosker.wordpress.com/2011/12/11/how-to-record-a-screencast-video-for-free-on-mac-os-x-10-7-li&#8230;) [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1388259454</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1388259454.87139892578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-12-28 19:37:34</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3342</wp:comment_id>
    <wp:comment_author><![CDATA[jaketown]]></wp:comment_author>
    <wp:comment_author_email>jaketown4@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://jaketown.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>117.6.132.149</wp:comment_author_IP>
    <wp:comment_date>2014-05-06 09:25:35</wp:comment_date>
    <wp:comment_date_gmt>2014-05-06 08:25:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Why can't I use a quicktime screen recording in "add media" on my WP blog?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>30568264</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1399364735</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1399364736.3962309360504150390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"jaketown";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>23756913020</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1399364737</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-05-06 08:25:35</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3778</wp:comment_id>
    <wp:comment_author><![CDATA[10 tips for hackathon success - Appsembler : Appsembler]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://dev-appsembler-website.pantheon.io/blog/10-tips-for-hackathon-success/</wp:comment_author_url>
    <wp:comment_author_IP>162.209.59.9</wp:comment_author_IP>
    <wp:comment_date>2015-05-26 18:09:04</wp:comment_date>
    <wp:comment_date_gmt>2015-05-26 17:09:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] If you don&#8217;t want to spend $99 for Screenflow, you can use the built-in Quicktime player to make a screen recording.  And if you to record the audio from your computer, visit this post. [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1432660145</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1432660145.671307086944580078125;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3443</wp:comment_id>
    <wp:comment_author><![CDATA[10 tips for hackathon success | Tech Start Hub]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.techstarthub.com/10-tips-for-hackathon-success-2/</wp:comment_author_url>
    <wp:comment_author_IP>193.202.110.181</wp:comment_author_IP>
    <wp:comment_date>2014-08-04 15:23:26</wp:comment_date>
    <wp:comment_date_gmt>2014-08-04 14:23:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] If you don&#8217;t want to spend $99 for Screenflow, you can use the built-in Quicktime player to make a screen recording.  And if you to record the audio from your computer, visit this post. [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1407162207</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1407162207.0662500858306884765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-08-04 14:23:27</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3848</wp:comment_id>
    <wp:comment_author><![CDATA[vast]]></wp:comment_author>
    <wp:comment_author_email>vastozone@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>157.145.220.3</wp:comment_author_IP>
    <wp:comment_date>2015-09-23 20:19:49</wp:comment_date>
    <wp:comment_date_gmt>2015-09-23 19:19:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Using OSX 10.10.5 I'm able to record both video and audio using Quicktime - and upload video to YouTube with video and sound intact.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1443035989</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1443035989.4021880626678466796875;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>15096308884</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1443035989</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3798</wp:comment_id>
    <wp:comment_author><![CDATA[Therese Schwegel]]></wp:comment_author>
    <wp:comment_author_email>Aleizar@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://camera.com</wp:comment_author_url>
    <wp:comment_author_IP>82.177.171.126</wp:comment_author_IP>
    <wp:comment_date>2015-07-22 21:57:09</wp:comment_date>
    <wp:comment_date_gmt>2015-07-22 20:57:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I agree with crystalized - a summary desk or conclusion would have been nice for these not wanting to read every page.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1437598629</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1437598629.4880630970001220703125;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1437598629</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>12986942443</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3963</wp:comment_id>
    <wp:comment_author><![CDATA[bechbabe]]></wp:comment_author>
    <wp:comment_author_email>BechBabestar@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bechbabe.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>89.8.228.132</wp:comment_author_IP>
    <wp:comment_date>2016-01-18 03:57:04</wp:comment_date>
    <wp:comment_date_gmt>2016-01-18 02:57:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[its awsome to try 
<a href="http://datingguideforwomen.com/" rel="nofollow">my signature</a> lol]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>85205199</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>18856808799</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1453085828</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1453085826.4272849559783935546875;s:5:"event";s:9:"check-ham";s:4:"user";s:8:"bechbabe";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1453085825</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Something all bash scripters need to know (and most of us don’t)</title>
  <link>https://bosker.wordpress.com/2012/02/12/bash-scripters-beware-of-the-cdpath/</link>
  <pubDate>Sun, 12 Feb 2012 16:38:52 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=736</guid>
  <description/>
  <content:encoded><![CDATA[Calling all bash users. This is a public service announcement.

Here’s something you need to know if you want to write bash scripts that work reliably, but you probably don’t.
<!--more--><h3>Recommendations</h3>
<strong>For script authors:</strong> Every bash script that uses the <code>cd</code> command with a relative path needs to call <code>unset CDPATH</code>, or else it may not work correctly. Scripts that don’t use <code>cd</code> should probably do it anyway, in case someone puts a <code>cd</code> in later.

<strong>For users:</strong> Never export CDPATH from your shell to the environment. If you use CDPATH then set it in your <code>.bashrc</code> file and don’t export it, so that it’s only set in interactive shells.

<strong>For the bash implementers</strong>: Change bash to ignore the inherited value of CDPATH in shell scripts (as opposed to interactive shells).
<h3>Update</h3>
Since I wrote this, thanks to commenters here and on Reddit I've learnt two interesting things:
<ul>
	<li>CDPATH is not a bash-specific feature; it's actually specified by POSIX.</li>
	<li>You can avoid it in some cases by using <code>cd ./foo</code>, which does not consult CDPATH. But this is not a panacea: it can't easily be used with paths that might be absolute or relative, such as <code>`dirname "$0"`</code>, so I think unsetting CDPATH is still the best way to deal with it.</li>
</ul>

<h3>What you need to know</h3>
The bash shell has a little-known feature that might occasionally be handy in interactive use, but is never useful in a script and acts as a brutal trap for the unwary scripter. The variable <code>CDPATH</code> can be set to a colon-separated list of directories, and then whenever <code>cd somewhere</code> is called with a relative path the directories in <code>CDPATH</code> are tested in turn to see whether <code>somewhere</code> exists in any of them. If it does, the current working directory is changed to that directory and the fully-qualified path of the new working directory is printed to standard output.

For example:
<pre>-bash-3.2$ cd                  # Change to my home directory
-bash-3.2$ mkdir foo /tmp/foo  # Create directory "foo" here and in /tmp
-bash-3.2$ CDPATH=/tmp:.       # Set CDPATH
-bash-3.2$ cd foo              # Call cd
/tmp/foo                       # cd changes to /tmp/foo, and prints it out</pre>
Here running <code>cd foo</code> changes to <code>/tmp/foo</code> rather than <code>~/foo</code>, because <code>/tmp</code> precedes <code>.</code> in the CDPATH.

If CDPATH is set <em>in the environment</em>, e.g. exported from a shell, then it may cause the <code>cd</code> command to behave unexpectedly in shell scripts. By the <a href="http://en.wikipedia.org/wiki/Robustness_principle">robustness principle</a> users should not export CDPATH and scripts should be written to work even if they do.

In case you doubted it, it’s very common to see scripting idioms that may not work properly if CDPATH is exported. Even the common <code>cd "$(dirname "$0")"</code> falls into this category.
<h3>How I discovered this trap (the hard way)</h3>
I’ve been writing bash scripts for almost half my life, but it still has the capacity to surprise me.

At work we have a <a href="https://github.com/mysociety/commonlib/tree/master/shlib">library of shell code</a> that is used for things like configuration management across several different projects. Because the library is included as a git submodule in many different projects, and these projects themselves will be installed by different people in different places, the library code can’t use a hard-coded path to itself; but sometimes it does need to know where it’s installed so that library functions can invoke scripts from the same package.

Note that this is a library of functions that will be included into other shell scripts using the <tt>source</tt> command, so we can’t assume we’re in <code>"$(dirname "$0")"</code> as a straightforward shell script could. But that’s okay, because bash has a special variable <code>$BASH_SOURCE</code> that any function can use to find the filename of the file that function is defined in. So I wrote this:

[sourcecode language="bash"]
_mysociety_commonlib_directory() {
    (
      cd &quot;$(dirname &quot;${BASH_SOURCE[0]}&quot;)&quot;/..
      pwd
    )
}
MYSOCIETY_COMMONLIB_DIR=$(_mysociety_commonlib_directory)
[/sourcecode]

which sets <code>$MYSOCIETY_COMMONLIB_DIR</code> to the fully-qualified pathname of the parent directory of the directory this function is in. I was happy with the neatness of this solution, and it worked fine in all my tests.

A few days ago, though, a user <a href="http://groups.google.com/group/alaveteli-dev/browse_thread/thread/b856ebbcd5ee69c4">reported a bug</a> that we eventually traced back to this function. It turned out that the <tt>cd</tt> command was also printing the name of the directory, and so <code>$MYSOCIETY_COMMONLIB_DIR</code> ended up containing the directory name <strong>twice</strong>.

I can only suppose that the user must have CDPATH set in the environment. But what a nasty trap.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>736</wp:post_id>
  <wp:post_date>2012-02-12 17:38:52</wp:post_date>
  <wp:post_date_gmt>2012-02-12 16:38:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>bash-scripters-beware-of-the-cdpath</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <category domain="post_format" nicename="post-format-standard"><![CDATA[Standard]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;a:2:{s:7:"user_id";s:12:"robinhouston";s:7:"post_id";s:18:"168735867672862720";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_1669861</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2511</wp:comment_id>
    <wp:comment_author><![CDATA[Peter]]></wp:comment_author>
    <wp:comment_author_email>peter@notatla.org.uk</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>217.155.246.43</wp:comment_author_IP>
    <wp:comment_date>2012-02-13 07:25:11</wp:comment_date>
    <wp:comment_date_gmt>2012-02-13 06:25:11</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Your problem was the CDPATH value didn't begin with a dot for CWD. 
See http://www.sunmanagers.org/archives/1994/0868.html

OTOH I had scripts delivered to me in a previous job that didn't work unless ".." for the parent directory was in the CDPATH (because that was used by the author and he couldn't imagine anyone not doing the same).

I agree it's safest to unset it.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329114315</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329114316.3651";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-02-13 06:25:11</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2512</wp:comment_id>
    <wp:comment_author><![CDATA[Smarter]]></wp:comment_author>
    <wp:comment_author_email>smarter@ubuntu.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>90.27.177.50</wp:comment_author_IP>
    <wp:comment_date>2012-02-13 13:48:10</wp:comment_date>
    <wp:comment_date_gmt>2012-02-13 12:48:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This is not specific to Bash. CDPATH is defined in POSIX 1003.2: http://pubs.opengroup.org/onlinepubs/9699919799/utilities/cd.html#tag_20_14_08
See also: http://lists.debian.org/debian-devel/2009/07/msg00045.html]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329137295</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329137295.8876";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-02-13 12:48:10</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2513</wp:comment_id>
    <wp:comment_author><![CDATA[Pearson]]></wp:comment_author>
    <wp:comment_author_email>pfpearson@mchsi.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>199.209.144.247</wp:comment_author_IP>
    <wp:comment_date>2012-02-13 16:26:26</wp:comment_date>
    <wp:comment_date_gmt>2012-02-13 15:26:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You should likely also make sure that 'cd' isn't aliased to print $PWD, as I've seen some folks do. I'm not at a bash shell now, but I *think* you can make the line 
  \cd "$(dirname "${BASH_SOURCE[0]}")"/..

note the leading backslash - IIRC, this tells the shell to skip any aliases.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329146787</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329146787.1043";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-02-13 15:26:26</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2514</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>82.132.233.132</wp:comment_author_IP>
    <wp:comment_date>2012-02-13 20:40:43</wp:comment_date>
    <wp:comment_date_gmt>2012-02-13 19:40:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ah, that's very interesting. Thank you.

Still, I can’t help but wonder if the spec couldn't be improved on a little in this case. I wonder if there are any real-world systems that would break if my proposed change were implemented.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2512</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329162044</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329162044.5034";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-02-13 19:40:43</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2515</wp:comment_id>
    <wp:comment_author><![CDATA[geirha]]></wp:comment_author>
    <wp:comment_author_email>geir.hauge@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>84.202.43.127</wp:comment_author_IP>
    <wp:comment_date>2012-02-13 21:43:54</wp:comment_date>
    <wp:comment_date_gmt>2012-02-13 20:43:54</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This is not an issue at all.

1. aliases aren't passed through the environment, nor can they be exported.
2. aliases are disabled by default in non-interactive shells

So you'd have to specifically enable aliases with "shopt -s expand_aliases", and define the alias inside the script... only to avoid using it later in the script.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2513</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329165835</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329165835.1527";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-02-13 20:43:54</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2516</wp:comment_id>
    <wp:comment_author><![CDATA[geirha]]></wp:comment_author>
    <wp:comment_author_email>geir.hauge@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>84.202.43.127</wp:comment_author_IP>
    <wp:comment_date>2012-02-13 21:54:21</wp:comment_date>
    <wp:comment_date_gmt>2012-02-13 20:54:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Avoiding the directory being looked up in CDPATH can be done with the same approach as when avoiding PATH when running a command or sourcing a script. Prepend it with "./". E.g. cd ./somewhere instead of cd somewhere.

Don't forget to test the exit status of cd though. http://mywiki.wooledge.org/BashPitfalls]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329166463</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329166463.9256";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-02-13 20:54:21</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2517</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.181.154.243</wp:comment_author_IP>
    <wp:comment_date>2012-02-14 17:13:34</wp:comment_date>
    <wp:comment_date_gmt>2012-02-14 16:13:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Good point about checking the exit status of cd. Thanks. That should be fixed in <a href="https://github.com/mysociety/commonlib/commit/966025c959255d597b5f89a97fcec4fb57e4cdb9" rel="nofollow">966025c</a>, I hope.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2516</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329236019</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329236020.1683";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-02-14 16:13:34</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2518</wp:comment_id>
    <wp:comment_author><![CDATA[geirha]]></wp:comment_author>
    <wp:comment_author_email>geir.hauge@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>84.202.43.127</wp:comment_author_IP>
    <wp:comment_date>2012-02-14 22:47:46</wp:comment_date>
    <wp:comment_date_gmt>2012-02-14 21:47:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[An update for the update. If you don't know if the directory is given as a path, or just a name, test it first. 

if [[ ${dir%/} != */* ]]; then dir=./$dir; fi; cd "$dir" ...

And on a side note, relying on `dirname "$0"` is a poor design decision. Where the script you're running is located should be irrelevant, and $0 is not guaranteed to contain the path to the script. See http://mywiki.wooledge.org/BashFAQ/028]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2517</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329256066</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329256066.5919";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-02-14 21:47:46</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2913</wp:comment_id>
    <wp:comment_author><![CDATA[absolutas-team.pl]]></wp:comment_author>
    <wp:comment_author_email>clairemares@inbox.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.absolutas-team.pl</wp:comment_author_url>
    <wp:comment_author_IP>69.175.25.20</wp:comment_author_IP>
    <wp:comment_date>2013-02-16 22:39:49</wp:comment_date>
    <wp:comment_date_gmt>2013-02-16 21:39:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[That is a very good tip particularly to those new to the blogosphere.
Short but very precise info… Appreciate your sharing this 
one. A must read article!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1361050790</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1361050791.2864530086517333984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-02-16 21:39:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3244</wp:comment_id>
    <wp:comment_author><![CDATA[geirha]]></wp:comment_author>
    <wp:comment_author_email>geir.hauge@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>129.241.43.189</wp:comment_author_IP>
    <wp:comment_date>2014-01-31 10:34:08</wp:comment_date>
    <wp:comment_date_gmt>2014-01-31 09:34:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes, exporting functions is one of the craziest features added to bash. Especially crazy since it defines them by default. To guard against it, you'll need the -p option in the shebang.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2515</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1391160848.1564600467681884765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1391160848</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>20813636970</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1391160848</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-01-31 09:34:08</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3243</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.176.251.143</wp:comment_author_IP>
    <wp:comment_date>2014-01-31 10:24:23</wp:comment_date>
    <wp:comment_date_gmt>2014-01-31 09:24:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice one! Exporting functions is another great way to break shell scripts.

You have a couple of bugs, I think. You need to quote the <code>$1</code> in case the directory name has a space in, and you need the <code>-f</code> option to make <code>export</code> export functions:

<code>cd () { pushd "$1" &gt; /dev/null; popd -n; }; export -f cd</code>]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3242</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1391160263</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1391160263.3777110576629638671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>20813113469</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1391160263</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-01-31 09:24:23</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3245</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.176.251.143</wp:comment_author_IP>
    <wp:comment_date>2014-01-31 10:49:01</wp:comment_date>
    <wp:comment_date_gmt>2014-01-31 09:49:01</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ah, I didn’t know about -p. Good tip, thanks.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3244</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1391161742</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1391161742.5799329280853271484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>20814380638</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1391161743</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-01-31 09:49:01</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3242</wp:comment_id>
    <wp:comment_author><![CDATA[Pegasus Epsilon]]></wp:comment_author>
    <wp:comment_author_email>pegasus@pimpninjas.org</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/pegasusepsilon</wp:comment_author_url>
    <wp:comment_author_IP>71.11.121.29</wp:comment_author_IP>
    <wp:comment_date>2014-01-31 06:25:34</wp:comment_date>
    <wp:comment_date_gmt>2014-01-31 05:25:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Behold: I break your mess.

cd () { pushd $1 &gt; /dev/null; popd -n; }; export cd]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2515</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>20801331712</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1391145936</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1391145935</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1391145935.847731113433837890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"pegasusepsilon";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-01-31 05:25:34</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3369</wp:comment_id>
    <wp:comment_author><![CDATA[Can Bash script tell what directory it&#8217;s stored in | Coding and Programing]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://program.0zed.com/can-bash-script-tell-what-directory-its-stored-in/</wp:comment_author_url>
    <wp:comment_author_IP>31.170.166.24</wp:comment_author_IP>
    <wp:comment_date>2014-06-03 13:01:08</wp:comment_date>
    <wp:comment_date_gmt>2014-06-03 12:01:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Beware: if you cd to a different directory before running this snippet, the result may be incorrect! Also, watch out for $CDPATH gotchas. [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-06-03 12:01:08</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1401796869</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1401796869.5382950305938720703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3347</wp:comment_id>
    <wp:comment_author><![CDATA[Linux /Unix:从文件路径提取文件所在目录名 - 大步&#039;s Blog | 大步&#039;s Blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.dabu.info/linux-unix-extract-file-name-path.html</wp:comment_author_url>
    <wp:comment_author_IP>23.245.26.68</wp:comment_author_IP>
    <wp:comment_date>2014-05-09 06:55:17</wp:comment_date>
    <wp:comment_date_gmt>2014-05-09 05:55:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] 但是，如果你在脚本中使用先cd切换到其他目录，在运行时上面的命令片段时，则上面的命令不能等到正确的结果。可以参考关于$CDPATH 陷阱的文章。想理解它如何其作用的，可以运行下面的代码： [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-05-09 05:55:17</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1399614917</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1399614917.7289409637451171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3247</wp:comment_id>
    <wp:comment_author><![CDATA[Pegasus Epsilon]]></wp:comment_author>
    <wp:comment_author_email>pegasus@pimpninjas.org</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/pegasusepsilon</wp:comment_author_url>
    <wp:comment_author_IP>71.11.121.29</wp:comment_author_IP>
    <wp:comment_date>2014-01-31 18:54:10</wp:comment_date>
    <wp:comment_date_gmt>2014-01-31 17:54:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I put bugs in your breakage, so you can fail while you crash.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3243</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1391190850</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1391190851.0031540393829345703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"pegasusepsilon";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>20841138442</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1391190851</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-01-31 17:54:10</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3601</wp:comment_id>
    <wp:comment_author><![CDATA[How to: Can a Bash script tell what directory it&#039;s stored in? | SevenNet]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://sevennet.org/2014/11/21/how-to-can-a-bash-script-tell-what-directory-its-stored-in/</wp:comment_author_url>
    <wp:comment_author_IP>107.21.128.82</wp:comment_author_IP>
    <wp:comment_date>2014-11-21 03:55:06</wp:comment_date>
    <wp:comment_date_gmt>2014-11-21 02:55:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Beware: if you cd to a different directory before running this snippet, the result may be incorrect! Also, watch out for $CDPATH gotchas. [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1416538507</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1416538508.0256040096282958984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3631</wp:comment_id>
    <wp:comment_author><![CDATA[Solution: Can a Bash script tell what directory it&#039;s stored in? #dev #it #computers | Good Answer]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://goodanswer.biz/2014/12/08/solution-can-a-bash-script-tell-what-directory-its-stored-in-dev-it-computers/</wp:comment_author_url>
    <wp:comment_author_IP>54.80.149.148</wp:comment_author_IP>
    <wp:comment_date>2014-12-08 06:31:59</wp:comment_date>
    <wp:comment_date_gmt>2014-12-08 05:31:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Beware: if you cd to a different directory before running this snippet, the result may be incorrect! Also, watch out for $CDPATH gotchas. [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1418016720</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1418016721.021255016326904296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3616</wp:comment_id>
    <wp:comment_author><![CDATA[How to: Can a Bash script tell what directory it&#039;s stored in? | Technical information for you]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://iust.pp.ua/2014/12/03/how-to-can-a-bash-script-tell-what-directory-its-stored-in/</wp:comment_author_url>
    <wp:comment_author_IP>54.227.119.73</wp:comment_author_IP>
    <wp:comment_date>2014-12-03 05:57:05</wp:comment_date>
    <wp:comment_date_gmt>2014-12-03 04:57:05</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Beware: if you cd to a different directory before running this snippet, the result may be incorrect! Also, watch out for $CDPATH gotchas. [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1417582626</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417582627.137310028076171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3863</wp:comment_id>
    <wp:comment_author><![CDATA[Can a Bash Script Tell What Directory It Stored In]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://alreadysolved.com/can-a-bash-script-tell-what-directory-it-stored-in/</wp:comment_author_url>
    <wp:comment_author_IP>103.23.22.244</wp:comment_author_IP>
    <wp:comment_date>2015-10-07 19:11:35</wp:comment_date>
    <wp:comment_date_gmt>2015-10-07 18:11:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Beware: if you cd to a different directory before running this snippet, the result may be incorrect! Also, watch out for $CDPATH gotchas. [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1444241495</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1444241495.92632198333740234375;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3927</wp:comment_id>
    <wp:comment_author><![CDATA[Can a Bash script tell what directory it&#8217;s stored in? | ASK AND ANSWER]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://askandans.cloverink.com/can-a-bash-script-tell-what-directory-its-stored-in/</wp:comment_author_url>
    <wp:comment_author_IP>108.167.160.14</wp:comment_author_IP>
    <wp:comment_date>2015-12-15 20:00:13</wp:comment_date>
    <wp:comment_date_gmt>2015-12-15 19:00:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Beware: if you cd to a different directory before running this snippet, the result may be incorrect! Also, watch out for $CDPATH gotchas. [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1450206013</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1450206013.768846988677978515625;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>4010</wp:comment_id>
    <wp:comment_author><![CDATA[Can a Bash script tell what directory it&#039;s stored in? [ANSWERED] - Tech ABC to XYZ]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://techabcto.xyz/2008/09/12/can-a-bash-script-tell-what-directory-its-stored-in-answered/</wp:comment_author_url>
    <wp:comment_author_IP>108.167.133.29</wp:comment_author_IP>
    <wp:comment_date>2016-03-22 06:05:15</wp:comment_date>
    <wp:comment_date_gmt>2016-03-22 05:05:15</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Beware: if you cd to a different directory before running this snippet, the result may be incorrect! Also, watch out for $CDPATH gotchas. [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1458623115</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1458623115.4318859577178955078125;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>On editing text</title>
  <link>https://bosker.wordpress.com/2012/05/10/on-editing-text/</link>
  <pubDate>Thu, 10 May 2012 17:12:04 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=759</guid>
  <description/>
  <content:encoded><![CDATA[Editing text is the opposite of handling exceptions; or, to put it another way, editing text is like exception handling but backwards in time. I realise this is an unexpected claim, so I hope you will permit me to explain. Although it has the ring of nonsense, there is a perfectly good sense in which it is just straightforwardly true.

<i><b>Added 2014-06-18</b>: it turns out that the story is more interesting than I realised when I wrote this, and that almost all of the technical details below are wrong. I am in the process of writing <a title="Revisiting “On editing text”" href="http://bosker.wordpress.com/2014/06/19/revisiting-on-editing-text/">an account of what I currently believe on this subject</a>.</i>

Ah yes, category theory. Our old friend. Elucidating structural connections between apparently disconnected topics since 1945. Let me tell you a story.

<!--more-->

I have been toying with a simple piece of collaborative text-editing software that may form part of a future <a href="http://kiln.it/">Kiln</a> project. Thanks to Google Docs you have probably experienced collaborative editing, where several people can edit the same document simultaneously on different computers, and see each others’ changes in more-or-less real time.

To implement collaborative editing, edits need to be propagated from one user to another. Let’s say Tom and Sarah are editing the same document: when Tom changes something, his change needs to be applied to Sarah’s copy; and when Sarah changes something her change needs to be applied to Tom’s. But internet communication is not instantaneous, so it will quite often happen that Tom and Sarah have both independently made a change before either has seen the other’s.

<img class="aligncenter size-full wp-image-763" title="diag01" src="https://bosker.files.wordpress.com/2012/05/diag01.png" alt="" width="299" height="252" />

So now we need to apply Tom’s changes to Sarah’s copy, and Sarah’s changes to Tom’s copy, so that they both end up with the same document.

<img class="aligncenter size-full wp-image-763" title="diag02" src="https://bosker.files.wordpress.com/2012/05/diag02.png" alt="" width="299" height="252" />

This is also the same problem a distributed version control system like <a href="http://git-scm.com/">git</a> faces when merging two branches.

If you’re lucky enough to know some category theory, no doubt you are thinking that looks like a pushout (<a href="http://en.wikipedia.org/wiki/Pushout_(category_theory)">Wikipedia</a>, <a href="http://ncatlab.org/nlab/show/pushout">nLab</a>). I’ll keep the technical stuff for the end, so you don’t all tune out before we get to the good bit, but that idea turns out to work. A category is a general sort of mathematical gadget that consists of arrows that can be combined to make new ones: think functions or operations, which can be composed to form compound operations. There is a category whose arrows represent edits to a document, and this category does indeed have pushouts, and the pushouts give a canonical way to reconcile two divergent edits.

The nice mathematical properties of pushouts make this a useful tool. For example, the result will always be the same however the edits of the two parties are interleaved: we won’t ever get results that depend on the vagaries of the network.

But surely, I hear you cry, divergent edits don't always <em>have</em> a canonical resolution. Suppose Tom and Sarah have a document that says “The cat sat on the mat”, and they both select the word cat, like this:

<img class="alignnone size-full wp-image-778" title="The cat sat on the mat" src="https://bosker.files.wordpress.com/2012/05/screen-shot-2012-05-09-at-21-13-34.png" alt="" width="157" height="38" />

Then Tom types ‘dog’, and Sarah types ‘chicken’. How can this be reconciled? Well, if you compute the pushout of these two edits then something interesting happens: the resulting document is no longer linear. If it was originally like this:

<img class="alignnone size-full wp-image-779" title="the_cat_sat_on_the_mat" src="https://bosker.files.wordpress.com/2012/05/the_cat_sat_on_the_mat.png" alt="" width="480" height="24" />

then the resolution is like this:

<img class="alignnone size-full wp-image-780" title="the_dogchicken_sat_on" src="https://bosker.files.wordpress.com/2012/05/the_dogchicken_sat_on.png" alt="" width="480" height="47" />

I wonder if we could just go where the theory leads, and build a collaborative editor that allowed non-linear documents to exist. It’s a little bit like a conflicted file in git, except that git forces such a conflict to be resolved immediately. What would happen if we didn’t force it at all, and allowed users to relinearise documents in their own time, or even never? Deleting one of the two tracks to make the document linear again is a perfectly cromulent edit, so conflict resolution would not require any special-case handling. The challenge here is one of user experience design: could such a system be made comprehensible?

More conservatively, we might relinearise the document in some arbitrary way by picking one of the two parallel tracks. That would have a similar effect to what Google Docs does, as I understand it, where the result can depend on in which order the edits are processed by the server. But keeping a conceptual separation between the resolution algorithm and the relinearisation step helps to clarify the design. The resolution algorithm is robust, and well-behaved, and will never arbitrarily delete anyone’s work; all the trickiness and the trouble is confined to the linearisation step, which is the part that needs to be designed and tested with great care. Or the system could represent documents internally using a non-linear representation, but select one track to present to the user: perhaps we need only add some mechanism for switching tracks to turn this into the best of both worlds.
<h2>Exception handling</h2>
It is a curious fact that the category of edits we’ve been using is already familiar to theoretical computer science, but in a different guise. Essentially the same mathematical structure has been used to model exception handling – the key difference being that, when it’s used for that, the arrows point in the other direction.

In Haskell it is called the <a href="http://hackage.haskell.org/packages/archive/mtl/1.1.0.2/doc/html/Control-Monad-Error.html">Error monad</a>. What we were thinking of as the character set, in the editing context, becomes the set of possible errors. The character positions in the <i>resulting</i> document – after the edit – correspond to possible <i>input</i> values, thanks to the reversal of direction. So, for example, inserting a character corresponds to throwing a particular error on a particular input.

So editing text really <i>is</i> the opposite of handling exceptions.

(Even the pushout operation has its uses in the exception handling model – where, because of the reversal of direction, it is called a pullback. It has been used by Cockett and Spooner to construct models for asynchronous parallel computation with exceptions. [<a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.46.7744&amp;rep=rep1&amp;type=pdf">ref</a>])
<h2>For the blessed and the brave</h2>
If you <i>are</i> lucky enough to know a bit of category theory, or if you’re up for following along anyway, welcome to the <i>really</i> good stuff.

So what is the category whose arrows are edits to a document? The fundamental editing operations are inserting new text, and deleting old text, so we want the arrows to represent some combination of insertions and deletions.

Let’s say the objects of the category are finite total orders. In fact for now let’s choose a skeleton of the category of finite total orders, and say the objects are natural numbers, which represent the length of a document. The arrows are combinations of insertions and deletions. So an arrow might represent an operation like this one:

<img class="aligncenter size-full wp-image-766" title="diag03" src="https://bosker.files.wordpress.com/2012/05/diag03.png" alt="" width="172" height="77" />

which deletes the last letter and inserts two e’s, turning chest into cheese or frizz into frieze. It is obvious enough how to compose two edits: just perform them one after the other.

Each target position is mapped either to a source position or to a letter of the alphabet: a morphism <i>A</i>→<i>B</i> is a function from <em>B</em> to <em>A</em>+∑. And not just any function: it should be one-one on <em>A</em> and preserve the order of positions. In other words, it looks rather as though our category can be described as the opposite of the Kleisli category of the monad (– + ∑), on some sort of category of ordered sets.

In order to make this precise, we need to allow more general objects into our category than just finite total orders. Temporarily we’ll say the objects are (finite) sets equipped with a relation ◁ that partially orders some subset. We’ll still refer to the elements of the set as positions, and to the relation as the ordering, even though it is not necessarily a partial order of the whole set.

We define a category <strong>RRef</strong>. An object of <strong>RRef</strong> is a set <em>X</em> equipped with a transitive relation ◁<sub>X</sub> on <em>X</em>, and a morphism <i>f</i>:<i>X</i>→<i>Y</i> is a function <i>X</i>→<i>Y</i> that reflects the relation, which means <i>f</i>(<i>a</i>) ◁<sub>Y</sub> <i>f</i>(<i>b</i>) ⇒ <i>a</i> ◁<sub>X</sub> <i>b</i> for all <em>a</em>, <em>b</em> in <em>X</em>. Let ∑ be the alphabet (the set of characters, say the set of Unicode code points) equipped with the empty relation: we’ll call any set equipped with the empty relation a <em>discrete</em> object. Then our category of edits is the opposite of the Kleisli category of the monad (– + ∑) on <b>RRef</b>.

But – in computer science that monad has a name. It’s called the <i>exception monad</i>. The idea is that ∑ is the set of possible exceptions, and a function may either return a result or throw an exception. This idea is modelled precisely by the Kleisli category of the exception monad, in which an arrow <i>A</i>→<i>B</i> is a function <i>A</i>→<i>B</i>+∑. It is an example of the way computational effects can be modelled using monads, as explained by Eugenio Moggi in his influential 1991 paper <a href="http://www.disi.unige.it/person/MoggiE/ftp/ic91.pdf">Notions of computation and monads</a>.

So edits are composed in <i>exactly the same way</i> as we compose functions in the presence of exceptions – but back-to-front.

We needed to allow the order relation on <b>RRef</b> objects to be quite general, since we needed to equip ∑ with the empty relation, which is not even reflexive. Now we’ve formed the Kleisli category, we can restrict its objects to tamer ones, like say partial orders. (Restricting to <i>total</i> orders would mean that pushouts don’t necessarily exist, which rather defeats the object of the exercise.)

Now, those pushouts. The details were worked out by Cockett and Spooner in their 1995 paper <a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.46.7744&amp;rep=rep1&amp;type=pdf">Categories for synchrony and asynchrony</a>. The important parts here are Proposition 3.8 and Example 3.10. Let’s say we have two edits like this:

<img class="aligncenter size-full wp-image-775" title="diag04" src="https://bosker.files.wordpress.com/2012/05/diag04.png" alt="" width="166" height="95" />

Then the pushout concretely consists of a set of pairs. There are three types: either a pair of positions (<i>a</i>, <i>b</i>) with <i>f</i>(<i>a</i>)=<i>g</i>(<i>b</i>) for <i>a</i>∈<i>A</i> and <i>b</i>∈<i>B</i>, or else a pair (<i>a</i>, <i>σ</i>) with <i>f</i>(<i>a</i>)=<i>σ</i> for <i>a</i>∈<i>A</i> and <i>σ</i>∈∑, or finally a pair (<i>σ</i>, <i>b</i>) with <i>g</i>(<i>b</i>)=<i>σ</i> for <i>σ</i>∈∑ and <i>b</i>∈<i>B</i>.

The ordering relation is inherited using the rule

(<i>a</i>,<i>b</i>)◁(<i>a'</i>,<i>b'</i>) if <i>a</i> ◁<sub>A</sub> <i>a'</i> or <i>b</i> ◁<sub>B</sub> <i>b'</i>.

To be precise it is the transitive closure of the relation defined by that rule. Here (as elsewhere) we assume that characters <i>σ</i> are not in the order relation with anything, so for example (<i>a</i>,<i>σ</i>)◁(<i>a'</i>,<i>σ'</i>) if <i>a</i> ◁<sub>A</sub> <i>a'</i> for <i>a</i>∈<i>A</i> and <i>σ</i>∈∑.

If you work through a couple of examples using this definition, you will see that it usually corresponds to the expected behaviour – and that it turns conflicts into parallel tracks.

Actually there is one class of cases where the pushout doesn’t do quite what I naively expected. Suppose Tom and Sarah start with a document containing the text “xy”. Tom replaces the x with “whisk”, so it reads “whisky”; and at the same time Sarah replaces the y with “anax”, so her copy reads “xanax”. I would have expected the resolved document to read “whiskanax”, but actually there is nothing to force this ordering, and the result is “whisk” and “anax” on parallel tracks. If there had been another character between the x and the y, the result would have been in the expected order; I wonder if it would be helpful to do the computation as though there were a hidden spacer character at every character boundary, so we get the expected result in situations like this. Or were my expectations wrong?
<h2>A question for the cognoscenti</h2>
Is there any prior work on this category-theoretic approach to collaborative editing or distributed version control?]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>759</wp:post_id>
  <wp:post_date>2012-05-10 18:12:04</wp:post_date>
  <wp:post_date_gmt>2012-05-10 17:12:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>on-editing-text</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="algorithms"><![CDATA[algorithms]]></category>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="post_format" nicename="post-format-standard"><![CDATA[Standard]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>draftfeedback_requests</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:13:"4faa5c45e7cba";a:3:{s:3:"key";s:13:"4faa5c45e7cba";s:4:"time";s:10:"1336564805";s:7:"user_id";s:6:"235913";}s:20:"mail@duncanclark.net";a:3:{s:3:"key";s:13:"4faaeb7a657eb";s:4:"time";s:10:"1336601466";s:7:"user_id";s:6:"235913";}s:13:"4faaebee61143";a:3:{s:3:"key";s:13:"4faaebee61143";s:4:"time";s:10:"1336601582";s:7:"user_id";s:6:"235913";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>draft_feedback</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:20:"mail@duncanclark.net";a:1:{i:0;a:2:{s:4:"time";s:10:"1336639490";s:7:"content";s:650:"This looks great to me. I reckon keep the easy-then-hard structure as I suspect it will succeed in making some people read it who wouldn't. Certainly I found the first bit quite interesting even though I don't know anything about event handling or category theory.

So from a practical perspective if I was one of the collaborators I'd be looking at some text and it would be highlighted with a grey underline, say, which would show me that I'm looking at one "track" and that another parallel track exists for that section of text. And when I click it a menu would pop up showing the various versions and I could select one. That sounds good to me! ";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;a:2:{s:7:"user_id";s:12:"robinhouston";s:7:"post_id";s:18:"200634364026036224";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_1669861</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_660b587101ae995e4660950356ab9d5d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4e74f817d76f16fd6f02b8ff6f269b51</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a50fb46408c9258947d27fdfc42686a4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6bcf29bc2297a88ba97ec53b7623726c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d908fea36c53662195ca9b4ca21d9742</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7853b1beed289adcaa8d56246a6ea969</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2528</wp:comment_id>
    <wp:comment_author><![CDATA[Jason Reed]]></wp:comment_author>
    <wp:comment_author_email>jcreed@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://jcreed.livejournal.com</wp:comment_author_url>
    <wp:comment_author_IP>74.73.109.234</wp:comment_author_IP>
    <wp:comment_date>2012-05-11 02:18:23</wp:comment_date>
    <wp:comment_date_gmt>2012-05-11 01:18:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[There's something about your whiskanax example that makes me think that the category theory is being sensible for wanting to plead the 5th on the ordering of the edits in the pushout. Here's another example to meditate on:

My initial document is "pear apple orange 2 3 4".
Edit E1 takes it to "pear apple orange banana 3 4"
Edit E2 takes it to "pear apple 1 2 3 4"

Now if the human-intended semantics of E1 were "delete 2, insert banana after orange" and of E2 were "delete orange, insert 1 before 2", then the resolution "pear apple banana 1 3 4" makes sense.

If the intended semantics were E1: "replace 2 with banana" and E2: "replace orange with 1", then the resolution ""pear apple 1 banana 3 4" makes sense.

But the math doesn't really 'know' what your intent is when the edited elements are so close in the ordering, so it makes a kind of sense for it to leave them incomparable in the pushout ordering. That being said, adding extra hidden spacer characters, like you say, seems like a legitimate way to force a preference for a more 'replacey' interpretation of edits, if that's what you want.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336699107.1154";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336699106</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-05-11 01:18:23</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2529</wp:comment_id>
    <wp:comment_author><![CDATA[Jason Reed]]></wp:comment_author>
    <wp:comment_author_email>jcreed@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://jcreed.livejournal.com</wp:comment_author_url>
    <wp:comment_author_IP>74.73.109.234</wp:comment_author_IP>
    <wp:comment_date>2012-05-11 02:22:32</wp:comment_date>
    <wp:comment_date_gmt>2012-05-11 01:22:32</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[(Or maybe I should have had the first pair of intended semanticses be E1: "delete 2, insert banana at end of list of fruits", E2: "delete orange, insert 1 at head of list of numbers")]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2528</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336699353.8955";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336699353</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-05-11 01:22:32</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2530</wp:comment_id>
    <wp:comment_author><![CDATA[Jason Reed]]></wp:comment_author>
    <wp:comment_author_email>jcreed@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://jcreed.livejournal.com</wp:comment_author_url>
    <wp:comment_author_IP>74.73.109.234</wp:comment_author_IP>
    <wp:comment_date>2012-05-11 02:35:04</wp:comment_date>
    <wp:comment_date_gmt>2012-05-11 01:35:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[(One further disambiguating note that came up during a discussion with someone else about this: I mean the tokens "pear", "apple" etc. *as* elements of the alphabet. The spaces in my example strings are not meant to be characters themselves)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2528</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336700105</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336700105.8367";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-05-11 01:35:04</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2531</wp:comment_id>
    <wp:comment_author><![CDATA[tarmil]]></wp:comment_author>
    <wp:comment_author_email>loic@denuziere.net</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>178.48.18.229</wp:comment_author_IP>
    <wp:comment_date>2012-05-11 11:59:33</wp:comment_date>
    <wp:comment_date_gmt>2012-05-11 10:59:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[On your last question, I think that's basically what darcs is based on.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336733973.9091";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"tarmil";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336733973</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-05-11 10:59:33</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2532</wp:comment_id>
    <wp:comment_author><![CDATA[pozorvlak]]></wp:comment_author>
    <wp:comment_author_email>miles@assyrian.org.uk</wp:comment_author_email>
    <wp:comment_author_url>http://pozorvlak.livejournal.com</wp:comment_author_url>
    <wp:comment_author_IP>86.11.186.96</wp:comment_author_IP>
    <wp:comment_date>2012-05-11 14:33:56</wp:comment_date>
    <wp:comment_date_gmt>2012-05-11 13:33:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Not quite.

The biggest similarity is that these are both "bag of patches" models, unlike the Git/Mercurial "DAG of snapshots" model. This means, I think, that Robin's algorithm will do the Right Thing in <a href="https://tahoe-lafs.org/~zooko/badmerge/concrete-good-semantics.html" rel="nofollow">cases where Darcs merges correctly and Git merges incorrectly</a> - Git fails in these cases precisely because it doesn't track the source of each line by composing a sequence of changes, but rather tries to guess it by diffing the snapshots at the start and end of the sequence. But the formalism's quite different. Darcs assumes that a repository contains an ordered sequence of *patches*; the space of patches is required to satisfy the following axioms:

1) any two patches AB can be commuted past each other to get a new pair of patches B'A',
2) all patches are invertible,
3) commutation commutes with inversion,
4) commutation is coherent.

For more precise statements, see Ian Lynagh's paper "An Algebra of Patches", available at http://urchin.earth.li/~ian/conflictors/paper-2006-10-30.pdf . Given these axioms, one can define a merge operation (see Ian's paper). I've just sketched a proof that this merge operation gives a pushout, but I'm not entirely sure in which category! Anyway, I ran a Google search for "pushout site:darcs.net" and got 0 hits, so I'm fairly confident that this is not a well-established idea.

Some differences between Robin's model and the darcs model:

 - Robin's patches fail axiom (2), since deletions don't have unique inverses (as Robin proves <a href="https://twitter.com/#!/robinhouston/status/200909955136630785" rel="nofollow">here</a>). Note that real-world diffs do include the contents of lines which have been deleted.
 - I'm not sure what the state of the art on modelling conflicts is in the Darcs community, but I'm pretty sure it's nothing like as simple as what Robin presents above. I remember someone saying on the darcs-users list a month or two ago that they still didn't have a treatment of conflicts that covers all cases, but can't now find the relevant message.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2531</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336743237</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336743237.5568";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-05-11 13:33:56</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2533</wp:comment_id>
    <wp:comment_author><![CDATA[pozorvlak]]></wp:comment_author>
    <wp:comment_author_email>miles@assyrian.org.uk</wp:comment_author_email>
    <wp:comment_author_url>http://pozorvlak.livejournal.com</wp:comment_author_url>
    <wp:comment_author_IP>86.11.186.96</wp:comment_author_IP>
    <wp:comment_date>2012-05-11 14:40:26</wp:comment_date>
    <wp:comment_date_gmt>2012-05-11 13:40:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Two minor points:

&gt; It’s a little bit like a conflicted file in git, except that git forces such a conflict to be resolved immediately.

Not quite - it forces you to mark the conflict as resolved. It's happy for you to <code>git add</code> a file containing conflict markers and commit it. I think it's more accurate to say that git works with serialised possibly-nonlinear files. In fact, this is essential to how git's recursive merge algorithm works - conflicts found when generating the pseudo-MRCA are just treated as text and passed forward for subsequent merges. Git only complains if there are conflict markers in the final result.

&gt; And not just any function: it should be one-one on A and preserve the order of positions.

It seems to me that reordering a file is a useful operation - perhaps you're moving code from one function to another, for instance.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336743626</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336743627.0372";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-05-11 13:40:26</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2535</wp:comment_id>
    <wp:comment_author><![CDATA[pozorvlak]]></wp:comment_author>
    <wp:comment_author_email>miles@assyrian.org.uk</wp:comment_author_email>
    <wp:comment_author_url>http://pozorvlak.livejournal.com</wp:comment_author_url>
    <wp:comment_author_IP>86.11.186.96</wp:comment_author_IP>
    <wp:comment_date>2012-05-12 17:23:30</wp:comment_date>
    <wp:comment_date_gmt>2012-05-12 16:23:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[&gt; I’ve just sketched a proof that this merge operation gives a pushout

... and after an embarrassingly long time, I realise that's because in Darcs <i>every patch is invertible</i> so <i>every context is isomorphic to every other context</i>. Which makes the calculation of colimits trivial.

Bah. Time for a gin, I think.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2532</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336839813</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336839813.8848";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-05-12 16:23:30</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2538</wp:comment_id>
    <wp:comment_author><![CDATA[Martin McNulty]]></wp:comment_author>
    <wp:comment_author_email>martin@mcnulty.me.uk</wp:comment_author_email>
    <wp:comment_author_url>http://martinmcnulty.co.uk/</wp:comment_author_url>
    <wp:comment_author_IP>213.52.196.70</wp:comment_author_IP>
    <wp:comment_date>2012-05-16 08:48:12</wp:comment_date>
    <wp:comment_date_gmt>2012-05-16 07:48:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'm not sure whether this is relevant, but your post reminded me strongly of a Dan Spiewak post about resolving collaborative edits (he even used similar diagrams!).  

http://www.codecommit.com/blog/java/understanding-and-applying-operational-transformation]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1337154492</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1337154493.1154";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-05-16 07:48:12</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2539</wp:comment_id>
    <wp:comment_author><![CDATA[pozorvlak]]></wp:comment_author>
    <wp:comment_author_email>miles@assyrian.org.uk</wp:comment_author_email>
    <wp:comment_author_url>http://pozorvlak.livejournal.com</wp:comment_author_url>
    <wp:comment_author_IP>86.11.186.96</wp:comment_author_IP>
    <wp:comment_date>2012-05-16 15:18:49</wp:comment_date>
    <wp:comment_date_gmt>2012-05-16 14:18:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[&gt; he even used similar diagrams!

That at least should not be surprising - commutative diagrams are very general, and directed graphs even more so :-)

There are some obvious similarities: both systems are based on pushing around lists of changes rather than snapshots, for instance. But some obvious differences leap out on a quick skim:

1. OT (in Google Wave's implementation, at least) works on XML domtrees rather than text documents, though I expect this could be handled by replacing <b>RRef</b> with some other category.
1. OT does not allow for "documents with conflicts" - the linearisation step is performed immediately, or rather it's not separated out from the merge step.
2. Consequently, it's not automatic that all the diagrams drawn commute (that the procedure gives the same merge no matter what order you merge patches in), and the author talks as if this is a surprising result of Google's clever implementation. The universal property of pushouts makes this automatic in Robin's scheme.
3. In OT, the linearisation step depends on an explicit client/server distinction (at least in Spiewak's description). Robin's scheme is fully peer-to-peer.
4. In OT, each patch is tagged with a number or hash describing the document it was first applied to. I don't think this is essential except for consistency checking (darcs does something similar, IIRC), and could probably be added to Robin's scheme straightforwardly.

Reading that post, I'm even more convinced that Robin's on to something here. In particular, allowing the user to resolve conflicts if necessary rather than trying to resolve them immediately by some arbitrary scheme seems like the Right Thing - the go[at] example given there is particularly horrible, because it would pass a spellchecker but is very unlikely to be semantically meaningful. Exercise for the reader: construct a sentence in which "Got", "Goa" and "Goat" can all be used in the same position.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2538</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1337177930.023";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1337177929</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-05-16 14:18:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2772</wp:comment_id>
    <wp:comment_author><![CDATA[Daniel Janus]]></wp:comment_author>
    <wp:comment_author_email>dj@danieljanus.pl</wp:comment_author_email>
    <wp:comment_author_url>http://www.facebook.com/daniel.janus</wp:comment_author_url>
    <wp:comment_author_IP>92.4.138.87</wp:comment_author_IP>
    <wp:comment_date>2012-09-18 20:29:17</wp:comment_date>
    <wp:comment_date_gmt>2012-09-18 19:29:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Mikołaj Konarski has done some sketches on categorical formalisation of Darcs at http://en.wikibooks.org/wiki/Talk:Understanding_Darcs/Patch_theory]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1347996558</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1347996558.5811960697174072265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value/>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>1733092320</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-09-18 19:29:17</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2771</wp:comment_id>
    <wp:comment_author><![CDATA[pozorvlak]]></wp:comment_author>
    <wp:comment_author_email>miles@assyrian.org.uk</wp:comment_author_email>
    <wp:comment_author_url>http://pozorvlak.livejournal.com</wp:comment_author_url>
    <wp:comment_author_IP>81.109.238.189</wp:comment_author_IP>
    <wp:comment_date>2012-09-18 12:20:46</wp:comment_date>
    <wp:comment_date_gmt>2012-09-18 11:20:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thinking further, I don't think I was right to describe this as a "bag of patches" model - the patches are effectively concrete diffs, and so must be applied in the right order (unlike darcs, which makes strenuous efforts to pretend that patches can be applied in any order). But the snapshots are implicit, so it might be better described as a "DAG of patches" model.

But given darcs' origins in quantum mechanics, I'm amused by the parallel between Robin's "merge creating parallel tracks, then relinearize" split and the split in QM between the unitary, deterministic evolution of the wave function and the nondeterministic collapse it undergoes on measurement.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2532</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1347967246</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1347967246.4679470062255859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-09-18 11:20:46</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2774</wp:comment_id>
    <wp:comment_author><![CDATA[Linkschleuder (26) | Die Welt ist gar nicht so.]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://blog.dieweltistgarnichtso.net/linkschleuder-26</wp:comment_author_url>
    <wp:comment_author_IP>94.186.151.147</wp:comment_author_IP>
    <wp:comment_date>2012-10-05 20:59:03</wp:comment_date>
    <wp:comment_date_gmt>2012-10-05 19:59:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Editing text is the opposite of handling exceptions (via) [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1349467144</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1349467144.2260859012603759765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-10-05 19:59:03</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3027</wp:comment_id>
    <wp:comment_author><![CDATA[pozorvlak]]></wp:comment_author>
    <wp:comment_author_email>miles@assyrian.org.uk</wp:comment_author_email>
    <wp:comment_author_url>http://pozorvlak.livejournal.com</wp:comment_author_url>
    <wp:comment_author_IP>82.0.20.10</wp:comment_author_IP>
    <wp:comment_date>2013-07-16 23:48:13</wp:comment_date>
    <wp:comment_date_gmt>2013-07-16 22:48:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[The paper "CRDTs: Consistency without concurrency control" by Mihai Letia, Nuno Preguica and Marc Shapiro (http://pagesperso-systeme.lip6.fr/Marc.Shapiro/papers/RR-6956.pdf) describes a similar concurrent-editing system called Treedoc. In the terms used above, Treedoc relinearises documents by numbering all the peers (perhaps by IP address?) and declaring that, where text by peer n and peer m &gt; n overlap, the text by peer n goes first. Deletions are handled by adding "tombstones" to the data structure, so as a matter of efficiency periodic garbage-collection is required, and the authors describe an algorithm for this: this step requires consensus among peers, but it's not on the critical path for writes so the system can still provide high availability.

Following on from this paper, there's been work in the distributed-database community on Convergent/Commutative Replicated Data Types as an approach to achieving eventual consistency without the need for explicit consensus protocols. @lenary kindly wrote me a summary at https://gist.github.com/lenary/6008876; the key paper appears to be http://hal.inria.fr/docs/00/55/55/88/PDF/techreport.pdf. I haven't yet finished reading the paper, but Convergent RDTs define their merge operation in terms of the least-upper-bound operation of a semilattice, and LUBs are a special case of colimits.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1374014893</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1374014894.2155859470367431640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"pozorvlak";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-07-16 22:48:13</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3110</wp:comment_id>
    <wp:comment_author><![CDATA[David G. Durand]]></wp:comment_author>
    <wp:comment_author_email>david.durand@tizra.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/davidgdurand</wp:comment_author_url>
    <wp:comment_author_IP>72.195.138.58</wp:comment_author_IP>
    <wp:comment_date>2013-08-22 23:33:20</wp:comment_date>
    <wp:comment_date_gmt>2013-08-22 22:33:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I was just enjoying the blog when this post reminded me of more than a decade thinking about this kind of problem, more than a decade ago.

I dealt with this problem, in very much this way in my dissertation on collaborative editing (accepted in 2000), which presented ideas that were stable by '95 in all key essentials. The importance of commutation was significant in operational transformation contexts, but I went to an an order-independent representation so that only a certain notion of logical dependency was required. While partial ordering was the key, I was working to define a complete set of editing operations, and so the work is mostly stated directly in terms of the partial order of set inclusion between sets of changes.

It's readable online, at:
http://david.hub.agilepdf.com/Palimpsest

So my work really is a "bag of patches" model, with a change of notation so that patches depend on a locally extensible global address space, rather than diffs between portions of content.

The real meat of my work is definition of freely combinable move and copy operations, so that it's possible to combine large changes (like rearrangement of sections or paragraphs), with smaller changes like copy revision, without central coordination.

Most of these ideas don't pay off for code because of it's internal structure, where documents require much finer granularity to represent meaningful changes.

It's more than usually readable for a dissertation, and I think it summarizes the the state of the art back then pretty well. Since I left academia and didn't publish followups, I'm not surprised it's not well known, but I feel like I have to at least point it out.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1377210801</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1377210802.4450299739837646484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"davidgdurand";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-22 22:33:20</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3345</wp:comment_id>
    <wp:comment_author><![CDATA[Why Category Theory Matters by Robb Seaton | Thinking Machine Blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://thinkingmachineblog.net/why-category-theory-matters-by-robb-seaton/</wp:comment_author_url>
    <wp:comment_author_IP>192.254.250.167</wp:comment_author_IP>
    <wp:comment_date>2014-05-08 14:18:10</wp:comment_date>
    <wp:comment_date_gmt>2014-05-08 13:18:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] To understand collaborative text editing. [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-05-08 13:18:10</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1399555090</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1399555090.6687641143798828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3392</wp:comment_id>
    <wp:comment_author><![CDATA[Revisiting “On editing text” | Bosker Blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://bosker.wordpress.com/2014/06/19/revisiting-on-editing-text/</wp:comment_author_url>
    <wp:comment_author_IP>66.155.8.60</wp:comment_author_IP>
    <wp:comment_date>2014-06-19 01:25:35</wp:comment_date>
    <wp:comment_date_gmt>2014-06-19 00:25:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] two years ago I wrote about a category-theoretic treatment of collaborative text editing. That post is unique in the history of Bosker Blog in having been cited – twice so far that I [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1403137536</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1403137536.8479518890380859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-06-19 00:25:57</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3494</wp:comment_id>
    <wp:comment_author><![CDATA[Why Category Theory Matters - My blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://adbge.webfactional.com/category-theory-matters/</wp:comment_author_url>
    <wp:comment_author_IP>50.97.173.19</wp:comment_author_IP>
    <wp:comment_date>2014-09-01 23:30:29</wp:comment_date>
    <wp:comment_date_gmt>2014-09-01 22:30:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] To understand collaborative text editing. [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1409610629</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1409610629.5071399211883544921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-09-01 22:30:30</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Cartograms and the Carbon Map</title>
  <link>https://bosker.wordpress.com/2012/05/18/cartograms-and-the-carbon-map/</link>
  <pubDate>Fri, 18 May 2012 11:04:22 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=802</guid>
  <description/>
  <content:encoded><![CDATA[Last night I gave a talk at <a href="http://geomobldn.org/">geomobLDN</a> about the <a href="http://www.carbonmap.org/">carbon map</a> project. Here are a few relevant links and tidbits.<!--more-->

The <a href="http://www.pnas.org/content/101/20/7499.full">diffusion algorithm for generating area cartograms</a> is due to <a href="http://www2.imperial.ac.uk/~mgastner/">Michael Gastner</a> and <a href="http://www-personal.umich.edu/~mejn/">Mark Newman</a>. I used Mark Newman’s <a href="http://www-personal.umich.edu/~mejn/cart/">Cart software</a> to perform the algorithm.

During the talk I showed a video of the the diffusion process. The initial distribution of ink in this video corresponds to the distribution of the world’s population according to <a href="http://data.worldbank.org/indicator/SP.POP.TOTL">the World Bank’s SP.POP.TOTL</a>.
[wpvideo nSDBOSpu]
The video was generated by using <a href="https://github.com/robinhouston/newman-cart">an instrumented version of Cart</a> to dump intermediate density grids during the course of the simulation, and then plotting the density grids using <a href="https://github.com/robinhouston/cartograms/blob/master/bin/plot-density-grid.py">this script</a>. The images were finally stitched together into a video using ffmpeg.

With the progression of the borders overlain on it (and at half the frame rate), it looks like this:
[wpvideo VXERj1C1]
The border overlays were added using <a href="https://github.com/robinhouston/cartograms/blob/master/bin/as-png.py">this script</a>.

I have also added a README file to <a href="https://github.com/robinhouston/cartograms">my cartogram preparation code</a>, to give some pointers as to how it is intended to be used.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>802</wp:post_id>
  <wp:post_date>2012-05-18 12:04:22</wp:post_date>
  <wp:post_date_gmt>2012-05-18 11:04:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cartograms-and-the-carbon-map</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="carbon-map"><![CDATA[Carbon Map]]></category>
  <category domain="category" nicename="kiln"><![CDATA[Kiln]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;a:2:{s:7:"user_id";s:12:"robinhouston";s:7:"post_id";s:18:"203440896283381760";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The Prisoner’s Dilemma</title>
  <link>https://bosker.wordpress.com/2012/07/23/the-prisoners-dilemma/</link>
  <pubDate>Mon, 23 Jul 2012 22:10:46 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=813</guid>
  <description/>
  <content:encoded><![CDATA[<h2>The Prisoners’ Dilemma</h2>
The Prisoner’s Dilemma is a game, but a game that seems to bear lessons for the conduct of human affairs more generally, and it has attracted a great deal of attention from men not noted for their frivolity. It was discovered in 1950 at the RAND corporation, a military think-tank established after World War II by the United States Air Force to conduct a “program of study and research on the broad subject of intercontinental warfare”.

[caption id="attachment_817" align="alignright" width="300"]<img class="size-medium wp-image-817" title="A black and a white pawn" src="http://bosker.files.wordpress.com/2012/07/shutterstock_63184204.jpg?w=300" alt="" width="300" height="300" /> photo: DenisNata / Shutterstock.com[/caption]

So it is a serious game, but a simple one for all that. It requires two players, let’s say you and me. There is only one move. Each of us must make a choice, to “cooperate” or “defect”, without knowing what the other has chosen. Perhaps each of us takes, from a chess board, one black and one white pawn, and as we face each other I put my hands behind my back and proffer a closed fist containing the pawn I have chosen. You make your choice, too, in the same way. Together we open our hands, and reveal what we have chosen. The black pawn represents the black heart of the defector, the white the innocence of the cooperator.

Now, the reckoning. Should we each reveal a white pawn, we have cooperated and each of us wins £20: a fair and happy outcome. If we both are blackhearts with black pawns in our hands, we win nothing. But wickedness is not without its rewards in this game, for if I hold black and you white then I win £40 – and you, looking sadly at the white pawn in your hand, must pay £10 for your naivety.<!--more-->
<h2>A troubling game</h2>
The troubling aspect of this game, the reason it is infamous, is that it seems clear that each player’s best strategy is always to defect. Whichever pawn is in my hand, you will do better by defecting: if I have cooperated, then defecting will make you £20 richer than you would be by cooperating, and if I have defected then your defecting will spare you a loss of £10. Yet we collectively are punished for our cold rationality, for if we both defect then we are both worse off than if we had both cooperated.

[caption id="attachment_819" align="alignright" width="175"]<img class="size-full wp-image-819" style="margin-left:12px;" title="Douglas Hofstadter" src="http://bosker.files.wordpress.com/2012/07/hofstad.jpg" alt="" width="175" height="250" /> Douglas Hofstadter<br />photo: stolen from <a href="http://alumni.ecolint.net/authors/hofstadter.html">here</a>[/caption]

Douglas Hofstadter seems to have been especially troubled by this: “I found that I simply could not accept the seemingly flawless logical conclusion that says that a rational player … will always defect”, he wrote, and his Scientific American column of June 1983 explores this discomfort. Hofstadter sent a letter to 20 friends, inviting them to make a choice – to cooperate or defect – which would be used in a game of Prisoner’s Dilemma against each of the 19 others. So each person was to play 19 games, but had to choose one move that would be their move in each. These games were played for real (fairly small) sums of money.

The letter included a nod to the outcome Hofstadter had hoped for: “You’re very bright.”, he wrote. “So are all of you! About equally bright, I’d say, in fact.” In the event, most of the participants defected – 14 out of 20 – which, though it is the outcome most of us would expect, is not what Hofstadter had been hoping for. It is not easy to explain what he had been expecting, and I am not <em>quite</em> certain that it makes sense, but let me try: Hofstadter hoped that his friends would form what he called a ‘superrational’ cluster:
<blockquote>❝Superrational thinkers, by recursive definition, include in their calculations the fact that they are in a group of superrational thinkers.❞</blockquote>
In other words he hoped the players would realise that any answer arrived at by pure reason must be reached, too, in the same way, by all the other members of the group; and thence the players would realise that, since everyone must arrive at the same answer, there are only two possible outcomes: either all must cooperate, or all must defect; and that finally since of those two it is clearly preferable for everyone if everyone cooperates, the only rational move is to cooperate. Hofstadter later speculates that perhaps there are alien “civilisations to which cooperation appears axiomatic” that are destined to survive, whereas civilisations such as ours – “to which defection appears axiomatic” – shall not. (The Cold War threat of nuclear annihilation hangs gloomily over many of his writings of this period.)

<h2>We meet again</h2>
The Prisoner’s Dilemma challenges our moral sensibility too. For example, watch this clip from the British game show Golden Balls, in which two people play a Prisoner’s Dilemma-like game for high stakes:

http://www.youtube.com/watch?v=p3Uos2fzIJ0

It is hard not to feel that the winning player has done something morally questionable here, even though both are abiding by the rules of the game.

This is perhaps related to the fact that cooperation very often <em>is</em> the rational strategy in real-life situations. Whenever I go to the corner shop for a pint of milk, I have to choose whether to cooperate by paying for the milk, or defect by running away without paying. I could probably get away with stealing it: I think I could outrun the shopkeeper, who would in any case be reluctant to leave his shop unmanned for too long, and the police would be unlikely to devote much effort to the investigation of such a petty crime. But the inconvenience of this would outweigh the benefits. I would never be able to go back to the shop, so I would have to go further afield next time I need milk, and even passing by would risk the shopkeeper recognising me and calling the police, so I would have to walk my daughter to school by an inconveniently roundabout route. These practical considerations mean that, quite apart from any moral qualms I may have, stealing the milk would not be a net win for me. By contrast if I were passing through a distant Scottish village to which I was sure I would never return, then perhaps stealing a pint of milk from the village shop would be the rational course of action, since the inconvenience of being unable to go back to the same shop would be no inconvenience at all.[caption id="attachment_821" align="alignright" width="300"]<img class="size-medium wp-image-821" title="A Scottish village street" src="http://bosker.files.wordpress.com/2012/07/shutterstock_1693059.jpg?w=300" alt="" width="300" height="200" /> A Scottish village <br />photo: TTphoto / Shutterstock.com[/caption]

In short, cooperation may be the rational strategy <em>if you encounter the same people time after time</em>. The political scientist Robert Axelrod put this to the test in a famous experiment conducted in 1979. Axelrod set up a Prisoner’s Dilemma tournament, by computer, and invited a number of game theorists to submit computer programs encoding their strategy. The twist was that each digital player would be played against each other player 200 times, to simulate a situation where we encounter the same people repeatedly. These computer programs could remember what had happened on previous encounters with their opponent, and tailor their behaviour accordingly.
[caption id="attachment_823" align="alignright" width="212"]<img class="size-medium wp-image-823" title="Robert Axelrod" src="http://bosker.files.wordpress.com/2012/07/raxelrod.jpg?w=212" alt="" width="212" height="300" /> Robert Axelrod<br />photo: <a href="http://www-personal.umich.edu/~axe/">Robert Axelrod</a>[/caption]

The aim is to score as many points as possible over the whole tournament. This is not the same as ‘winning’: indeed the strategy that wins most often is to always defect, which will beat any opponent who does not always defect, and equalise with one who does. But this is typically a poor sort of winning in which neither player scores very many points, and the programs that did best overall in Axelrod’s tournament turned out to be those that were most effective at eliciting mutual cooperation.

The overall winner was a very simple strategy – the simplest of all the entries in that first tournament – called Tit for Tat. The tit-for-tat strategy is simply to cooperate the first time you meet someone new, and thereafter to do whatever they did the previous time. This strategy will cooperate with a co-player who is willing to cooperate, and yet cannot be much taken advantage of by one that is not.

After the tournament was over, and Axelrod had published the results in great detail, another tournament was announced for which entries were solicited from computer hobbyists as well as from professional mathematicians. There were 62 entries, again including Tit for Tat which was again submitted by its inventor, the psychologist Anatol Rapoport; and also including many subtle strategies that it could be proven would have won in the first tournament had they been there. The tournament was played, and Tit for Tat won again. This second victory showed the robustness of Tit for Tat, that it remained unbeaten even when all the competitors knew it was the one to beat.

<h2 id="press-dyson-strategies">Press-Dyson strategies</h2>
[caption id="attachment_825" align="alignright" width="200"]<img class="size-medium wp-image-825" title="Freeman Dyson" src="http://bosker.files.wordpress.com/2012/07/freeman_dyson.jpg?w=200" alt="" width="200" height="300" /> Freeman Dyson[/caption]

[caption id="attachment_824" align="alignleft" width="235"]<img class="size-medium wp-image-824" title="Bill Press" src="http://bosker.files.wordpress.com/2012/07/whpheadshot3.jpg?w=235" alt="" width="235" height="300" /> Bill Press[/caption]
<p style="clear:both;">And there matters rested, more or less, until this year. A few things were learned in the interim: it was found, for example, that sometimes a slight variant may fare better than plain Tit for Tat, the so-called <em>Generous Tit for Tat</em> in which an opponent’s defection is forgiven 10% of the time. Then there was <a href="http://abel.math.harvard.edu/archive/153_fall_04/Additional_reading_material/A_strategy_of_winstay_loseshift_that_out_performs_titfortat_in_the_Prisoners_Dilemma_game.pdf.pdf">a suggestion in 1993</a> that “win-stay, lose-shift” fares slightly better than generous Tit for Tat most of the time. (I am grateful to James Junghanns for drawing my attention to this, in the comments below.)

Still, it is reassuring to find that merely playing the game repeatedly with the same people is enough to favour strategies that resemble decent human behaviour, rather than the stark sociopathic logic that seems to reign when playing only once, and this is a comfortable place to rest.

But we can rest no longer! In <a href="http://www.pnas.org/content/early/2012/05/16/1206569109.full.pdf" target="_blank">a paper published earlier this year</a>, Bill Press and Freeman Dyson outline a series of startling mathematical results that change forever our understanding of the game. And, if the game is a model of human affairs, does that change our understanding of the world more generally too?

Press and Dyson uncovered a class of strategies for the iterated Prisoner’s Dilemma – that is, the game where the Prisoner’s Dilemma is played repeatedly with the same other player – that have strange, almost unbelievable properties. One will force the other player’s score, on average, to be a certain number; and nothing she can do will change that score, however she chooses to play. Another type, which Press and Dyson dub “extortionate”, is able to take advantage of the other player’s self-interest. Against an extortionate opponent, the more you allow yourself to be taken advantage of the better you will score. So a purely self-interested player, who will modify his play only to increase his own score, can be taken for a ride by an “extortionist” who is able to use the other player’s self-interest against him.

All this is heady stuff, and it is hard to say precisely what the broader implications are. I have made a <a href="http://s3.boskent.com/prisoners-dilemma/fixed.html" target="_blank">little interactive toy</a> where you can pit yourself against both these types of strategy, if you would like to see how they work in practice. Click the tabs to switch between different example strategies.

One thing these new strategies do <em>not</em> obviously do is to dethrone Tit for Tat on its own turf. We cannot be certain till more work has been done, more tournaments have been run, but it is certainly possible that Tit for Tat (or generous Tit for Tat, or Win-Stay, Lose-Shift) will keep its crown. <a href="http://nr.com/whp/StewartPlotkinExtortion2012.pdf">Stewart and Plotkin</a> found a Press-Dyson strategy that did slightly better than generous Tit for Tat in a single simulated tournament, but there’s no really good reason to think that advantage will prove reliable. We just don’t know, yet. This generous strategy, or at any rate a similar one, is also <a href="http://s3.boskent.com/prisoners-dilemma/titfer.html" target="_blank">available to play with</a> in the interactive toy.

<h2>The goldfish and the elephant</h2>
If you have played with the computer opponent, and read how its strategies work, you may be puzzled or surprised to see that the computer ignores all but the immediately previous move when deciding what to do. How is it that such a short memory is sufficient? And how is it that we, who can remember the whole game, cannot use this additional knowledge to gain an advantage over the forgetful machine?

[caption id="attachment_856" align="alignright" width="300"]<img src="http://bosker.files.wordpress.com/2012/07/shutterstock_63563557-e1343121271992.jpg?w=300" alt="" title="An elephant" width="300" height="300" class="size-medium wp-image-856" /> photo: Warren Goldswain / Shutterstock.com[/caption]In the jungle, there lived an elephant. This elephant was the most memorious of all the elephants, and she could remember everything that had happened since the birth of the world in every tiny detail. Sometimes on a hot afternoon the elephant would cool herself by the watering hole, and sometimes she would pass the time with a goldfish who lived there in the water. The goldfish was always surprised to see the elephant, for he never could recall anything that had happened more than a few short moments before, and he had no idea that the elephant was there almost every day.

To pass the time, the elephant taught the goldfish to play a game. In the jungle they knew it by a different name, but it was the game we know as Prisoner’s Dilemma. After some weeks the elephant found that the goldfish knew how to play, though he could not remember having been taught or even having met the elephant before. Memory is like that.

And so they played, hour after hour. The elephant could remember everything, of course: every move they had ever played, the precise way the sunlight had glinted on the water and the leaves had rustled at that moment she unclenched her trunk to reveal the black nut or the white nut. The poor goldfish could remember only the move they had just played, and then only by concentrating as hard as he could.

Still, the elephant found increasingly she did not win as often as she would have liked, and the goldfish’s play seemed to be improving, though his memory plainly was not. One afternoon she realised with shock that she was losing, not every turn but more often than not, though she thought hard each turn about everything either of them had ever done and the goldfish did not even recall that he had narrowly escaped being eaten by a crocodile just five minutes before.

That evening when the sun had set, the elephant sat down to think about what had happened. How was it possible that all her memories should profit her so little against this forgetful fish? Slowly she began to understand it. This forgetful fish, she thought, he can remember nothing. Only the move we have just played, and sometimes not even that. And the history of the game – this long history that I remember so vividly – does not exist to him. His choice is informed only by what he can remember. And the thing that I am up against is only the tiny stone that he shoots so deftly from his mouth, and this thing – this choice of his – is unlinked from the past. All those memories of mine cannot help me to predict what the fish will do, for they cannot <i>change</i> what he will do. Only the turn just played is real to him, so that only can matter to me.

Sadly, the elephant lay down to sleep. The elephant has no advantage of the goldfish in this game, and likewise you have none over the goldfish-memoried machine. This observation, that a longer memory confers no advantage against an opponent with a short one, is one of the key points of Press and Dyson’s work and appears as Appendix A in <a href="http://www.pnas.org/content/early/2012/05/16/1206569109.full.pdf">their paper</a>.

<h2>About the name</h2>
Oh, if you are wondering why it’s called the Prisoner’s Dilemma, that is because of a story that has been told to explain this game since shortly after its discovery. The story goes that two men, having engaged in a joint criminal enterprise, are apprehended by the law and interrogated separately. Each prisoner is given the opportunity to reduce his own sentence by testifying against the other – but that testimony will increase the prison sentence handed down to the other man, and if both testify then there will be evidence enough to put both behind bars for longer than if neither had. In this version the payoffs are prison sentences rather than cash prizes: it has the same paradoxical quality that each prisoner individually is always better off by defecting, but collectively they would be better to invoke their right to remain silent.

On the topic of names, did you know that the phrase Tit for Tat is the origin of the rhyming slang ‘titfer’, meaning a hat?

<h2>Links</h2>
<ul>
    <li><a href="http://edge.org/conversation/on-iterated-prisoner-dilemma">Conversation on The Edge website</a> with William Poundstone, Bill Press &amp; Freeman Dyson, and Karl Sigmund &amp; Martin Nowak.
    <li><a href="http://www.pnas.org/content/early/2012/05/16/1206569109.full.pdf">Technical paper with all the details</a>, by Press and Dyson.
    <li><a href="http://nr.com/whp/StewartPlotkinExtortion2012.pdf">Discussion paper</a> by Stewart and Plotkin.
    <li><a href="http://golem.ph.utexas.edu/category/2012/07/zerodeterminant_strategies_in.html">Mike Shulman attacks “hype and misinterpretation” of the Press-Dyson result</a> in a long blog post that includes a clear but detailed explanation of the Press-Dyson theorem.
    <li><a href="http://s3.boskent.com/prisoners-dilemma/fixed.html" target="_blank">The aforementioned interactive toy</a>.
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>813</wp:post_id>
  <wp:post_date>2012-07-23 23:10:46</wp:post_date>
  <wp:post_date_gmt>2012-07-23 22:10:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-prisoners-dilemma</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>draftfeedback_requests</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:13:"500bf1cc51a83";a:3:{s:3:"key";s:13:"500bf1cc51a83";s:4:"time";s:10:"1342960076";s:7:"user_id";s:6:"235913";}s:13:"500c11d523ace";a:3:{s:3:"key";s:13:"500c11d523ace";s:4:"time";s:10:"1342968277";s:7:"user_id";s:6:"235913";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>draft_feedback</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:13:"500bf1cc51a83";a:1:{i:0;a:2:{s:4:"time";s:10:"1343032686";s:7:"content";s:883:" This is great! Fascinating stuff.

I admit that I had to look up ratiocination -- which added confusion to the one bit that I was already confused by. I.e. I just don't follow why everyone reaching the same logical conclusion about the situation would lead to everyone then making the same move. But you already say it probably doesn't make sense so that's fine.

I lik the Scottish village photo. It reminds me of David MacKay's book.

I wonder if you should add a sentence or two at the end which explains how the two new strategies work, so that the article feels complete without going to the toy.

Speaking of the toy, it's awesome … though I think the blurring of "I"/"computer" is potentially confusing (it almost reads as if there are three people involved). And I would have liked an explanation of how the latter one works, rather than just saying it does.

Great stuff!";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>twitter_cards_summary_img_size</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{i:0;i:500;i:1;i:500;i:2;i:2;i:3;s:24:"width="500" height="500"";s:4:"bits";i:8;s:8:"channels";i:3;s:4:"mime";s:10:"image/jpeg";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e3d41b172b51e82fa83e3d469e4499f3</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7a99034f5c751ae2e3b77923fa938a04</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e502522f6633e9b6a91bc286482be5aa</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2773</wp:comment_id>
    <wp:comment_author><![CDATA[Infinite Games | Eventually Almost Everywhere]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://eventuallyalmosteverywhere.wordpress.com/2012/09/18/infinite-games/</wp:comment_author_url>
    <wp:comment_author_IP>74.200.244.73</wp:comment_author_IP>
    <wp:comment_date>2012-09-18 23:02:57</wp:comment_date>
    <wp:comment_date_gmt>2012-09-18 22:02:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] The Prisoner&#8217;s Dilemma: a summary, and new advances (bosker.wordpress.com) [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1348005777</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1348005777.522183895111083984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-09-18 22:02:57</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2565</wp:comment_id>
    <wp:comment_author><![CDATA[Nick]]></wp:comment_author>
    <wp:comment_author_email>nickberg@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>24.84.69.229</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 11:07:40</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 10:07:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA["In the event most of the participants defected – 14 out of 20 – which, though it is the outcome most of us would expect, is not what Hofstadter had been hoping for."

In the event others read this sentence incorrectly and are curious about what happened, there needs to be a comma after the word "event". To wit:

"In the event, most of the participants defected – 14 out of 20 – which, though it is the outcome most of us would expect, is not what Hofstadter had been hoping for.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343124461</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343124462.0564858913421630859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 10:07:40</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2566</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>82.132.242.157</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 11:12:19</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 10:12:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks. Fixed.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2565</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343124740</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343124740.3281710147857666015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 10:12:19</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2567</wp:comment_id>
    <wp:comment_author><![CDATA[Stoo]]></wp:comment_author>
    <wp:comment_author_email>stoo.goff@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/darthstoo</wp:comment_author_url>
    <wp:comment_author_IP>91.125.114.227</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 12:05:43</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 11:05:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Have you seen this answer to the dilemma, from the same TV show? http://www.youtube.com/watch?v=S0qjK3TWZE8

It's masterful game play, even though his opponent doesn't initially agree.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343127944</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343127944.42488002777099609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"darthstoo";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 11:05:43</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2568</wp:comment_id>
    <wp:comment_author><![CDATA[James Junghanns]]></wp:comment_author>
    <wp:comment_author_email>james.junghanns@mac.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.facebook.com/qubex</wp:comment_author_url>
    <wp:comment_author_IP>77.43.101.242</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 13:57:29</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 12:57:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Axelrod's payoff matrix randomly satisfied an inequality that biased the tournament in favour of Tit For Tat. In general Win Stay Lose Shift (WSLS) has a higher expected payoff.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343134653</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343134653.5760719776153564453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value/>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>724925103</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 12:57:29</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2569</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>188.29.45.92</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 13:58:09</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 12:58:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I love that!

It’s interesting that this only works because the game is not quite the same as Prisoner’s Dilemma: in Split or Steal, if your opponent steals then you don’t lose anything by splitting; but in one-shot PD you always lose by cooperating.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2567</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343134692</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343134693.200026988983154296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 12:58:09</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2570</wp:comment_id>
    <wp:comment_author><![CDATA[James Junghanns]]></wp:comment_author>
    <wp:comment_author_email>james.junghanns@mac.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.facebook.com/qubex</wp:comment_author_url>
    <wp:comment_author_IP>77.43.101.242</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 13:58:25</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 12:58:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[http://www.ncbi.nlm.nih.gov/pubmed/8316296]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2568</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343134708</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343134709.2547500133514404296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://graph.facebook.com/724925103/picture?type=large</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>724925103</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 12:58:25</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2571</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>188.29.45.92</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 14:00:03</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 13:00:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks, James. That sounds very interesting. I’ll have a look.

<strong>Edited to add</strong>: Very interesting indeed. Thanks again. I’ve edited the article slightly to mention it.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2568</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343134806</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343134806.9043619632720947265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 13:00:03</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2572</wp:comment_id>
    <wp:comment_author><![CDATA[gwern]]></wp:comment_author>
    <wp:comment_author_email>gwern0@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>141.156.91.87</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 15:04:55</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 14:04:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hofstadter: http://www.gwern.net/docs/1985-hofstadter]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>22074361</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343138696</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343138697.0104019641876220703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"gwern0";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 14:04:55</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2573</wp:comment_id>
    <wp:comment_author><![CDATA[j2kun]]></wp:comment_author>
    <wp:comment_author_email>kun.jeremy@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://jeremykun.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>128.115.27.10</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 16:46:23</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 15:46:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[There are two more important difference between split or steal and the prisoner's dilemma that allows for such optimal strategies as the one linked in the above comment. The first is that most often the prisoner's dilemma is an iterated game, so that the players can change their strategy based on the actions of their opponents. The second and more important difference is that in split or steal the players have the opportunity to talk to each other. In the classical (mathematical) prisoner's dilemma, there is no dialogue.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>20153648</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343144784</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343144784.7560360431671142578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"jeremykun";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 15:46:23</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2574</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>188.29.45.92</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 16:49:16</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 15:49:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I’m disappointed to find that my subscription to Nature doesn’t get me access to old articles like this one, but I found a copy here: http://abel.math.harvard.edu/archive/153_fall_04/Additional_reading_material/A_strategy_of_winstay_loseshift_that_out_performs_titfortat_in_the_Prisoners_Dilemma_game.pdf.pdf]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2570</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343144957</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343144958.0636689662933349609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 15:49:16</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2575</wp:comment_id>
    <wp:comment_author><![CDATA[Tay Sharp]]></wp:comment_author>
    <wp:comment_author_email>t57896543215@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>195.222.10.250</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 17:20:20</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 16:20:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[The other participants in the tournament could shift the winner.

Imagine a contest of tit-for-tat competitors and pure altruist (always cooperate) bots. (I know you can't control the field you play against, but go with this hypo for purposes of exposition.)

Suppose I introduce a "punish tit-for-tat, reward altruism" participant. I use the first few rounds to test whether or not the opponent is tit-for-tat or pure altruist. When round 10 hits, out of say, 100, I become pure altruist for altruists, or pure sadist for tit-for-tat, depending on which strategy I discovered. The more of this new bot, call it the JUDGE bot, dominates the field, the more the altruists will outperform TfT.

Suppose JUDGES lose interest in promoting altruism exclusively. Say it is refined slightly to also detect other JUDGE bots (maybe they even self-identify with a special code of initial cooperate/defect moves). When the bots see other JUDGEs, they go pure altruist. When it sees another altruist, it backs off to 90%, or maybe 50% rewards. The TfT it continues to punish remorselessly.

If these sort of bots were dominating the field, then we opened up the field to all competitors, a quick improvement would be to masquerade as a judge, but defect in the last few rounds.

You might get really complex cliques that help each other, but sabotage other scores. Those cliques might say something else about human societies.

I'm not sure if anyone's studied the math of these sort of algorithm-ist bots, maybe the lost energy trying to figure out who is on your side is always self-defeating. It'd be interesting to see more research on this though, see if my idle non-mathematical musings bear anything interesting.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343146820</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343146820.971458911895751953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 16:20:20</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2576</wp:comment_id>
    <wp:comment_author><![CDATA[John]]></wp:comment_author>
    <wp:comment_author_email>someone@somewhere.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>95.145.26.54</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 18:16:45</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 17:16:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I think you are forgetting the "goldfish memory”; trying to use long-term strategies fails when pitted against short-term, previous result plays.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2575</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343150205</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343150205.9305899143218994140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 17:16:45</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2577</wp:comment_id>
    <wp:comment_author><![CDATA[James Junghanns]]></wp:comment_author>
    <wp:comment_author_email>james.junghanns@mac.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.facebook.com/qubex</wp:comment_author_url>
    <wp:comment_author_IP>88.34.252.114</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 18:45:43</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 17:45:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I don't remember any references off the top of my head but researchers have submitted "swarms" of strategies to various tournaments and contests. The basic idea is that these strategies go through a choreographed "recognition sequence". If they do not recognise the opponent, they default to a sensible strategy such as Tit-for-Tat, Generous Tit-for-Tat or Win-Stay-Lose-Shift. If they do recognise the opponent "drone" strategies sacrifice themselves by making a nonrandom sequence of suboptimal choices in order to favour a "queen" strategy that has been pre-designated to win.

These techniques have proven themselves to be robust (in the sense that recognition works even under noisy conditions) but not worthwhile (in that even the pre-designated "queen" strategy does not gain a significant advantage over baseline strategies).

This seems general enough to cover the scenario proposed by Tay Sharp (though admittedly anecdotally and not rigorously).]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343151946</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343151946.760449886322021484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value/>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>724925103</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 17:45:43</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2578</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>188.29.45.92</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 18:58:01</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 17:58:01</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Are you thinking of this? http://www.wired.com/culture/lifestyle/news/2004/10/65317]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2577</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343152684</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343152685.1639630794525146484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 17:58:01</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2579</wp:comment_id>
    <wp:comment_author><![CDATA[Troels]]></wp:comment_author>
    <wp:comment_author_email>troels.d.hoffmeyer@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>188.177.188.111</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 19:21:10</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 18:21:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[But the purpose of the judge is not to win himself. The purpose of the Judge is to help the altruist win, and to punish the TfT's. Now it is no longer 1vs1 but a team game.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2576</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343154070</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343154071.079492092132568359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 18:21:10</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2580</wp:comment_id>
    <wp:comment_author><![CDATA[peet]]></wp:comment_author>
    <wp:comment_author_email>peterhawkins@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/peterhawkins1</wp:comment_author_url>
    <wp:comment_author_IP>64.125.189.150</wp:comment_author_IP>
    <wp:comment_date>2012-07-24 20:34:37</wp:comment_date>
    <wp:comment_date_gmt>2012-07-24 19:34:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[so does "tit for tat" translate to "eye for an eye" as a strategy for punishment?  does it lend it any merit?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343158478</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343158478.42737102508544921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"peterhawkins1";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-24 19:34:37</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2595</wp:comment_id>
    <wp:comment_author><![CDATA[Overview and recent developments for The Prisoners&#8217; Dilemma &laquo; Economics Info]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.economicsinfo.com/economics/2012/07/25/overview-and-recent-developments-for-the-prisoners-dilemma/</wp:comment_author_url>
    <wp:comment_author_IP>72.52.222.141</wp:comment_author_IP>
    <wp:comment_date>2012-07-25 14:00:41</wp:comment_date>
    <wp:comment_date_gmt>2012-07-25 13:00:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Source [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343221241</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343221241.9714829921722412109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-25 13:00:41</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2596</wp:comment_id>
    <wp:comment_author><![CDATA[James Junghanns]]></wp:comment_author>
    <wp:comment_author_email>james.junghanns@mac.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.facebook.com/qubex</wp:comment_author_url>
    <wp:comment_author_IP>88.34.252.114</wp:comment_author_IP>
    <wp:comment_date>2012-07-25 14:20:40</wp:comment_date>
    <wp:comment_date_gmt>2012-07-25 13:20:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I was probably thinking of that but apparently I remembered it exactly in reverse. I'm sure I didn't read it in WIRED (hallowed though that publication may be) but it's close enough to be either the same story (with a mistake on my behalf) or a previous attempt that was eventually perfected.

Reminds me of the importance of avoiding anecdotal evidence and providing references for proofs or counter-examples.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2578</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343222443</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343222444.35865688323974609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://graph.facebook.com/724925103/picture?type=large</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>724925103</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-25 13:20:40</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2598</wp:comment_id>
    <wp:comment_author><![CDATA[James Junghanns]]></wp:comment_author>
    <wp:comment_author_email>james.junghanns@mac.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.facebook.com/qubex</wp:comment_author_url>
    <wp:comment_author_IP>88.34.252.114</wp:comment_author_IP>
    <wp:comment_date>2012-07-25 14:45:38</wp:comment_date>
    <wp:comment_date_gmt>2012-07-25 13:45:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Referring to "punishment" misses the whole point of Tit For Tat: two TFT-playing players will always cooperate and nobody will ever need to be punished. 

But when a defection does occur, there is indeed a single instance of automatic Eye For An Eye punishment. Depending on the pair of strategies, this may or may not end there or reverberate throughout the game from then on. 

For example, if two TFT players are playing against each other and cooperating, all is fine and well and they will go on cooperating forever. But add an instance of noise in the form of a single defection and suddenly you have instigated a retaliatory defection, which in turn generates a counter-defection, and so on, degenerating into an endless cycle of reprisals. 

This is why Generous Tit For Tat wins against Tit For Tat in the long run: by having a less-than-certain retaliation, it can recover from the deterministic cycle of revenge. 

From a philosophical standpoint, "do unto others as they would you do unto them" is probably a less dismal rendition of Tit For Tat than "Eye For An Eye" is.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2580</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343223939</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343223939.3943879604339599609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://graph.facebook.com/724925103/picture?type=large</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>724925103</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-25 13:45:38</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2733</wp:comment_id>
    <wp:comment_author><![CDATA[Bohdan Yarema]]></wp:comment_author>
    <wp:comment_author_email>zaalbarjedi@meta.ua</wp:comment_author_email>
    <wp:comment_author_url>http://www.facebook.com/bohdan.yarema.9</wp:comment_author_url>
    <wp:comment_author_IP>188.163.238.74</wp:comment_author_IP>
    <wp:comment_date>2012-08-06 11:49:28</wp:comment_date>
    <wp:comment_date_gmt>2012-08-06 10:49:28</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'm sorry for the off top, but will you write some more posts about maze random access problem? I'm quite interested in this question.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1344250168</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344250168.2398231029510498046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value/>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>100001583566828</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-08-06 10:49:28</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2737</wp:comment_id>
    <wp:comment_author><![CDATA[Prisoner’s Dilemma &laquo; Experiments and Expressions]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://retvic.wordpress.com/2012/06/27/prisoners-dilemma/</wp:comment_author_url>
    <wp:comment_author_IP>69.170.134.35</wp:comment_author_IP>
    <wp:comment_date>2012-08-08 16:56:30</wp:comment_date>
    <wp:comment_date_gmt>2012-08-08 15:56:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] The Prisoner&#8217;s Dilemma: a summary, and new advances (bosker.wordpress.com) [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1344441390</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344441390.7292120456695556640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-08-08 15:56:30</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3176</wp:comment_id>
    <wp:comment_author><![CDATA[Nick Shryane]]></wp:comment_author>
    <wp:comment_author_email>nick.shryane@manchester.ac.uk</wp:comment_author_email>
    <wp:comment_author_url>http://www.scid-project.org</wp:comment_author_url>
    <wp:comment_author_IP>130.88.68.93</wp:comment_author_IP>
    <wp:comment_date>2013-09-25 17:01:38</wp:comment_date>
    <wp:comment_date_gmt>2013-09-25 16:01:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Enjoyed the blog. Do you know of any experiments that have looked at the strategies humans actually follow when playing iterated PD?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1380124898</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1380124898.9637238979339599609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-09-25 16:01:38</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Adrift is NP-complete</title>
  <link>https://bosker.wordpress.com/2013/03/13/adrift-is-np-complete/</link>
  <pubDate>Wed, 13 Mar 2013 09:30:33 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=877</guid>
  <description/>
  <content:encoded><![CDATA[There’s a lovely new puzzle game for the iPhone called <a href="http://www.playadrift.com">Adrift</a>. I got it last week when I was in bed with flu, and it’s a fun way to spend a few hours.

The puzzles look like this:
<p style="text-align:center;"><img class="size-medium wp-image aligncenter" id="i-932" alt="Image" src="http://bosker.files.wordpress.com/2013/03/board1.png?w=444" width="227" height="257" /></p>
And you solve them by connecting the coloured stars with paths of the same colour:
<p style="text-align:center;"><img class="size-medium wp-image-936" alt="board1-solved" src="http://bosker.files.wordpress.com/2013/03/board1-solved.png?w=264" width="227" height="257" /></p>
You can play a few demo levels <a href="http://www.playadrift.com">on the web</a>. This is a very simple example. Some of the more difficult ones are pretty fiendish.

<!--more-->But this post isn’t about how to solve Adrift puzzles. It’s about their computational complexity. (I seem to be <a href="http://arxiv.org/abs/1106.2104">making a habit</a> of investigating the complexity of puzzle games once I’ve finished playing them.) Intuitively it seems pretty likely that Adrift puzzles are NP-complete, because they are difficult enough to be satisfying but it’s easy to verify that a solution is correct.

Recently I read <a href="http://erikdemaine.org/papers/GPC/">Games, Puzzles &amp; Computation</a>, which introduces an elegant general “Constraint Logic” framework for proving complexity results about games, and Adrift seemed like a good excuse to try out these techniques.

The basic technique for proving hardness results is <i>reduction</i>. We want to show that, if there were a fast algorithm for solving Adrift puzzles, it could be used to solve some problem that is known to be NP-hard. The most promising-looking such problem from <em>Games, Puzzles &amp; Computation</em> is Constraint Graph Satisfiability (§5.1.3). So we need to invent a translation that will convert any Constraint Graph Satisfiability problem into an Adrift puzzle.

A constraint graph is a finite planar graph with red and blue edges, and three edges meeting at each node. Like this:

<img class="aligncenter size-medium wp-image-939" alt="constraint-graph-example" src="http://bosker.files.wordpress.com/2013/03/constraint-graph-example.png?w=300" width="300" height="123" />

We can also suppose that every node joins either three blue edges (making it an OR node) or else two red and a blue (an AND node).

To solve a Constraint Graph Satisfiability problem, you draw an arrow on each edge of the graph so that every node has either at least one blue arrow pointing at it, or at least two red ones. In the picture the blue edges are drawn twice as thick as the red ones, to illustrate the fact that two reds are worth the same as one blue.

Why not try to solve this? It’s not difficult, but it’s possible to get stuck if you make the wrong choices early on.

In fact, there is more than one solution. Here is one:

<img class="aligncenter size-medium wp-image-941" alt="constraint-graph-example-solved" src="http://bosker.files.wordpress.com/2013/03/constraint-graph-example-solved.png?w=300" width="300" height="123" />

Now we’re going to show that, if Adrift puzzles are easy, then so is Constraint Graph Satisfiability. If you give me a CGS problem, I’ll convert it into an Adrift puzzle as follows. Suppose the constraint graph is drawn on a grid, and replace each cell of this grid by a 5×5 square section of an Adrift puzzle, according to the following rules:
<ul>
	<li><span style="line-height:13px;">An OR node turns into this gadget, using two previously unused colours:<img class="aligncenter size-medium wp-image-943" alt="OR-gadget-alone" src="http://bosker.files.wordpress.com/2013/03/or-gadget-alone.png?w=300" width="300" height="200" /></span></li>
	<li>An AND node turns into this gadget:
<img class="aligncenter size-medium wp-image-988" alt="AND-gadget-alone" src="http://bosker.files.wordpress.com/2013/03/and-gadget-alone.png?w=300" width="300" height="200" />
where one of the three entrances is connected to the central island, corresponding to the blue edge in the constraint graph. So there are three possibilities, depending which edge is blue:<img class="aligncenter size-medium wp-image-944" alt="AND-gadgets-alone" src="http://bosker.files.wordpress.com/2013/03/and-gadgets-alone.png?w=300" width="300" height="193" /></li>
	<li>Finally, an edge is represented like this – again using a colour that hasn’t been used elsewhere. These wires can be arbitrarily long, and go round corners. There is only one pair of colours for each wire, however long and bendy it is.<a href="http://bosker.files.wordpress.com/2013/03/wire-gadget.png"><img class="aligncenter size-medium wp-image-947" alt="wire-gadget" src="http://bosker.files.wordpress.com/2013/03/wire-gadget.png?w=300" width="300" height="200" /></a></li>
</ul>
And really that is the end of it, though I still need to persuade you that these gadgets work as advertised.

Each wire can either be resolved this way

<img class="aligncenter size-medium wp-image-953" alt="wire-arrow-2" src="http://bosker.files.wordpress.com/2013/03/wire-arrow-21.png?w=300" width="300" height="200" />

or this way

<img class="aligncenter size-medium wp-image-952" alt="wire-arrow-1" src="http://bosker.files.wordpress.com/2013/03/wire-arrow-11.png?w=300" width="300" height="200" />

corresponding to the two directions of the arrow in the satisfied constraint graph. My mnemonic for the direction of the arrows is to imagine the coloured band as a catapult or a bow, propelling the arrow in the given direction.

Here is a fully-loaded OR gadget with three inputs attached:
<img class="aligncenter size-medium wp-image-956" alt="OR-gadget-with-inputs" src="http://bosker.files.wordpress.com/2013/03/or-gadget-with-inputs.png?w=300" width="300" height="186" />

and here is one possible resolution of the gadget:

<img class="aligncenter size-medium wp-image-957" alt="OR-gadget-configuration" src="http://bosker.files.wordpress.com/2013/03/or-gadget-configuration.png?w=300" width="300" height="186" />

It should be clear that this really does function as an OR: you can’t have all three arrows pointing <em>away</em> from the node, because there isn’t room for all three colours in the middle.

Likewise the AND gadget looks like this when hooked up to three wires:
<img class="aligncenter size-medium wp-image-958" alt="AND-gadget-with-inputs" src="http://bosker.files.wordpress.com/2013/03/and-gadget-with-inputs.png?w=300" width="300" height="186" />

and one possible resolution is like this:
<img class="aligncenter size-medium wp-image-959" alt="AND-gadget-configuration" src="http://bosker.files.wordpress.com/2013/03/and-gadget-configuration.png?w=300" width="300" height="186" />

Again it should be fairly clear that this functions as advertised: you can’t have the blue <em>and</em> one of the red arrows pointing away from the node, because there isn’t room.

So that’s it. One more entry in the long <a href="http://www.ics.uci.edu/~eppstein/cgt/hard.html">list of NP-complete puzzle games</a>. If you’re interested in this sort of thing, I recommend <em>Games, Puzzles &amp; Computation</em>. It’s full of interesting results and tantalising open problems. The constraint logic technique is especially useful for PSPACE-hard puzzles like <a href="http://en.wikipedia.org/wiki/Sokoban">Sokoban</a>.

<strong>Update on 14 March:</strong> There is nothing new under the sun. It turns out this theorem was proved in 1975 by James F. Lynch at the University of Colorado, by direct reduction from CNF-SAT: <a href="http://dl.acm.org/citation.cfm?id=1061430">The equivalence of theorem proving and the interconnection problem.</a> Thanks to <a href="http://www.reddit.com/r/compsci/comments/1a7hc6/adrift_is_npcomplete/">reddit commenters</a> for pointing me in the right direction to find this.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>877</wp:post_id>
  <wp:post_date>2013-03-13 10:30:33</wp:post_date>
  <wp:post_date_gmt>2013-03-13 09:30:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adrift-is-np-complete</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:5705;i:523;}s:2:"wp";a:1:{i:0;i:18;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[robinhouston]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>OR-gadget-configuration</title>
  <link>https://bosker.wordpress.com/2013/03/13/adrift-is-np-complete/or-gadget-configuration/</link>
  <pubDate>Wed, 13 Mar 2013 02:42:25 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/03/or-gadget-configuration.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>957</wp:post_id>
  <wp:post_date>2013-03-13 03:42:25</wp:post_date>
  <wp:post_date_gmt>2013-03-13 02:42:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>or-gadget-configuration</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>877</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/03/or-gadget-configuration.png</wp:attachment_url>
</item>
<item>
  <title>AND-gadget-with-inputs</title>
  <link>https://bosker.wordpress.com/2013/03/13/adrift-is-np-complete/and-gadget-with-inputs/</link>
  <pubDate>Wed, 13 Mar 2013 02:50:09 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/03/and-gadget-with-inputs.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>958</wp:post_id>
  <wp:post_date>2013-03-13 03:50:09</wp:post_date>
  <wp:post_date_gmt>2013-03-13 02:50:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>and-gadget-with-inputs</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>877</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/03/and-gadget-with-inputs.png</wp:attachment_url>
</item>
<item>
  <title>AND-gadget-configuration</title>
  <link>https://bosker.wordpress.com/2013/03/13/adrift-is-np-complete/and-gadget-configuration/</link>
  <pubDate>Wed, 13 Mar 2013 02:50:52 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/03/and-gadget-configuration.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>959</wp:post_id>
  <wp:post_date>2013-03-13 03:50:52</wp:post_date>
  <wp:post_date_gmt>2013-03-13 02:50:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>and-gadget-configuration</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>877</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/03/and-gadget-configuration.png</wp:attachment_url>
</item>
<item>
  <title>John H Conway and the invention of the filing cabinet</title>
  <link>https://bosker.wordpress.com/2012/10/27/john-h-conway-and-the-invention-of-the-filing-cabinet/</link>
  <pubDate>Sat, 27 Oct 2012 09:51:47 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=974</guid>
  <description/>
  <content:encoded><![CDATA[<blockquote>Conway is incredibly untidy. The tables in his room at the Department of Pure Mathematics and Mathematical Statistics in Cambridge are heaped high with papers, books, unanswered letters, notes, models, charts, tables, diagrams, dead cups of coffee, and the most amazing assortment of bric-a-brac, which has overflowed most of the floor and all of the chairs, so that it is hard to take more than a pace or two into the room and impossible to sit down. If you can reach the blackboard there is a wide range of coloured chalk, but no space to write. His room in college is in a similar state. In spite of his excellent memory he often fails to find the piece of paper with the important result that he discovered some days before, and which is recorded nowhere else. Even Conway came to see that this was not a desirable state of affairs, and he set to work designing and drawing plans for a device which might induce some order amongst the chaos. He was about to take his idea to someone to get it implemented, when he realised that just what he wanted was standing, empty, in the corner of his room. Conway had invented the filing cabinet!</blockquote><p>Richard K Guy on John H Conway, in <i>Mathematical People</i></p>

<em>I originally posted this to Posterous on 27 October, 2012. Posterous is closing down, so I have migrated it here on 13 March, 2013.</em>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>974</wp:post_id>
  <wp:post_date>2012-10-27 10:51:47</wp:post_date>
  <wp:post_date_gmt>2012-10-27 09:51:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>john-h-conway-and-the-invention-of-the-filing-cabinet</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <category domain="post_format" nicename="post-format-quote"><![CDATA[Quote]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:5705;i:523;}s:2:"wp";a:1:{i:0;i:18;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[robinhouston]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Just occasionally, one would be quite lost without recursion</title>
  <link>https://bosker.wordpress.com/2010/08/26/just-occasionally-one-would-be-quite-lost-without-recursion/</link>
  <pubDate>Thu, 26 Aug 2010 10:09:50 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=980</guid>
  <description/>
  <content:encoded><![CDATA[<em>This was originally posted to Posterous in two parts, on the 23 and 26 August 2010. I don’t agree with all of it now, and I’m not sure it was worth writing in the first place, but I’ll keep it for the sake of continuity.</em>
<!--more-->
Last week I wrote a recursive function, and next to it I was moved to remark:
<blockquote>
<pre># Just occasionally, one would be quite lost without recursion</pre>
</blockquote>
It's pretty unusual to encounter a problem that is best solved using recursion. I suppose traversing a recursively-defined data structure, like a tree, is a good example – but it’s telling that good examples of recursive code are so rare that <a href="http://bosker.wordpress.com/2011/04/29/the-worst-algorithm-in-the-world/">shockingly bad examples</a> are often used.

But there is one problem that sometimes comes up, in various guises, for which recursion is the most natural solution. The first time I came across this was at school. We had a network of BBC micros, where you needed a password to log in, so of course I tried to write a simple brute-force password cracker in BBC BASIC so I could find out my friends' passwords. I think the passwords were case-insensitive, and thirteen-year-olds didn't use numbers or funny symbols in their passwords in those days, so I just needed to go through all the possible strings of letters.

I realised it was pretty easy to generate all the words of a particular length, using nested loops. In Python, it would be something like this:

[sourcecode language="python"]
# I hate that Python doesn't let you say 'A' .. 'Z' or something
letters = [ chr(i) for i in range(ord('A'), ord('Z') + 1) ]

def three_letter_words():
  for first_letter in letters:
    for second_letter in letters:
      for third_letter in letters:
        yield first_letter + second_letter + third_letter
[/sourcecode]

and you can easily extend that to any number of letters you like. But wouldn’t it be nice to have a function, perhaps called n_letter_words, that let you specify a length and generated all the words of that length rather than just writing a bunch of different functions for different lengths of word?

I don't think I figured out how to do it at the time, but a year or two later I did realise the trick was recursion. In other words, something like this:

[sourcecode language="python"]
def n_letter_words(n):
   if n == 0:
       yield &quot;&quot;
   else:
       for word in n_letter_words(n-1):
           for letter in letters:
               yield word + letter
[/sourcecode]

Nothing complicated, but it would be a pain without recursion.

I honestly think that's, in essence, the only recursive algorithm I've ever used in day-job code. The problem I had last week was to generate a table of all possible combinations of answers to a series of multiple-choice questions. The real code is in Javascript, but in Python it would look like this:

[sourcecode language="python"]
def combinations_of_answers(questions, answers):
    if not questions:
        yield []
     else:
         questions, question = questions[:-1], questions[-1]
         for row in combinations_of_answers(questions, answers):
             for answer in answers[question]:
                 yield row + [answer]
[/sourcecode]

PS. Of course I'm talking about mainstream programming languages here: Python, Java, C, that sort of thing. I'm not talking about Haskell, because (like almost everyone) I don't actually use it for real work.
<h2>Addendum on Python generators</h2>
Recently I talked about the only recursive function I regularly write, but something about it nagged at me. The example Python code in the post looked simpler than the Javascript code that inspired it, and I wondered why. Most obviously, the Javascript function had an extra argument that wasn’t in the Python version.

In the Python examples, I used generator functions without thinking much of it, because they are the natural way to write that sort of code in Python. What I hadn't consciously realised is that generators are particularly powerful when combined with recursion, and allow a more substantial simplification of the code. When you remove the generators, you find you need an additional function argument, as I had in my Javascript code.

The way I think of generators is that they let you invert the control flow. Instead of writing a function process_each_thing that takes a function argument, and is used like so:

[sourcecode language="python"]
def process_thing(thing):
    &quot;Process the thing&quot;
for_each_thing(process_thing)
[/sourcecode]

you can instead write a generator each_thing that can be used more simply:

[sourcecode language="python"]
for thing in each_thing():
    &quot;Process the thing&quot;
[/sourcecode]

Python’s lack of anonymous functions amplifies the advantage of the generator approach, but there is a straightforward procedure for translating from one style to the other. When you’re using recursion, though, the non-generator version starts to look quite complicated. Let's take the example I used before:

[sourcecode language="python"]
def n_letter_words(n):
    if n == 0:
        yield &quot;&quot;
    else:
        for word in n_letter_words(n-1):
            for letter in letters:
                yield word + letter
[/sourcecode]

and rewrite it without generators, using a function argument instead:

[code]
def for_each_n_letter_word(n, f):
    if n == 0:
        f(&quot;&quot;)
    else:
        def f1(word):
            for letter in letters:
                f(word + letter)
        for_each_n_letter_word(n-1, f1)
[/code]

That isn’t too terrifying, but I would certainly need to ponder for a minute to understand what it was doing. Once you have that, it’s natural to try and replace the recursively-defined nested function with some simpler data structure. In this example each function essentially represents a suffix of the word, so the function argument can be replaced with an ”accumulator” string, as in:

[code]
def print_each_n_letter_word(n, acc=&quot;&quot;):
    if n == 0:
        print acc
    else:
        for letter in letters:
            print_each_n_letter_word(n-1, acc + letter)
[/code]

Which is pretty much the structure of the Javascript code I started with – and now I understand why it needed an extra argument.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>980</wp:post_id>
  <wp:post_date>2010-08-26 11:09:50</wp:post_date>
  <wp:post_date_gmt>2010-08-26 10:09:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>just-occasionally-one-would-be-quite-lost-without-recursion</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[robinhouston]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_1669861</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>3779</wp:comment_id>
    <wp:comment_author><![CDATA[Veky]]></wp:comment_author>
    <wp:comment_author_email>vedgar+py@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://vedgar.googlepages.com</wp:comment_author_url>
    <wp:comment_author_IP>93.136.82.84</wp:comment_author_IP>
    <wp:comment_date>2015-05-27 07:57:28</wp:comment_date>
    <wp:comment_date_gmt>2015-05-27 06:57:28</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[&gt; # I hate that Python doesn't let you say 'A' .. 'Z' or something

Because you have something better.

    from string import ascii_uppercase as letters]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1432709848</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1432709848.896934032440185546875;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1432709848</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>AND-gadget-alone</title>
  <link>https://bosker.wordpress.com/2013/03/13/adrift-is-np-complete/and-gadget-alone/</link>
  <pubDate>Wed, 13 Mar 2013 10:26:21 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/03/and-gadget-alone.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>988</wp:post_id>
  <wp:post_date>2013-03-13 11:26:21</wp:post_date>
  <wp:post_date_gmt>2013-03-13 10:26:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>and-gadget-alone</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>877</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/03/and-gadget-alone.png</wp:attachment_url>
</item>
<item>
  <title>Puzzles like Adrift</title>
  <link>https://bosker.wordpress.com/2013/04/19/puzzles-like-adrift/</link>
  <pubDate>Fri, 19 Apr 2013 10:47:18 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1001</guid>
  <description/>
  <content:encoded><![CDATA[<p>Quite a few people were surprised by my description of Adrift as a “new game” – even though it was very new at the time – because they had seen similar games or puzzles before.</p><p>You can read some of the history <a href="http://en.wikipedia.org/wiki/Numberlink">on Wikipedia</a>: similar puzzles were posed as early as the 19th century, and more recently Big Duck Games released a nice version called <a href="http://app.net/flowfree">Flow Free</a> for Android and iOS.</p><p>This game was the subject of a <a href="http://spivey.oriel.ox.ac.uk/corner/Programming_competition_2012">programming competition</a> at Oxford University last year. The competition was won by Thomas Ahle, with <a href="https://github.com/thomasahle/numberlink">this rather nice program</a>.</p><p>Adrift puzzles are a little bit different, though: they’re on an unusual grid – the surface of half a cube, i.e. three square grids connected at the edges – and also there are rocks, squares you’re not allowed to use.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1001</wp:post_id>
  <wp:post_date>2013-04-19 11:47:18</wp:post_date>
  <wp:post_date_gmt>2013-04-19 10:47:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>puzzles-like-adrift</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[robinhouston]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2967</wp:comment_id>
    <wp:comment_author><![CDATA[bat020]]></wp:comment_author>
    <wp:comment_author_email>bat020@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bat020.com</wp:comment_author_url>
    <wp:comment_author_IP>176.251.37.143</wp:comment_author_IP>
    <wp:comment_date>2013-04-19 12:10:18</wp:comment_date>
    <wp:comment_date_gmt>2013-04-19 11:10:18</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[There's a variation called "Flow Free: Bridges" as well, where one or more squares are marked as "bridges" and have two flows crossing at them, one horizontally and the other "vertically.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>7637156</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1366369818</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1366369818.3044950962066650390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bat020";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-04-19 11:10:18</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2968</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>109.158.247.162</wp:comment_author_IP>
    <wp:comment_date>2013-04-19 12:13:02</wp:comment_date>
    <wp:comment_date_gmt>2013-04-19 11:13:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks! I should have mentioned that. It's the same game, but played on non-planar graphs. I've *nearly* finished it: only a handful of the 14x14s from the Jumbo Pack left. 😀]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2967</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1366369983</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1366369983.2884399890899658203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-04-19 11:13:02</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3121</wp:comment_id>
    <wp:comment_author><![CDATA[William Schlieper]]></wp:comment_author>
    <wp:comment_author_email>was3@math.ucla.edu</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>164.67.210.163</wp:comment_author_IP>
    <wp:comment_date>2013-08-26 04:09:48</wp:comment_date>
    <wp:comment_date_gmt>2013-08-26 03:09:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[There's a Flash version called "3D Logic" that also plays on half the surface of a cube.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1377486588</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1377486588.397450923919677734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-26 03:09:48</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>A theory of patches</title>
  <link>https://bosker.wordpress.com/?p=1020</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1020</guid>
  <description/>
  <content:encoded><![CDATA[Last year I wrote here – <a href="http://bosker.wordpress.com/2012/05/10/on-editing-text/">On editing text</a> – about a mathematical model of collaborative editing or version control. The main idea was to represent the operation of merging two edits with a mathematical structure called a pushout; it is then possible to describe a framework in which <em>every</em> pair of edits has a natural merge, so there are no conflicts, at the expense of allowing non-linear documents.

Now Samuel Mimram and Cinzia Di Giusto have released a new pre-print – <a href="http://www.pps.univ-paris-diderot.fr/~smimram/docs/mimram_ctp.pdf">A Categorical Theory of Patches</a> – exploring the same idea in a slightly different way. I’m excited about that. It’s great to see this idea getting some attention from the academic community. The rest of this post is a short tour of the similarities and differences between their set-up and mine.

I’ll refer to the category described in my post as H, which is the first letter of my last name. For ease of comparison we’ll take that to be the most general version, whose objects are finite sets equipped with a transitive relation. The category of Mimram and Di Giusto I’ll call MDG, for obvious reasons.

The immediate difference is that the categories have different types of object. In H the objects are “document shapes”, whereas in MDG they are actual documents. In H, documents are represented by arrows $latex \varepsilon \rightarrow S$ where $latex \varepsilon$ is the empty document; so the category of elements $latex \varepsilon\downarrow H$ is more directly comparable with MDG. Let’s call this category DocH for short.

This subtle definitional difference has an effect when we think about cocompleteness properties of the categories. For example, MDG and DocH have zero objects, whereas H does not have an initial object. ($latex \varepsilon$ is a terminal object, and weakly initial.)

I’m not sure why Mimram and Di Giusto chose to set things up this way. Their paper does not explain. It leads to some curious pathologies when they add pushouts, which I suspect would be avoided if they had started with a category where documents are represented by global elements, rather than by objects.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1020</wp:post_id>
  <wp:post_date>2013-04-21 23:30:53</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Linear Logic without Units</title>
  <link>https://bosker.wordpress.com/2013/05/10/linear-logic-without-units/</link>
  <pubDate>Fri, 10 May 2013 00:03:34 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1026</guid>
  <description/>
  <content:encoded><![CDATA[My PhD thesis (2007) was available for several years from my web site at the University of Manchester, but since that site was taken down it’s been unavailable. Today’s announcement is that I’ve finally got round to <a href="https://github.com/robinhouston/linear-logic-without-units">uploading it to GitHub</a>.

<!--more-->I’ve also submitted it to the arXiv, where it <a href="http://arxiv.org/abs/1305.2231">is now available</a>.

I think this extract from the introduction goes some way to conveying the flavour of the thing, i.e. that the overall approach is pretty abstract even by the standards of abstract mathematics, let alone computer science.
<blockquote>
<div title="Page 14">
<div>
<div>

In fact there is nothing particularly special about promonoidal categories in an abstract sense. They are but one example of the general notion of pseudomonoid in a monoidal bicategory, and we expect (and shall prove) that much of what is known about monoidal categories in particular is actually true of pseudomonoids in general, when formulated appropriately. Furthermore, when considering structures internal to a monoidal bicategory there is nothing particularly special about pseudomonoids! The translation procedure can in fact be carried through for a substantial class of structures internal to a monoidal bicategory.

</div>
</div>
</div></blockquote>
But there are some more concrete descriptions near the end, and if you should happen to be interested in models of multiplicative linear logic without units – admittedly a fairly niche topic – then I reckon it’s worth a look, even if I do say so myself.

It looks like I used to be <a href="https://github.com/robinhouston/linear-logic-without-units/blob/master/braids.sty">a pretty ninja TeX programmer</a>, as well!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1026</wp:post_id>
  <wp:post_date>2013-05-10 01:03:34</wp:post_date>
  <wp:post_date_gmt>2013-05-10 00:03:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>linear-logic-without-units</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[robinhouston]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Subset sum reconfiguration</title>
  <link>https://bosker.wordpress.com/?p=1055</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1055</guid>
  <description/>
  <content:encoded><![CDATA[}]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1055</wp:post_id>
  <wp:post_date>2013-07-03 22:01:26</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>“Venn diagram” partitioning</title>
  <link>https://bosker.wordpress.com/2013/07/10/venn-diagram-partitioning/</link>
  <pubDate>Wed, 10 Jul 2013 09:48:09 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1056</guid>
  <description/>
  <content:encoded><![CDATA[Paddy3118 <a href="http://paddy3118.blogspot.co.uk/2013/07/set-divisionspartitions.html">wrote about partitioning elements</a> in the same way a Venn diagram does. So, if we have sets <em>A</em>, <em>B</em> and <em>C</em>, the partitions are

<img class="size-full wp-image aligncenter" id="i-1063" alt="Image" src="http://bosker.files.wordpress.com/2013/07/venn.png?w=275" />

<!--more-->These partitions can be organised in a table according to whether each of <em>A</em>, <em>B</em> and <em>C</em> is included or excluded:
<table class=" aligncenter">
<tbody>
<tr>
<th><i>A</i>&nbsp;&nbsp;</th>
<th><i>B</i>&nbsp;&nbsp;</th>
<th><i>C</i>&nbsp;&nbsp;&nbsp;&nbsp;</th>
<th>partition</th>
</tr>
<tr>
<td>1</td>
<td>0</td>
<td>0</td>
<td>&nbsp;<i>A</i>-(<em>B</em>∪<em>C</em>)</td>
</tr>
<tr>
<td>0</td>
<td>1</td>
<td>0</td>
<td>&nbsp;<i>B</i>-(<em>A</em>∪<em>C</em>)</td>
</tr>
<tr>
<td>1</td>
<td>1</td>
<td>0</td>
<td>&nbsp;(<em>A</em>∩<em>B</em>)-<em>C</em></td>
</tr>
<tr>
<td>0</td>
<td>0</td>
<td>1</td>
<td>&nbsp;<em>C</em>-(<em>A</em>∪<em>B</em>)</td>
</tr>
<tr>
<td>1</td>
<td>0</td>
<td>1</td>
<td>&nbsp;(<em>A</em>∩<em>C</em>)-<em>B</em></td>
</tr>
<tr>
<td>0</td>
<td>1</td>
<td>1</td>
<td>&nbsp;(<em>B</em>∩<em>C</em>)-<em>A</em></td>
</tr>
<tr>
<td>1</td>
<td>1</td>
<td>1</td>
<td>&nbsp;<em>A</em>∩<em>B</em>∩<em>C</em></td>
</tr>
</tbody>
</table>
and the question is how to write a function that will return this sequence of partitions. Paddy3118 writes it like this:

[code lang="python"]def venndiv(*sets):
    bins = tuple(set() for n in range(2**len(sets)))
    for i, si in enumerate(sets): # Over every individual item of each set
        for item in si:
            binindex = 0
            for j, sj in enumerate(sets): # Test for membership of each set
                if item in sj:
                    binindex += 2**j # Binary count binning
            bins[binindex].add(item)
    return bins[1:] # bins[0] - an item in no set is impossible.[/code]

which is perfectly good: the explicit manipulation of index numbers is a little inelegant, perhaps. This post describes a different, pleasingly simple, way to express the <code>venndiv</code> function.

The first thing to notice is that there is a systematic way to build up the partitions by starting with <em>A</em>∪<em>B</em>∪<em>C</em> and taking intersections and differences with <em>A</em>, <em>B</em> and <em>C</em>. Where there is a 1 in the table, take an intersection with that set, and where there is a 0 subtract that set. You can do these steps in any order. Here is the table again, with systematic expressions included:
<table class=" aligncenter">
<tbody>
<tr>
<th><i>A</i>&nbsp;&nbsp;</th>
<th><i>B</i>&nbsp;&nbsp;</th>
<th><i>C</i>&nbsp;&nbsp;&nbsp;&nbsp;</th>
<th>partition&nbsp;&nbsp;</th>
<th>systematic</th>
</tr>
<tr>
<td>0</td>
<td>0</td>
<td>0</td>
<td>&nbsp;∅</td>
<td>&nbsp;(((<em>A</em>∪<em>B</em>∪<em>C</em>) - <em>C</em>) - <em>B</em>) - <em>A</em></td>
</tr>
<tr>
<td>1</td>
<td>0</td>
<td>0</td>
<td>&nbsp;<i>A</i>-(<em>B</em>∪<em>C</em>)</td>
<td>&nbsp;(((<em>A</em>∪<em>B</em>∪<em>C</em>) - <em>C</em>) - <em>B</em>) ∩ <em>A</em></td>
</tr>
<tr>
<td>0</td>
<td>1</td>
<td>0</td>
<td>&nbsp;<i>B</i>-(<em>A</em>∪<em>C</em>)</td>
<td>&nbsp;(((<em>A</em>∪<em>B</em>∪<em>C</em>) - <em>C</em>) ∩ <em>B</em>) - <em>A</em></td>
</tr>
<tr>
<td>1</td>
<td>1</td>
<td>0</td>
<td>&nbsp;(<em>A</em>∩<em>B</em>)-<em>C</em></td>
<td>&nbsp;(((<em>A</em>∪<em>B</em>∪<em>C</em>) - <em>C</em>) ∩ <em>B</em>) ∩ <em>A</em></td>
</tr>
<tr>
<td>0</td>
<td>0</td>
<td>1</td>
<td>&nbsp;<em>C</em>-(<em>A</em>∪<em>B</em>)</td>
<td>&nbsp;(((<em>A</em>∪<em>B</em>∪<em>C</em>) ∩ <em>C</em>) - <em>B</em>) - <em>A</em></td>
</tr>
<tr>
<td>1</td>
<td>0</td>
<td>1</td>
<td>&nbsp;(<em>A</em>∩<em>C</em>)-<em>B</em></td>
<td>&nbsp;(((<em>A</em>∪<em>B</em>∪<em>C</em>) ∩ <em>C</em>) - <em>B</em>) ∩ <em>A</em></td>
</tr>
<tr>
<td>0</td>
<td>1</td>
<td>1</td>
<td>&nbsp;(<em>B</em>∩<em>C</em>)-<em>A</em></td>
<td>&nbsp;(((<em>A</em>∪<em>B</em>∪<em>C</em>) ∩ <em>C</em>) ∩ <em>B</em>) - <em>A</em></td>
</tr>
<tr>
<td>1</td>
<td>1</td>
<td>1</td>
<td>&nbsp;<em>A</em>∩<em>B</em>∩<em>C</em></td>
<td>&nbsp;(((<em>A</em>∪<em>B</em>∪<em>C</em>) ∩ <em>C</em>) ∩ <em>B</em>) ∩ <em>A</em></td>
</tr>
</tbody>
</table>

So we can build the partitions starting with the <i>C</i>’s, then the <i>B</i>’s and then the <i>A</i>’s, like this:
<a href="http://bosker.files.wordpress.com/2013/07/venn-tree.png"><img src="http://bosker.files.wordpress.com/2013/07/venn-tree.png" alt="venn-tree" width="480" height="197" class="aligncenter size-full wp-image-1085" /></a>

The bottom row has all the partitions, in the right order. So our algorithm is: make a recursive call to fetch the second-to-last row, then split each bin into (bin - A) and (bin ∩ A). In Python:

[code lang="python" gutter="false"]def venndiv(*sets):
    def vd(x, *xs):
        bins = vd(*xs) if xs else (set.union(*sets),)
        return sum(tuple( (bin - x, bin &amp; x) for bin in bins ), ())
    return vd(*sets)[1:][/code]

Or maybe it’s clearer as a loop, rather than a recursive function:

[code lang="python" gutter="false"]def venndiv(*sets):
    bins = ( set.union(*sets), )
    for x in reversed(sets):
        bins = sum(tuple( (bin - x, bin &amp; x) for bin in bins ), ())
    return bins[1:]
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1056</wp:post_id>
  <wp:post_date>2013-07-10 10:48:09</wp:post_date>
  <wp:post_date_gmt>2013-07-10 09:48:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>venn-diagram-partitioning</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="algorithms"><![CDATA[algorithms]]></category>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:5705;i:556;}s:2:"wp";a:1:{i:0;i:22;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[robinhouston]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_1669861</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>venn</title>
  <link>https://bosker.wordpress.com/venn/</link>
  <pubDate>Tue, 09 Jul 2013 07:02:20 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/07/venn.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1063</wp:post_id>
  <wp:post_date>2013-07-09 08:02:20</wp:post_date>
  <wp:post_date_gmt>2013-07-09 07:02:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>venn</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/07/venn.png</wp:attachment_url>
</item>
<item>
  <title>venn-tree</title>
  <link>https://bosker.wordpress.com/2013/07/10/venn-diagram-partitioning/venn-tree/</link>
  <pubDate>Wed, 10 Jul 2013 09:24:42 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/07/venn-tree.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1085</wp:post_id>
  <wp:post_date>2013-07-10 10:24:42</wp:post_date>
  <wp:post_date_gmt>2013-07-10 09:24:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>venn-tree</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1056</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/07/venn-tree.png</wp:attachment_url>
</item>
<item>
  <title>The algebra of Unix command substitution</title>
  <link>https://bosker.wordpress.com/2013/08/16/using-group-theory-to-understand-unix-command-substitution/</link>
  <pubDate>Fri, 16 Aug 2013 22:28:40 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1108</guid>
  <description/>
  <content:encoded><![CDATA[Shadab Ahmed <a href="http://shadabahmed.com/blog/2013/08/16/bang-bang">raised an interesting question</a>. Open a Unix command shell, type <code>: '!!'</code> and press return. Then type <code>: "!!" '!!'</code> and press return. Now repeat the following a few times: press the up arrow, and press return.

<!--more-->

The result will be something like this:
<pre>bash$ : '!!'
bash$ : "!!" '!!'
: ": '!!'" '!!'
bash$ : ": '!!'" '!!'
: ": ': ": '!!'" '!!''" '!!'
bash$ : ": ': ": '!!'" '!!''" '!!'
: ": ': ": '!!'" ': ": ': ": '!!'" '!!''" '!!'''" '!!'</pre>
producing ever-lengthening strings. The first one has two occurrences of <code>!!</code>, the next has three, the next has five, etc. But these are not Fibonacci numbers! The sequence continues:

2, 3, 5, 17, 161, 15681, …

The shell substitutes each occurrence of <code>!!</code> for the previous command, unless it is inside single quotes.

So, what is the pattern? Can we predict how many there will be after <i>n</i> steps? I checked the <a href="http://oeis.org/">OEIS</a> and the sequence wasn’t there, so I knew it wasn’t something straightforward. Actually computing the strings becomes intractable after a couple more terms, because the sequence grows so rapidly. But there is a way to calculate the sequence.

We need to somehow keep track of whether each occurrence of <code>!!</code> is inside single quotes, so we can tell whether it is going to be expanded. Not only that! We need to be able to track how this changes after a substitution has been performed. The solution is to use the symmetric group S<sub>3</sub>, the group of all permutations of three things. The three things in this case are quotation states: 0=unquoted, 1=single-quoted, and 2=double-quoted. For example, the string <code>'"'</code> has the effect of swapping the single- and double-quoted states, so we would represent it as the permutation (1 2). The quote characters <code>'</code> and <code>"</code> correspond to the swaps (0 1) and (0 2), which generate S<sub>3</sub>, so all six permutations can be represented by some string. Given a string, we can work out its permutation by doing the appropriate swap for each quote character and composing them: for example, the string <code>"'"'</code> is (0 2)(0 1)(0 2)(0 1) = (0 1 2).

Now we can represent a string containing <code>!!</code> codes as a polynomial with exponents from S<sub>3</sub>. (We’re using the group semiring $latex \mathbb{N}[\mathrm{S}_3]$, for the mathematicians in the house.) The coefficients represent the number of occurrences of <code>!!</code> in each quotation state. We’ll assume that the quotes in the string are balanced eventually, i.e. that the entire string gives the identity permutation.

Let’s look at some examples. The string <code>: '!!'</code> has one occurrence of <code>!!</code>, and the string preceding that occurrence is <code>: '</code> which has type (0 1), so the polynomial is just <i>x</i><sup>(0 1)</sup>. The next string in the sequence is <code>: "!!" '!!'</code>, which has one occurrence of type (0 1) and one of type (0 2), so the polynomial is <i>x</i><sup>(0 1) </sup>+ <i>x</i><sup>(0 2)</sup>.

The next one is <code>: ": '!!'" '!!'</code>, which is <i>x</i><sup>(0 2 1)</sup> + <i>x</i><sup>(0 1)</sup>.

Now, what happens when substitution is performed? Remember that the single-quoted occurrences of <code>!!</code> are not substituted, so we need to separate the polynomial into the part that undergoes substitution and the part that does not. The part that does not is the <i>x</i><sup>(0 1)</sup> and <i>x</i><sup>(0 1 2)</sup> terms, and the part that does is the other four terms. Let’s say we have a string represented by <i>f</i>(<i>x</i>), and we are going to replace its non-single-quoted occurrences of <code>!!</code> by the string represented by <i>g</i>(<i>x</i>). First we separate <i>f</i> into <i>f</i><sub>1</sub>(<i>x</i>) + <i>f</i><sub>2</sub>(<i>x</i>), where <i>f</i><sub>1</sub> is the substitutable part and <i>f</i><sub>2</sub> is the single-quoted part. Then the result of the substitution is represented by <i>f</i><sub>1</sub>(<i>x</i>) <i>g</i>(<i>x</i>) + <i>f</i><sub>2</sub>(<i>x</i>).

We can check this against the example. We are going to substitute <code>: '!!'</code> into <code>: "!!" '!!'</code>, so we have <i>f</i><sub>1</sub>(<i>x</i>) = <i>x</i><sup>(0 2)</sup>, <i>f</i><sub>2</sub>(<i>x</i>) = <i>x</i><sup>(0 1)</sup>, and <i>g</i>(<i>x</i>) = <i>x</i><sup>(0 1)</sup>. The result is <i>f</i><sub>1</sub>(<i>x</i>) <i>g</i>(<i>x</i>) + <i>f</i><sub>2</sub>(<i>x</i>) = (<i>x</i><sup>(0 2)</sup>)(<i>x</i><sup>(0 1)</sup>) + <i>x</i><sup>(0 1)</sup> = <i>x</i><sup>(0 2)(0 1)</sup> + <i>x</i><sup>(0 1)</sup> = <i>x</i><sup>(0 2 1)</sup> + <i>x</i><sup>(0 1)</sup>, which is the same polynomial we computed directly. Phew!

This already gives a reasonably efficient algorithm, because there are only six coefficients to keep track of at each step. So the sequence of polynomials begins like this:

<i>x</i><sup>(0 1)</sup>
<i>x</i><sup>(0 2)</sup> + <i>x</i><sup>(0 1)</sup>
<i>x</i><sup>(0 2 1)</sup> + <i>x</i><sup>(0 1)</sup>

Because of the way shell command expansion works, at subsequent steps the command is substituted into itself: pressing up-arrow and then return reissues the previous command, after all, so as far as the shell is concerned the current command is the same as the previous one. So from here on we combine each polynomial with itself to get the next one, and the next in the sequence is:

<i>x</i><sup>(0 2 1)</sup>(<i>x</i><sup>(0 2 1)</sup> + <i>x</i><sup>(0 1)</sup>) + <i>x</i><sup>(0 1)</sup>
= <i>x</i><sup>(0 2 1)(0 2 1)</sup> + <i>x</i><sup>(0 2 1)(0 1)</sup> + <i>x</i><sup>(0 1)</sup>
= <i>x</i><sup>(0 1 2)</sup> + <i>x</i><sup>(0 2)</sup> + <i>x</i><sup>(0 1)</sup>.

Add up the coefficients to find the total number of <code>!!</code> occurrences in the string: three, in this case.

Continuing in the same way, we get:
<i>x</i><sup>()</sup> + <i>x</i><sup>(1 2)</sup> + <i>x</i><sup>(2 1 0)</sup> + <i>x</i><sup>(0 1)</sup> + <i>x</i><sup>(0 1 2)</sup>
and then:
3<i>x</i><sup>()</sup> + 2<i>x</i><sup>(0 2)</sup> + 2<i>x</i><sup>(1 2)</sup> + 2<i>x</i><sup>(2 1 0)</sup> + 4<i>x</i><sup>(0 1)</sup> + 4<i>x</i><sup>(0 1 2)</sup>.
followed by
25<i>x</i><sup>()</sup> + 24<i>x</i><sup>(0 2)</sup> + 24<i>x</i><sup>(1 2)</sup> + 24<i>x</i><sup>(2 1 0)</sup> + 32<i>x</i><sup>(0 1)</sup> + 32<i>x</i><sup>(0 1 2)</sup>.
and then
2545<i>x</i><sup>()</sup> + 2544<i>x</i><sup>(0 2)</sup> + 2544<i>x</i><sup>(1 2)</sup> + 2544<i>x</i><sup>(2 1 0)</sup> + 2752<i>x</i><sup>(0 1)</sup> + 2752<i>x</i><sup>(0 1 2)</sup>.

This is interesting! A pattern seems to be developing. It looks as though our polynomials all have the form

<i>x</i><sup>()</sup> + p(<i>x</i><sup>()</sup> + <i>x</i><sup>(0 2)</sup> + <i>x</i><sup>(1 2)</sup> + <i>x</i><sup>(2 1 0)</sup>) + q(<i>x</i><sup>(0 1)</sup> + <i>x</i><sup>(0 1 2)</sup>)

for some numbers p and q, which neatly separates the substitutable part from the single-quoted part. Let’s define

α = <i>x</i><sup>()</sup> + <i>x</i><sup>(0 2)</sup> + <i>x</i><sup>(1 2)</sup> + <i>x</i><sup>(2 1 0)</sup>
β = <sup>(0 1)</sup> + <i>x</i><sup>(0 1 2)</sup>

so we can write these polynomials as <i>x</i><sup>()</sup> + pα + qβ. If we could show that (<i>x</i><sup>()</sup> + pα)(<i>x</i><sup>()</sup> + pα + qβ) + qβ has the same form, then we know the pattern will continue for ever. Indeed this works! If you multiply out α<sup>2</sup> and αβ, then you find that α<sup>2</sup> = 3α + 2β and αβ = α + 2β, so we get

(<i>x</i><sup>()</sup> + pα)(<i>x</i><sup>()</sup> + pα + qβ) + qβ
= <i>x</i><sup>()</sup> + pα + qβ + pα + p<sup>2</sup>α<sup>2</sup> + pqαβ + qβ
= <i>x</i><sup>()</sup> + 2pα + 2qβ + p<sup>2</sup>(3α + 2β) + pq(α + 2β)
= <i>x</i><sup>()</sup> + (3p<sup>2</sup>+2p+pq)α + (2p<sup>2</sup>+2pq+2q)β

Thus we can continue the sequence using the recurrence relation

p(n+1) = 3p(n)<sup>2</sup> + 2p(n) + p(n)q(n)
q(n+1) = 2p(n)<sup>2</sup> + 2p(n)q(n) + 2q(n)

with base case p(4) = 2, q(4) = 4, and the number of occurrences of <code>!!</code> at the nth step (for n≥4) is 4p(n)+2q(n)+1.

Now it’s easy to write a program to compute the values:

[code gutter="false" lang="python"]
p, q = 2, 4
for i in range(4, 16):
    print&quot;%d: %d&quot; % (i, 4*p + 2*q + 1)
    p,q = 3*p*p + 2*p + p*q, 2*p*p + 2*p*q + 2*q
[/code]


Here are the next few:

[code gutter="false"]
4: 17
5: 161
6: 15681
7: 159591041
8: 16866847940875521
9: 189345699699803478502456213711361
10: 23891282133830642364466494435428811321279341197321685846692090881
11: 380489448557681961464558753339232227165919630391472190371135637819686949421263314703894423845640377201176155204913969665095280641
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1108</wp:post_id>
  <wp:post_date>2013-08-16 23:28:40</wp:post_date>
  <wp:post_date_gmt>2013-08-16 22:28:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>using-group-theory-to-understand-unix-command-substitution</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:5705;i:571;}s:2:"wp";a:1:{i:0;i:26;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[robinhouston]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_1669861</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a06101e0a92fc90d076894efe673aed4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_48348316e61e785df2edca920e0fb3a9</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_53646dd235c5a2d26fbd9afda96d6b1a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f7c99007d45a817717a9ae5a6f606a31</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8aa12ce8dbf63a95b93205eeee398c7f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7716c563ee1c086d4c43a5c7f0f077d1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f8a7a9c96da4350ddd2063227cb09139</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2c0417190f2b0df666f498f6d9e9163c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b722c5f8fcfdcf91c6d999331f1e584f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>3071</wp:comment_id>
    <wp:comment_author><![CDATA[Volker Grabsch]]></wp:comment_author>
    <wp:comment_author_email>v@njh.eu</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>79.201.211.210</wp:comment_author_IP>
    <wp:comment_date>2013-08-17 09:40:43</wp:comment_date>
    <wp:comment_date_gmt>2013-08-17 08:40:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[On OEIS, Joerg Arndt asks whether we could add a formula.

https://oeis.org/history?seq=A228162

Robin, would you mind engaging in this process? (Just register for an account on OEIS, then you can propose changes to every sequence entry including this one.)

Also, there are interesting related sequences, see the "CROSSREFS" section on OEIS:

https://oeis.org/A228162]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376728843.128159999847412109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376728843</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-17 08:40:43</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3070</wp:comment_id>
    <wp:comment_author><![CDATA[Volker Grabsch]]></wp:comment_author>
    <wp:comment_author_email>v@njh.eu</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>79.201.211.210</wp:comment_author_IP>
    <wp:comment_date>2013-08-17 08:25:10</wp:comment_date>
    <wp:comment_date_gmt>2013-08-17 07:25:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[The OEIS entry has been approved!

https://oeis.org/A228162]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3068</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376724312</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376724313.1506741046905517578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-17 07:25:10</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3097</wp:comment_id>
    <wp:comment_author><![CDATA[paddy3118]]></wp:comment_author>
    <wp:comment_author_email>paddy3118@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>82.46.4.230</wp:comment_author_IP>
    <wp:comment_date>2013-08-20 19:26:48</wp:comment_date>
    <wp:comment_date_gmt>2013-08-20 18:26:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[THanks! I liked it so much, I looked around for something I could do on the topic and decided to write a minimal bash shell simulator in Python. Just enough to generate successive terms.

It works, but not very efficiently. The code is on my blog here: http://paddy3118.blogspot.co.uk/2013/08/recursive-unix-bang-bang-in-python.html]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>1809393</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1377023209</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1377023210.1222569942474365234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"paddy3118";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-20 18:26:48</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3073</wp:comment_id>
    <wp:comment_author><![CDATA[Growth of recursive string substitution | Complex Projective 4-Space]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://cp4space.wordpress.com/2013/08/18/growth-of-recursive-string-substitution/</wp:comment_author_url>
    <wp:comment_author_IP>66.155.8.66</wp:comment_author_IP>
    <wp:comment_date>2013-08-18 17:25:37</wp:comment_date>
    <wp:comment_date_gmt>2013-08-18 16:25:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] in the sequence and creating an OEIS entry for the number of bangbangs in the nth iteration. Robin Houston then ingeniously used polynomials with exponents in the symmetric group to contain the information [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376843138</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376843139.4118559360504150390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-18 16:25:37</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3068</wp:comment_id>
    <wp:comment_author><![CDATA[Volker Grabsch]]></wp:comment_author>
    <wp:comment_author_email>v@njh.eu</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>62.224.85.11</wp:comment_author_IP>
    <wp:comment_date>2013-08-17 01:11:59</wp:comment_date>
    <wp:comment_date_gmt>2013-08-17 00:11:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I submitted this sequence to the OEIS. Here is the draft that waits for review:

https://oeis.org/draft/A228162]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376698321</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376698322.436625003814697265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-17 00:11:59</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3072</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.141.140.38</wp:comment_author_IP>
    <wp:comment_date>2013-08-17 09:45:32</wp:comment_date>
    <wp:comment_date_gmt>2013-08-17 08:45:32</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Okay, I’ve applied for an account.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3071</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376729132.8697509765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376729132</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-17 08:45:32</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>I hate the Pumping Lemma</title>
  <link>https://bosker.wordpress.com/2013/08/18/i-hate-the-pumping-lemma/</link>
  <pubDate>Sun, 18 Aug 2013 20:09:03 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1152</guid>
  <description/>
  <content:encoded><![CDATA[I hate the Pumping Lemma for regular languages. It’s a complicated way to express an idea that is fundamentally very simple, and it isn’t even a very good way to prove that a language is not regular.

Here it is, in all its awful majesty: for every regular language L, there exists a positive whole number <i>p</i> such that every string <i>w</i>∈L that has <i>p</i> characters or more can be broken down into three substrings <i>xyz</i>, where <i>y</i> is not the empty string and the total length of <i>xy</i> is at most <i>p</i>, and for every natural number <i>i</i> the string <i>xy<sup>i</sup>z</i> is also in L.
<!--more-->
Did you understand that statement? I’d be willing to bet you didn’t, if you haven’t seen it before. It has a ferociously intimidating logical structure, with no fewer than <b>five</b> alternating quantifiers: “for every L … there exists <i>p</i> … such that for every <i>w</i> … there exist <i>x</i>, <i>y</i> and <i>z</i> … such that for every <i>i</i> …”. Beginning students of analysis are apt to struggle with the definition of continuity, because it takes a while to get used to having two nested quantifiers: for every epsilon &gt; 0 there exists a delta &gt; 0, etc. If two are a struggle, five is cruelty.

The real insult is that the actual underlying idea, and the proof, is shockingly simple. It is essentially the pigeonhole principle: the principle that if you put more than <i>n</i> pigeons into <i>n</i> holes then there must be a hole with more than one pigeon in. Take the regular language L, and express it as a deterministic finite automaton with <i>p</i> states. Any string in L determines a path through the automaton; so any string with <i>p</i> or more characters must visit the same state twice, forming a loop. This looped part can be repeated any arbitrary number of times to produce other strings in L.

If you understand the idea, it is easy to write down the incomprehensible formal statement of it. If you do not, the formal statement is not likely to lead you to enlightenment.

But the world is full of ways to express simple ideas in complicated ways. Why is this particular one foisted upon Computer Science students? Because it is used to show that some languages are not regular, which is important both in theory <a href="http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454">and in practice</a>.

This leads to the second reason for my distaste for the Accursed Lemma: there are better ways to prove non-regularity, which are more powerful and give more insight into the nature of regularity, and which are more straightforward to state: they are omitted from the typical undergraduate curriculum, presumably because by the time the poor students have understood the hideous Pumping Lemma, there is no time left.

Here is my favourite: one might call it the Myhill-Nerode Theorem à la Brzozowski. Brzozowski invented the marvellous idea of <i>differentiating</i> formal languages. Let L be a language: not necessarily a regular language, just any set of strings; let <i>w</i> be a string, not necessarily in L. Then the derivative d/dw (L) is the language { v | wv ∈ L }.

For example, if L is the set of English words then d/d‘w’ (L) is the words that start with ‘w’, with the ‘w’ removed. So it contains such strings as “ord” and “hy” and “ibble”, and even “anker”.

It’s easy enough to see that any derivative of a regular language is again regular: taking a derivative just corresponds to changing the start state in a deterministic automaton. By the same argument, any regular language has only a finite number of different derivatives.

The really good thing is that it works the other way round as well: if a language has only a finite number of different derivatives, then it is regular; if it has infinitely many, it is not. Again the proof is easy: given a language L with a finite number of different derivatives, form a deterministic automaton with a state for each derivative. Put an edge labelled ‘x’ from A to B just when d/d‘x’ (A) = B. The start state is L itself, and any derivative that contains the empty string is marked as an accepting state.

So this condition completely characterises the regular languages, unlike the Pumping Lemma. There are <a href="http://en.wikipedia.org/wiki/Pumping_lemma_for_regular_languages#Converse_of_lemma_not_true">non-regular languages that are nevertheless pumpable</a>, but they will still have infinitely many different derivatives.

In practice it is usually easy to use, as well. Take the classic example of L = { a<sup>i</sup>b<sup>i</sup> | i ∈ $latex \mathbb{N}$ }. Clearly d/d(a<sup>n</sup>)(L) = { a<sup>i</sup>b<sup>n+i</sup> | i ∈ $latex \mathbb{N}$ } for all n, and these are all different, so there are infinitely many derivatives and L cannot be regular.

Just to rub in how this is better than the Pumping Lemma, let’s look at the example from Wikipedia of a language where the Pumping Lemma fails. It is L = A∪B∪C, over the alphabet {0,1,2,3}, where A is the strings that contain a doubled digit (00, 11, 22, 33), B is the strings that somewhere in them have the same digit twice with another digit in between (010, 020, 030, 101, 121, etc.); and C is the strings precisely 1/7 of whose digits are 3s.

We can express C as { w∈{0,1,2,3}<sup>*</sup> | n<sub>{0,1,2}</sub>(w) = 6 n<sub>{3}</sub>(w) }. Here I am writing n<sub>S</sub>(w) to mean the number of characters of w that belong to S, where S is a subset of the alphabet.

Now for every natural number i, let’s compute d/d((0123)<sup>i</sup>)(C): it is

{ w∈{0,1,2,3}<sup>*</sup> | n<sub>{0,1,2}</sub>((0123)<sup>i</sup>w) = 6 n<sub>{3}</sub>((0123)<sup>i</sup>w) }
= { w∈{0,1,2,3}<sup>*</sup> | 3i + n<sub>{0,1,2}</sub>(w) = 6i + 6 n<sub>{3}</sub>(w) }
= { w∈{0,1,2,3}<sup>*</sup> | n<sub>{0,1,2}</sub>(w) = 3i + 6 n<sub>{3}</sub>(w) }

These languages are all different, because for example for each i you can see that d/d((0123)<sup>i</sup>)(C) contains the string (012)<sup>i</sup>, but none of the others do. What is more, none of the strings (012)<sup>i</sup> are in any d/d((0123)<sup>k</sup>)(A∪B), therefore d/d((0123)<sup>i</sup>)(L) contains (012)<sup>j</sup> just when i=j, hence L has infinitely many derivatives and is not regular.

<hr>
<small>PS. I don’t have anything against the pumping lemma for context-free languages.

PPS. This is not a complaint about my own education. I was taught finite automata by an enlightened lecturer who explained the simple idea behind the Pumping Lemma clearly and briefly, and had the good taste not to state it formally. It is driven rather by compassion for those less fortunate.</small>

<hr>
<b>Update</b>: For a dissenting view, see <a href="http://blog.computationalcomplexity.org/2013/09/myhill-nerode-versus-pumping-lemma.html">this post by Lance Fortnow</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1152</wp:post_id>
  <wp:post_date>2013-08-18 21:09:03</wp:post_date>
  <wp:post_date_gmt>2013-08-18 20:09:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>i-hate-the-pumping-lemma</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[robinhouston]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:5705;i:572;}s:2:"wp";a:1:{i:0;i:26;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_1669861</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c79fb7164025f182af8b961cae7c915f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_ee23568be6b44ac2b8f8791994c32b4f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_93b309d0a73b9bbd068373ed8bb6ba92</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2389366179e90770534f30fd12fb40c7</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_688a5d21ae9a486000045a6923210dc0</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d46a43f2ef3392d53ccbd3f2e366723e</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b86405b096741f69d108895783faf450</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6213b2cccf99108c573e10f80a3e9f80</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e8f4a5514eb3fe4f993156a2001ea5d6</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e9932276eec0ddee8b198b3bece096dd</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2bf1cb623dad2912b1343f729e4018c2</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4b01aa6d04c9ac4593b086ebefa6fad0</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8f9e80e2e477a6af2dae72570c084090</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>3076</wp:comment_id>
    <wp:comment_author><![CDATA[ceyhuncanu]]></wp:comment_author>
    <wp:comment_author_email>ceyhuncanu@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/ceyhuncanu</wp:comment_author_url>
    <wp:comment_author_IP>88.246.136.250</wp:comment_author_IP>
    <wp:comment_date>2013-08-18 22:37:12</wp:comment_date>
    <wp:comment_date_gmt>2013-08-18 21:37:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yup, sorry. It seems I missed "_more than_" part. :-) I am having hard time understanding what I read these days.

By the way, forgot to mention this is a real nice article, explaining such a hard-to-digest topic.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3075</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376861832.5521500110626220703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"ceyhuncanu";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376861832</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-18 21:37:12</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3101</wp:comment_id>
    <wp:comment_author><![CDATA[eppstein]]></wp:comment_author>
    <wp:comment_author_email>david.eppstein@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>169.234.30.82</wp:comment_author_IP>
    <wp:comment_date>2013-08-21 01:26:50</wp:comment_date>
    <wp:comment_date_gmt>2013-08-21 00:26:50</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Perhaps, in your zeal to find this argument non-obvious, you missed the sentence "But p(x) can be arbitrarily large." Therefore there are infinitely many distinct values of p and infinitely many distinct derivatives.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3092</wp:comment_parent>
    <wp:comment_user_id>10499271</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1377044810</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1377044810.262175083160400390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"eppstein";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-21 00:26:50</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3102</wp:comment_id>
    <wp:comment_author><![CDATA[Mark]]></wp:comment_author>
    <wp:comment_author_email>mark.mercer@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>70.52.23.190</wp:comment_author_IP>
    <wp:comment_date>2013-08-21 03:09:01</wp:comment_date>
    <wp:comment_date_gmt>2013-08-21 02:09:01</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes, you are right. Sorry. Quite dense of me not to see that.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3092</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1377050942</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1377050942.34673595428466796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-21 02:09:01</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3104</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Tsai - Blog - The Pumping Lemma, The Pigeonhole Principle, and Differentiating Languages]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://mjtsai.com/blog/2013/08/21/i-hate-the-pumping-lemma/</wp:comment_author_url>
    <wp:comment_author_IP>69.163.219.115</wp:comment_author_IP>
    <wp:comment_date>2013-08-21 21:55:52</wp:comment_date>
    <wp:comment_date_gmt>2013-08-21 20:55:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Robin Houston (via @CompSciFact): [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1377118553</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1377118553.8005940914154052734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-21 20:55:52</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3096</wp:comment_id>
    <wp:comment_author><![CDATA[Mark]]></wp:comment_author>
    <wp:comment_author_email>mark.mercer@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>170.74.55.81</wp:comment_author_IP>
    <wp:comment_date>2013-08-20 13:58:27</wp:comment_date>
    <wp:comment_date_gmt>2013-08-20 12:58:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[eppstein: the claim 'if p(x) ≠ p(y), then d/d(0^x) L ≠ d/d(0^y) L where L = {x : |x| is prime}. ' is almost certainly true, but it's not obvious from the definition of primality. This has to be true for arbitrary prime x, y if you want to conclude immediately that you have infinitely many distinct derivatives.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3092</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1377003507</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1377003507.9045689105987548828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-20 12:58:27</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3353</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>77.91.248.124</wp:comment_author_IP>
    <wp:comment_date>2014-05-14 22:13:20</wp:comment_date>
    <wp:comment_date_gmt>2014-05-14 21:13:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi emilio. I’m not sure I entirely understand your question. If you can explain how you use the pumping lemma for these questions, I may be able to answer more usefully.

To find out if the language accepted by a given finite automaton is the empty language, it is sufficient to do a graph search (e.g. breadth-first search) from the start state and see if an accepting state is found. I’m not sure where the pumping lemma comes in?

One way to see if a finite automaton accepts an infinite language is to convert it to a regular expression and see if there are any stars in the regular expression. I can see how the pumping lemma could be used to prove that a finite automaton accepts an infinite language – by exhibiting an accepted string that has more characters than the automaton has states – but not how it could be used to decide the question.

I have no idea about the last one. This is a PSPACE-complete problem for non-deterministic finite automata or regular expressions, and I can’t imagine how it’s related to the pumping lemma.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3351</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1400102001</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1400102002.01620006561279296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-05-14 21:13:20</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>23949197328</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1400102002</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3355</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>77.91.248.124</wp:comment_author_IP>
    <wp:comment_date>2014-05-15 11:59:07</wp:comment_date>
    <wp:comment_date_gmt>2014-05-15 10:59:07</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ah, I see. Thanks for clarifying.

Since these are problems that have better (and more efficient) solutions not using the pumping lemma, I don’t really see why you would want to use Myhill-Nerode. Why not just use the better algorithms in the first place?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3354</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1400151548</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1400151548.5235750675201416015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>23961219589</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1400151549</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-05-15 10:59:07</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3074</wp:comment_id>
    <wp:comment_author><![CDATA[ceyhuncanu]]></wp:comment_author>
    <wp:comment_author_email>ceyhuncanu@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/ceyhuncanu</wp:comment_author_url>
    <wp:comment_author_IP>88.246.136.250</wp:comment_author_IP>
    <wp:comment_date>2013-08-18 22:25:16</wp:comment_date>
    <wp:comment_date_gmt>2013-08-18 21:25:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA["It is essentially the pigeonhole principle: the principle that if you put more than n pigeons into n holes then there must be a hole with more than one pigeon in."

I guess there is a typo here. Number of pigeons should be more than number of holes to express the idea of http://en.wikipedia.org/wiki/Pigeonhole_principle .]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376861117.1155021190643310546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"ceyhuncanu";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376861117</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-18 21:25:16</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3075</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.141.140.38</wp:comment_author_IP>
    <wp:comment_date>2013-08-18 22:27:16</wp:comment_date>
    <wp:comment_date_gmt>2013-08-18 21:27:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[No, no typo. You might like to reread the sentence you quoted. :-)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3074</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376861238.5649869441986083984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376861237</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-18 21:27:16</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3081</wp:comment_id>
    <wp:comment_author><![CDATA[Greg]]></wp:comment_author>
    <wp:comment_author_email>gregory.hanes@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>50.81.254.49</wp:comment_author_IP>
    <wp:comment_date>2013-08-19 04:15:39</wp:comment_date>
    <wp:comment_date_gmt>2013-08-19 03:15:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA["Clearly d/d(an)(L) = { aibn+i | i ∈ \mathbb{N} } for all n, and these are all different"

Do you mean that there are an infinite number of derivatives because you can take d/d(a^1)(L), d/d(a^2)(L), ... , d/d(a^n)(L), and for each n, the resulting derivative language is unique with respect to all other n?

Whereas if L is regular, then all derivative functions will map to a finite set of languages?

Just trying to make sure I understand correctly. Thank you for the interesting post.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376882140</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376882140.8414289951324462890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-19 03:15:39</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3092</wp:comment_id>
    <wp:comment_author><![CDATA[Mark Mercer]]></wp:comment_author>
    <wp:comment_author_email>mark.mercer@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>70.52.24.44</wp:comment_author_IP>
    <wp:comment_date>2013-08-20 03:46:49</wp:comment_date>
    <wp:comment_date_gmt>2013-08-20 02:46:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I think that the language {x: |x| is prime} should be easier to prove nonregular using the pumping lemma - Choose the long word to be a prime-length word and pump it up to a nonprime-length word. Generally if you have a language where membership only depends on the length of the input, you can skip the case analysis that normally comes with an application of the pumping lemma.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3083</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376966809</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376966809.7216880321502685546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-20 02:46:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3093</wp:comment_id>
    <wp:comment_author><![CDATA[eppstein]]></wp:comment_author>
    <wp:comment_author_email>david.eppstein@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>68.4.2.208</wp:comment_author_IP>
    <wp:comment_date>2013-08-20 07:34:56</wp:comment_date>
    <wp:comment_date_gmt>2013-08-20 06:34:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[The pumping lemma proof is pretty easy, but here's another easy proof using derivatives. For any integer x, let p(x) be the distance from x to the next prime number. Then, if p(x) ≠ p(y), then d/d(0^x) L ≠ d/d(0^y) L where L = {x : |x| is prime}. But p(x) can be arbitrarily large; for instance, p(n!+1) ≥ n. Therefore, L has infinitely many derivatives.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3092</wp:comment_parent>
    <wp:comment_user_id>10499271</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376980496</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376980496.719523906707763671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"eppstein";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-20 06:34:56</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3094</wp:comment_id>
    <wp:comment_author><![CDATA[Dave]]></wp:comment_author>
    <wp:comment_author_email>dagormel@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>67.241.74.116</wp:comment_author_IP>
    <wp:comment_date>2013-08-20 12:48:34</wp:comment_date>
    <wp:comment_date_gmt>2013-08-20 11:48:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Your last example looks to have some errors in it.

First, in your formula for d/d((0123)i)(C), I think you but the "+ 3i" on the wrong side of the equality. Shouldn't it be:

    { w∈{0,1,2,3}* | len(w∩{0,1,2}*) + 3i = 6 len(w∩{3}*)}

Second, I don't think it can be the case "that d/d((0123)^i)(C) contains the string (012)^i0123". The number of 3's must be proportial to i (in fact, it must be 3*i), it cannot be constant. I think if you were to change this to "for each i, d/d((0123)^i)(C) contains the string (0123)^i or something similar, the rest of the argument goes through.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376999314</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376999314.2081830501556396484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-20 11:48:34</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3202</wp:comment_id>
    <wp:comment_author><![CDATA[Shali Jiang]]></wp:comment_author>
    <wp:comment_author_email>shalijiang@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>8.35.201.102</wp:comment_author_IP>
    <wp:comment_date>2013-10-25 12:53:18</wp:comment_date>
    <wp:comment_date_gmt>2013-10-25 11:53:18</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I guess I'm one of the 'less fortunate' guys, I never thought of pumping lemma this way--it's just wonderful! Thanks for sharing!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1382701999</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1382701999.8585300445556640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-10-25 11:53:18</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3100</wp:comment_id>
    <wp:comment_author><![CDATA[Mark]]></wp:comment_author>
    <wp:comment_author_email>mark.mercer@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>70.52.23.190</wp:comment_author_IP>
    <wp:comment_date>2013-08-21 00:22:44</wp:comment_date>
    <wp:comment_date_gmt>2013-08-20 23:22:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ahh, I misunderstood what you were trying to do. So now you are finding an infinite set of pairs (x,y) that generate distinct derivatives, ok. But then how do you conclude that there are infinitely many derivatives? Consider the integral function f(x) = (-1)^x. There are infinitely many (x,y) pairs such that f(x) != f(y), but still the range of f is a constant 2.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3092</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1377040965</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1377040966.046988010406494140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-20 23:22:44</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3098</wp:comment_id>
    <wp:comment_author><![CDATA[D. Eppstein]]></wp:comment_author>
    <wp:comment_author_email>david.eppstein@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://11011110.livejournal.com/</wp:comment_author_url>
    <wp:comment_author_IP>128.195.56.104</wp:comment_author_IP>
    <wp:comment_date>2013-08-20 20:25:01</wp:comment_date>
    <wp:comment_date_gmt>2013-08-20 19:25:01</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You think it's not obvious? I disagree. If p(x) ≠ p(y),  we can assume without loss of generality that p(x) &lt; p(y). Then x+p(x) is prime (the first prime after x), by definition of p, while y+p(x) is not prime (there is no prime until y+p(y), a larger number).  Therefore the two languages d/d(0^x) L and d/d(0^y) L will differ on the input 0^{min(p(x),p(y)}.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3092</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1377026701</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1377026701.661571025848388671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"eppstein";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-20 19:25:01</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3099</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.141.140.38</wp:comment_author_IP>
    <wp:comment_date>2013-08-20 21:03:37</wp:comment_date>
    <wp:comment_date_gmt>2013-08-20 20:03:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thank you, Dave. There were indeed some errors, though I don’t think I quite agree about what they were.

I was writing e.g. len(w∩{3}*) to mean the number of 3s in w, which doesn’t really make sense. I’ve changed that notation to something ad hoc. (Is there a standard notation for this? Anyone?)

The notational issue aside, I think the expression for d/d((0123)<sup>i</sup>)(C) was correct. I have added a derivation, which I hope makes it clearer.

Yes, the “d/d((0123)<sup>i</sup>)(C) contains the string (012)<sup>i</sup>0123” part was wrong. It should have been (012)<sup>i</sup> without the extra 0123.

Thanks for prompting me to check this more carefully.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3094</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1377029018</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1377029018.4013569355010986328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-20 20:03:37</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3091</wp:comment_id>
    <wp:comment_author><![CDATA[Barney]]></wp:comment_author>
    <wp:comment_author_email>barney@mailinator.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>67.185.161.246</wp:comment_author_IP>
    <wp:comment_date>2013-08-19 23:07:31</wp:comment_date>
    <wp:comment_date_gmt>2013-08-19 22:07:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA["If two are a struggle, five is cruelty."

Ha!  That is why I switched from mathematics to computer science.  In mathematics, you have to work through proofs that require many pages or even chapters to write.  In computer science, if it takes more than half a page, you write a program to solve it for you, because that's usually simpler.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376950052</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376950052.1435260772705078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-19 22:07:31</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3090</wp:comment_id>
    <wp:comment_author><![CDATA[ulularem]]></wp:comment_author>
    <wp:comment_author_email>ethanapter@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>66.102.14.24</wp:comment_author_IP>
    <wp:comment_date>2013-08-19 20:50:22</wp:comment_date>
    <wp:comment_date_gmt>2013-08-19 19:50:22</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'm not sure what would make it more clear: on re-reading, I see exactly what you're pointing out. Somehow I was counting derivatives as "distinct" if the strings used to generate them were distinct (and produced a non-empty language), but all your text points out that a derivative is a language, and hence A* = d/dv(A*), for all v.

Thanks for the clarification.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3089</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376941823.095714092254638671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376941822</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-19 19:50:22</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3089</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.141.140.38</wp:comment_author_IP>
    <wp:comment_date>2013-08-19 19:39:49</wp:comment_date>
    <wp:comment_date_gmt>2013-08-19 18:39:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi. It sounds as though you understand what’s going on, but that you’ve got back-to-front what I meant by “different derivatives”. If w∈A* then d/dw(A*) = A*, so there is only one derivative, namely A*.

Or maybe you intended that A be a strict subset of the ambient alphabet, in which case there are two different derivatives, because d/dv(A*) = ∅ if v∉A*.

In either case there are a finite number. As you say, this is the same as the number of states in the obvious automaton for the language.

If you can say which part confused you, I’ll try to make it clearer.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3088</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376937592.4402101039886474609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376937591</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-19 18:39:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3082</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>209.85.212.173</wp:comment_author_IP>
    <wp:comment_date>2013-08-19 07:09:31</wp:comment_date>
    <wp:comment_date_gmt>2013-08-19 06:09:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes, you understand perfectly. Thanks.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3081</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376892571.7490899562835693359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376892571</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-19 06:09:31</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3083</wp:comment_id>
    <wp:comment_author><![CDATA[Stephan Wehner (@stephanwehner)]]></wp:comment_author>
    <wp:comment_author_email>stephanwehner@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/stephanwehner</wp:comment_author_url>
    <wp:comment_author_IP>207.216.59.235</wp:comment_author_IP>
    <wp:comment_date>2013-08-19 07:51:03</wp:comment_date>
    <wp:comment_date_gmt>2013-08-19 06:51:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Are you saying that any language that can be shown to be non-regular using the Pumping Lemma can be shown to be non-regular without using the Pumping Lemma? There's a "plugin replacement" in each such proof?

Of all the things one may not like one would think a mathematical fact would be the easiest to avoid.

Cheers,

Stephan]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376895063</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376895063.588037014007568359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/2941577272/b78fc3b6771737399ec35ce3924a3a47_normal.png</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>19731417</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-19 06:51:03</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3084</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>74.125.82.181</wp:comment_author_IP>
    <wp:comment_date>2013-08-19 08:01:48</wp:comment_date>
    <wp:comment_date_gmt>2013-08-19 07:01:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes. Every non-regular language has infinitely many derivatives. You never actually need to use the Pumping Lemma to show non-regularity.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3083</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376895708</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376895708.2311069965362548828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-19 07:01:48</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3085</wp:comment_id>
    <wp:comment_author><![CDATA[Max Bucknell]]></wp:comment_author>
    <wp:comment_author_email>me@maxbucknell.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/maxbucknell</wp:comment_author_url>
    <wp:comment_author_IP>84.45.75.134</wp:comment_author_IP>
    <wp:comment_date>2013-08-19 13:05:00</wp:comment_date>
    <wp:comment_date_gmt>2013-08-19 12:05:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I understood the lemma, but not your explanation. But, I suppose I am an edge case, being a mathematics student who only dabbles in programming.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376913900</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376913900.9449861049652099609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"maxbucknell";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-19 12:05:00</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3086</wp:comment_id>
    <wp:comment_author><![CDATA[John Hughes]]></wp:comment_author>
    <wp:comment_author_email>jfhext@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>68.228.151.7</wp:comment_author_IP>
    <wp:comment_date>2013-08-19 13:53:11</wp:comment_date>
    <wp:comment_date_gmt>2013-08-19 12:53:11</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'm not certain that this answers the question Stephan asked. Let me try to explain my doubts:

 Here are two properties of positive integers: (a) positive integers have unique factorizations. (b) For any positive integer n, the result of applying the predecessor function sufficiently often will be 0. 

The first of these can be used to prove various things about integers, as many elementary number theory texts demonstrate to excess. The second can be used to prove other things. You might ask "is everything provable using the first also provable using the second?" At some very basic level, the answer must be "yes", because when we say "Using the second," we really mean "Using the second and all the axioms for the integers," and using "all the axioms for the integers" we can prove the first, hence can prove anything derived from it. 

But that doesn't really capture the sense of the question. One way to think of proofs is via graph theory. At each moment in a proof, you're in some state of knowledge (call that a node), and there are tons of things you could say next. (call each of these an edge). If you pick the right sequence of edges, you reach a final node in which the knowledge you've established contains the conclusion of the theorem.  So things proved by using unique factorization constitute certain paths in this large graph. The question is then something like "are there shorter paths to all (or most of) these things from the state in which you get to assume finite-predecessor-calls, with the paths not passing through the nodes that contain the knowledge of unique factorization?" 

To bring this back to languages, the fact that every non-regular language has some property (finitely many derivatives) and has some other property ("pumpingness") doesn't necessarily mean that there's a mechanism for replacing proofs involving the latter with "simpler" proofs involving the former, where by "simpler" I mean "not involving a hidden proof of the pumping lemma." 

I suspect that the answer to Stephan's question might well be "Yes," but I know little enough about the pumping lemma and its uses to have no confidence in my answer.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3084</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376916792.6231930255889892578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376916792</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-19 12:53:11</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3087</wp:comment_id>
    <wp:comment_author><![CDATA[mac01021mac]]></wp:comment_author>
    <wp:comment_author_email>coolbeth@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/mac01021</wp:comment_author_url>
    <wp:comment_author_IP>137.99.65.219</wp:comment_author_IP>
    <wp:comment_date>2013-08-19 15:31:49</wp:comment_date>
    <wp:comment_date_gmt>2013-08-19 14:31:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'm not prepared to say I necessarily think your hatred is 100% misguided, but there are some point worth considering:

1&gt; Maybe there is some value in giving the students some practice thinking about logical propositions that are (structurally) nontrivial.  With enough such practice, it might become second nature, in which case the students will have enhanced their abilities to reason.

2&gt; It might serve as an OK warm-up for the similar lemma about Context Free Languages.

I expect that, if I were exposing the material to students, I would most likely begin from the informal appeal to the pigeonhole principle and the DFA with p states.  But, once I was satisfied that everyone understood, I would still want to show how to express the theorem with rigor and formality and nested quantifiers, with all of which I would want the students to develop a great degree of comfort.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376922710</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376922710.4111969470977783203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"mac01021";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-19 14:31:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3088</wp:comment_id>
    <wp:comment_author><![CDATA[ulularem]]></wp:comment_author>
    <wp:comment_author_email>ethanapter@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>74.125.179.69</wp:comment_author_IP>
    <wp:comment_date>2013-08-19 16:21:31</wp:comment_date>
    <wp:comment_date_gmt>2013-08-19 15:21:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA["By the same argument, any regular language has only a finite number of different derivatives."

From my naive reading, A* is a regular language with an infinite number of different derivatives (namely each A^n, for natural numbers n). For the obvious (canonical?) automaton of this language, taking these derivatives doesn't change the start state. Does that mean something is only a derivative if it changes the start state and removes a prefix from words in the language?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376925692</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376925692.3745729923248291015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-19 15:21:31</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3079</wp:comment_id>
    <wp:comment_author><![CDATA[Atash]]></wp:comment_author>
    <wp:comment_author_email>nope@nope.nope</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>108.18.226.253</wp:comment_author_IP>
    <wp:comment_date>2013-08-19 03:09:04</wp:comment_date>
    <wp:comment_date_gmt>2013-08-19 02:09:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[The first sentence of the article seemed pretty clear to me...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3078</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376878145.0511109828948974609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376878145</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-19 02:09:04</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3080</wp:comment_id>
    <wp:comment_author><![CDATA[Brando Miranda]]></wp:comment_author>
    <wp:comment_author_email>brandojazz@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>192.150.10.205</wp:comment_author_IP>
    <wp:comment_date>2013-08-19 03:50:47</wp:comment_date>
    <wp:comment_date_gmt>2013-08-19 02:50:47</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I hate the Pumping Lemma for regular languages. It’s a complicated way to express an idea that is fundamentally very simple, and it isn’t even a very good way to prove that a language is not regular.

Thats what its about. Are you familiar with this topic?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3078</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376880649.0992310047149658203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376880648</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-19 02:50:47</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3078</wp:comment_id>
    <wp:comment_author><![CDATA[bobt]]></wp:comment_author>
    <wp:comment_author_email>bobtwins@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>67.180.48.68</wp:comment_author_IP>
    <wp:comment_date>2013-08-19 02:24:16</wp:comment_date>
    <wp:comment_date_gmt>2013-08-19 01:24:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Can you please rewrite this article with a clear point? It’s a complicated article to express an idea that is fundamentally unknown to readers.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376875456.1317970752716064453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1376875456</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-08-19 01:24:16</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3548</wp:comment_id>
    <wp:comment_author><![CDATA[Lingadharini]]></wp:comment_author>
    <wp:comment_author_email>harinisanthosh@live.com</wp:comment_author_email>
    <wp:comment_author_url>http://thevicissitudeme.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>59.89.253.19</wp:comment_author_IP>
    <wp:comment_date>2014-10-05 12:39:59</wp:comment_date>
    <wp:comment_date_gmt>2014-10-05 11:39:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice post on 'Pumping Lemma for regular languages'. I used to wonder how people manage to understand it. And now I have successfully understood the concept of pumping lemma. But my basic question is, 'why state such a complex lemma to prove something is not regular? The language is not regular..we know. Then why take all these risks?'. Actually no one seems to have an answer to my question..!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>24856032</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1412509200</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1412509201.0451819896697998046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"harinisanthosh";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>1753432673</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1412509201</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-10-05 11:40:04</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3351</wp:comment_id>
    <wp:comment_author><![CDATA[emilio]]></wp:comment_author>
    <wp:comment_author_email>ealmansi@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>181.167.168.195</wp:comment_author_IP>
    <wp:comment_date>2014-05-13 04:42:58</wp:comment_date>
    <wp:comment_date_gmt>2014-05-13 03:42:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[The pumping lemma is also useful for proving decidability on the questions:
is the language accepted by a given finite automaton the empty language?
is the language accepted by a given finite automaton infinite?
are the languages accepted by two given finite automatons the same?

how may the Myhill-Nerode thm be used to prove these?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1399952579</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1399952580.334886074066162109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-05-13 03:42:58</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>23907192567</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1399952580</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3356</wp:comment_id>
    <wp:comment_author><![CDATA[emilio]]></wp:comment_author>
    <wp:comment_author_email>ealmansi@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>181.167.168.195</wp:comment_author_IP>
    <wp:comment_date>2014-05-15 16:10:42</wp:comment_date>
    <wp:comment_date_gmt>2014-05-15 15:10:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[well, from a pedagogical point of view, after learning finite automata, by means of a "shockingly simple" proof you get the pumping lemma and with it you get for free .) a tool for proving (many) languages are not regular, .) one liner proofs for decidability.
for these reasons it seems to me like a perfectly good choice over Myhill-Nerode for a normal course. Unless of course there were cool bonuses to  it too.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3355</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1400166643</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1400166643.3313159942626953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-05-15 15:10:42</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>23965841448</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1400166643</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3218</wp:comment_id>
    <wp:comment_author><![CDATA[Phil]]></wp:comment_author>
    <wp:comment_author_email>philx101@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>74.12.97.69</wp:comment_author_IP>
    <wp:comment_date>2013-11-19 18:04:23</wp:comment_date>
    <wp:comment_date_gmt>2013-11-19 17:04:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA["Take the regular language L, and express it as a deterministic finite automaton with p states. Any string in L determines a path through the automaton; so any string with p or more characters must visit the same state twice, forming a loop. This looped part can be repeated any arbitrary number of times to produce other strings in L."

Thank you, this statement did me some magic. Magic that no math/computer science professor could ever formulate into words. I really wish that they had more common sense in explaining material rather than regurgitating unnecessarilly confusing definitions from the textbook.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1384880663</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1384880663.9400150775909423828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-11-19 17:04:23</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3354</wp:comment_id>
    <wp:comment_author><![CDATA[emilio]]></wp:comment_author>
    <wp:comment_author_email>ealmansi@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>181.167.168.195</wp:comment_author_IP>
    <wp:comment_date>2014-05-15 02:40:04</wp:comment_date>
    <wp:comment_date_gmt>2014-05-15 01:40:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[by using the pumping lemma you may prove:
- the language accepted by an automaton with n states is not empty if and only if it accepts at least one word of length smaller than n
- the language accepted by an automaton with n states is infinite if and only if it accepts at least one word of length l with n &lt;= l &lt; 2n

you could try out every possible word of length 0 to n-1 to check if the language is empty, or n to 2n-1 to check if it is infinite. the number of words in each case is finite, and therefore you can always check this algorithmically.

finally, checking if the language accepted by two given automatons M1 M2 is the same, can be done by constructing an automaton that accepts  L(M1) - L(M2) and checking if it accepts only the empty language. such automaton can always be constructed algorithmically.

of course these methods would not be efficient in practice.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3353</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>23953212628</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1400118004</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1400118004</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1400118004.6217219829559326171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-05-15 01:40:04</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3564</wp:comment_id>
    <wp:comment_author><![CDATA[Mario]]></wp:comment_author>
    <wp:comment_author_email>pumpmaster2000@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>131.104.23.3</wp:comment_author_IP>
    <wp:comment_date>2014-10-16 11:08:01</wp:comment_date>
    <wp:comment_date_gmt>2014-10-16 10:08:01</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You sure like pumping!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>2146536279</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1413454082</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1413454082</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1413454082.3217151165008544921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3547</wp:comment_id>
    <wp:comment_author><![CDATA[Lingadharini]]></wp:comment_author>
    <wp:comment_author_email>harinisanthosh@live.com</wp:comment_author_email>
    <wp:comment_author_url>http://thevicissitudeme.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>117.206.92.44</wp:comment_author_IP>
    <wp:comment_date>2014-10-05 11:12:22</wp:comment_date>
    <wp:comment_date_gmt>2014-10-05 10:12:22</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Reblogged this on <a href="http://thevicissitudeme.wordpress.com/2014/10/05/i-hate-the-pumping-lemma/" rel="nofollow">The Vicissitudious  Me</a> and commented: 
Post I liked.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>24856032</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1412503942.9534270763397216796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"harinisanthosh";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>1751503368</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1412503943</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>reblog_ping</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-10-05 10:12:24</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1412503942</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>4033</wp:comment_id>
    <wp:comment_author><![CDATA[Philip]]></wp:comment_author>
    <wp:comment_author_email>zakmaina@ymail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>197.237.181.177</wp:comment_author_IP>
    <wp:comment_date>2016-05-12 23:17:17</wp:comment_date>
    <wp:comment_date_gmt>2016-05-12 22:17:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[That explanation of pumping lemma is perfect - easy for layman]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1463091440</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>22753429330</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1463091441</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1463091440.5979759693145751953125;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Almost sure is sure enough</title>
  <link>https://bosker.wordpress.com/?p=1177</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1177</guid>
  <description/>
  <content:encoded><![CDATA[<p>It’s hard to develop a sound intuition for probability. Even in fairly simple situations it is easy to convince oneself that the wrong answer is obviously right: the <a href="http://en.wikipedia.org/wiki/Monty_Hall_problem">Monty Hall problem</a> is perhaps the most notorious example of a problem that has been known to confound the intuition even of professional mathematicians. </p>
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1177</wp:post_id>
  <wp:post_date>2013-09-02 10:14:12</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Beyond Bézier curves</title>
  <link>https://bosker.wordpress.com/2013/11/13/beyond-bezier-curves/</link>
  <pubDate>Wed, 13 Nov 2013 21:17:34 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1190</guid>
  <description/>
  <content:encoded><![CDATA[There is a new feature of Pages and Keynote, not mentioned in any of Apple’s publicity nor in any press coverage I’ve seen, that is really very interesting. Perhaps it will even one day prove to have been revolutionary, in a quiet way.<!--more-->

In case you are not an Apple follower, iWork is Apple’s answer to Microsoft Office. Last month Apple introduced a new version – now free for the first time – with <a href="http://www.apple.com/pr/library/2013/10/23Apple-Introduces-Next-Generation-iWork-and-iLife-Apps-for-OS-X-and-iOS.html">the usual fanfare</a> and to a mixed reception.

Ever since <a href="http://www.youtube.com/watch?v=8Vj37x2jScU">the release of Adobe Illustrator 1.1 in 1987</a> the way ordinary people draw or edit curves on a computer has been to use Bézier splines. If you’ve ever used a vector graphics program, you’ve probably spent some time tweaking Bézier control handles, perhaps in frustration. Bézier curves were first used by French car designers in the 1960s, but as far as I know it was Adobe who introduced them to the home computer, where they have become ubiquitous.

Bézier curves are a small miracle of practical mathematics. They are conceptually elegant, easy for a computer to draw, and have a graphical representation – with draggable control handles – that is well-suited to interactive computer editing. If you don’t know how a Bézier curve segment is constructed from the control handles, try staring at this animation till it starts to make sense:

[caption id="" align="aligncenter" width="360"]<img alt="" src="http://upload.wikimedia.org/wikipedia/commons/d/db/Bézier_3_big.gif" width="360" height="150" /> Animation by Phil Tregoning, Public Domain.[/caption]

The downside is that it’s difficult for a non-expert to make attractive smooth curves using Béziers. It’s all too easy to make bumpy, lumpy misshapen things.

Hence the small revolution: the new iWork apps don’t present the user with Bézier curves <em>at all</em>, by default. There is a checkbox in the preferences to change the default curve type back to Bézier, but the default is much more interesting: <strong>Hobby splines</strong><strong>.</strong>

Hobby splines were invented by John Hobby in 1985 or so, originally for Don Knuth’s much celebrated but rarely used <a href="http://en.wikipedia.org/wiki/Metafont">Metafont system</a>. They are actually ordinary cubic Béziers, but the control handles are placed not by the user but by an efficient algorithm that ensures smoothness. So of course they interoperate perfectly with software that expects to see Bézier curves, and Keynote and Pages even allow you to mix “smooth” and Bézier points in the same curve.

<img class="aligncenter size-full wp-image-1199" alt="curves" src="http://bosker.files.wordpress.com/2013/11/curves.png" width="480" height="142" />

If you’re interested in the nitty-gritty of how they work, I would recommend reading <a href="ftp://reports.stanford.edu/pub/cstr/reports/cs/tr/85/1047/CS-TR-85-1047.pdf">John Hobby’s 1985 paper</a>. There is also a secondary, unexpected pleasure to be had from this copy of the paper: the scanned document seems to have been processed by an unreliable optical character recognition algorithm, so that deciphering the intended meaning is at times an amusing puzzle.

[caption id="attachment_1195" align="aligncenter" width="480"]<img class="size-full wp-image-1195" alt="Some words are in a different font, apparently because they defeated the OCR algorithm and so the text is reproduced from the original document." src="http://bosker.files.wordpress.com/2013/11/screen-shot-2013-11-13-at-20-30-24.png" width="480" height="131" /> Some words are in a different font, apparently because they defeated the OCR algorithm and so the text is reproduced from the original document.[/caption]

[caption id="attachment_1196" align="aligncenter" width="432"]<img class="size-full wp-image-1196" alt="It’s easy to guess that ‘o’ should have been ‘0’, but takes a little more thought to see that both ‘8’ and ‘e’ are misreadings of θ." src="http://bosker.files.wordpress.com/2013/11/screen-shot-2013-11-13-at-20-34-41.png" width="432" height="123" /> It’s easy to guess that ‘o’ should have been ‘0’ in the first line, but takes a little more thought to realise that both ‘8’ and ‘e’ are misreadings of θ in the second.[/caption]

Like all the best practical algorithms, Hobby’s method is a mixture of deep mathematical insight and low cunning. The essential trick is to use an approximate measure of curvature (“mock curvature”) that is represented by a linear expression. Then the problem of finding a smooth curve given the positions of the control points can be solved very efficiently using standard matrix methods for solving linear equations.

It very quickly becomes clear, playing with them, that Hobby splines are just a <em>better</em> way for casual users to draw attractive curves. All the fine-tuning of control handles is eliminated, though the shape can still be refined by adding additional curve points. Because they are perfectly compatible with industry-standard Béziers, there is very little disadvantage to be had. We’ve been doing it wrong for all these years, and now we know a better way.

Who will be the first to copy Apple’s excellent idea?]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1190</wp:post_id>
  <wp:post_date>2013-11-13 22:17:34</wp:post_date>
  <wp:post_date_gmt>2013-11-13 21:17:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>beyond-bezier-curves</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="algorithms"><![CDATA[algorithms]]></category>
  <category domain="post_tag" nicename="apple"><![CDATA[Apple]]></category>
  <category domain="post_tag" nicename="bezier"><![CDATA[Bézier]]></category>
  <category domain="post_tag" nicename="bezier-curves"><![CDATA[Bézier curves]]></category>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[robinhouston]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/gxSGIuAtyR]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_1669861</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>3209</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>81.147.133.61</wp:comment_author_IP>
    <wp:comment_date>2013-11-15 22:11:14</wp:comment_date>
    <wp:comment_date_gmt>2013-11-15 21:11:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Well, you could hardly be expected to have read everything I have ever written anywhere on the internet. :-)

I’ve realised that I rather overstated the importance of what Hobby calls extensibility and Levien calls extensionality in my last reply to you. For Apple’s curve refinement interface to work, of course all that is needed is for there to be at least ONE point, somewhere roughly in the middle of the curve segment, that can be added without distorting the curve.

This is much weaker than requiring that ANY point on the curve can be added as a control point, and I can’t see why it wouldn’t be achievable in the sort of model you’re suggesting. I’ll be interested to see how well it works, if you get a chance to try it out!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3206</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1384549875.169146060943603515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1384549875</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-11-15 21:11:14</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3203</wp:comment_id>
    <wp:comment_author><![CDATA[Jes Sherborne]]></wp:comment_author>
    <wp:comment_author_email>jes.sherborne@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.jessherborne.com</wp:comment_author_url>
    <wp:comment_author_IP>24.12.184.114</wp:comment_author_IP>
    <wp:comment_date>2013-11-14 19:41:31</wp:comment_date>
    <wp:comment_date_gmt>2013-11-14 18:41:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for pointing out an interesting change in iWork that I hadn't noticed.

I agree that doing away with off-curve control points is a great idea, especially for something designed for general use. That said, using Hobby splines involves some significant tradeoffs, and I'm not convinced they're the right ones for iWork.

First, as the angle between control points gets large, Hobby splines produce large, looping arcs that don't relate in an obvious way to your drawing intent. This behavior is kind of fun to play with, but it's not generally useful.

To mitigate this, you need to add control points. This isn't tragic, but it does mean that altering the shape of your curve can involve tweaks to a lot more control points than a more traditional Bezier approach.

Second, because the Hobby spline is determined by a system of equations involving all the control points on a curve, as you change one control point, it causes ripple effects in non-adjacent parts of the curve. You can always add more control points to moderate the effect, but the effect never completely goes away. And the more control points you have, the harder it is to alter your curve.

For my money, a better approach to this particular problem is to use something even less mathematically sophisticated than the Hobby spline: a tangent/chord heuristic (Hobby gives an example of one in the introduction of his paper).

Something like this provides the same input simplicity of the Hobby spline (no off-curve control points for the user to mess with) but it gives you the significant advantage that moving a control point only affects the adjacent curve segments. In addition, it's well-behaved regardless of the angle between control points.

Towards the other end of the mathematical sophistication spectrum, Raph Levien has done some really interesting work on Euler spiral splines (http://levien.com/phd/thesis.pdf). The mathematics is (a lot) more involved, but the results are quite promising. He argues that the Hobby spline amounts to an efficient Bezier approximation of an Euler spline when the angle between control points is small. I'd love to see someone explore this approach further.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1384454491</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1384454491.4019439220428466796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"jessherborne";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-11-14 18:41:31</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3205</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>81.147.133.61</wp:comment_author_IP>
    <wp:comment_date>2013-11-14 23:26:43</wp:comment_date>
    <wp:comment_date_gmt>2013-11-14 22:26:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for a thoughtful and interesting comment, Jes.

One of the neat things about Apple’s implementation is the way that they have made adding a new curve point a very low-friction operation: just click on the little blue circle that appears half way between two curve points, and drag to adjust. This wouldn’t really work, I don’t think, if the splines were not (to a good approximation) “extensible” as Hobby calls it – i.e. adding a new curve point on the existing curve should not visibly change the shape of the curve. Wouldn’t a tangent/chord heuristic tend not to be extensible in this sense, making it harder to refine the shape of the curve by adding new points?

Raph Levien’s work is terrific, and his PhD thesis is a highly enjoyable read – which is not something that can be said about very many PhD theses (certainly not mine), and is testament to the quality of Levien’s prose as well as his research.

When I played with the prototype Spiro implementation in ppedit back in 2007, there were apparent problems with numerical stability, and the numerics would sometimes even fail to converge. That seems to be quite a serious disadvantage compared to Hobby splines, which have a guaranteed unique solution that can be computed analytically. I’m not sure to what extent this problem has been mitigated since, though. (Do you know?)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3203</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1384468007</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1384468008.0921270847320556640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-11-14 22:26:43</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3206</wp:comment_id>
    <wp:comment_author><![CDATA[Jes Sherborne]]></wp:comment_author>
    <wp:comment_author_email>jes.sherborne@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.jessherborne.com</wp:comment_author_url>
    <wp:comment_author_IP>24.12.184.114</wp:comment_author_IP>
    <wp:comment_date>2013-11-15 03:34:53</wp:comment_date>
    <wp:comment_date_gmt>2013-11-15 02:34:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Had I followed your discussion on Twitter, I would have seen that you were already well aware of Levien's work--sorry about that!

You're quite right that injecting new points using a tangent/chord heuristic would probably deform the curve somewhat. I'd guess that the effect would be fairly subtle given that the spline itself is interpolating the tangent between the knot points, but without trying it out it's just speculation on my part.

Even so, it might be a fair trade to get the other characteristics. The real deal-killer for me is that if you lay out a series of points, the Hobby spline is going to look weird unless the angle between adjacent knots is pretty small. And if your knots have that characteristic, it may not matter much how you're interpolating between them (at least for the kind of application we're discussing here).

Regarding Spiro, I don't know whether you've seen this: http://levien.com/garden/js/spiro.html. It only implements a subset of what ppedit does (apparently only the G2 constraint type), but it seems to be pretty stable.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>28125519</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1384482894</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1384482894.049417972564697265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"jessherborne";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-11-15 02:34:53</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3504</wp:comment_id>
    <wp:comment_author><![CDATA[Mark Hamburg]]></wp:comment_author>
    <wp:comment_author_email>mhamburg.pub@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>50.46.231.190</wp:comment_author_IP>
    <wp:comment_date>2014-09-10 20:20:00</wp:comment_date>
    <wp:comment_date_gmt>2014-09-10 19:20:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'm pretty sure I used Hobby's algorithm in FullWrite's pen tool back in 1987-88.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-09-10 19:20:00</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1410376800</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1410376800.6546230316162109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>992927390</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1410376800</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3505</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.175.16.193</wp:comment_author_IP>
    <wp:comment_date>2014-09-10 20:31:25</wp:comment_date>
    <wp:comment_date_gmt>2014-09-10 19:31:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Interesting! I’d love to know why you didn’t include them in Photoshop 2.0. I can’t help imagining how differently things might have turned out…]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3504</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-09-10 19:31:25</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1410377485</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1410377485.5270450115203857421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>993147012</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1410377485</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3522</wp:comment_id>
    <wp:comment_author><![CDATA[On the roadmap again ♪ | Prototypo]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://blog.prototypo.io/on-the-roadmap-again-%e2%99%aa/</wp:comment_author_url>
    <wp:comment_author_IP>217.70.180.225</wp:comment_author_IP>
    <wp:comment_date>2014-09-22 10:32:33</wp:comment_date>
    <wp:comment_date_gmt>2014-09-22 09:32:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] sources. [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-09-22 09:32:34</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1411378353</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1411378353.8405249118804931640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3604</wp:comment_id>
    <wp:comment_author><![CDATA[Mark Hamburg]]></wp:comment_author>
    <wp:comment_author_email>mhamburg.pub@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>192.150.22.5</wp:comment_author_IP>
    <wp:comment_date>2014-11-25 20:47:06</wp:comment_date>
    <wp:comment_date_gmt>2014-11-25 19:47:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Photoshop's pen tool was focused on being a clone of Illustrator's. That said, I did modify a few of the behaviors and added support for even-odd in addition to winding-order fill. But changing the curve drawing model wasn't in the cards particularly given the tight schedule and the fact that I was also deep in the work on AI rasterization. I agree that things might have turned out differently with respect to pen tools if Photoshop had taken a more dramatic step forward.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3505</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1416944826</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>3684591877</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1416944826</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1416944826.6670849323272705078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>An extract from the PDF of Hobby’s paper</title>
  <link>https://bosker.wordpress.com/2013/11/13/beyond-bezier-curves/screen-shot-2013-11-13-at-20-30-24/</link>
  <pubDate>Wed, 13 Nov 2013 20:31:51 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/11/screen-shot-2013-11-13-at-20-30-24.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Some words are in a different font, apparently because they defeated the OCR algorithm and so the text is reproduced from the original document.]]></excerpt:encoded>
  <wp:post_id>1195</wp:post_id>
  <wp:post_date>2013-11-13 21:31:51</wp:post_date>
  <wp:post_date_gmt>2013-11-13 20:31:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2013-11-13-at-20-30-24</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1190</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/11/screen-shot-2013-11-13-at-20-30-24.png</wp:attachment_url>
</item>
<item>
  <title>Second extract from the Hobby PDF</title>
  <link>https://bosker.wordpress.com/2013/11/13/beyond-bezier-curves/screen-shot-2013-11-13-at-20-34-41/</link>
  <pubDate>Wed, 13 Nov 2013 20:35:49 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/11/screen-shot-2013-11-13-at-20-34-41.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[It’s easy to guess that ‘o’ should have been ‘0’, but takes a little more thought to see that both ‘8’ and ‘e’ are misreadings of θ.]]></excerpt:encoded>
  <wp:post_id>1196</wp:post_id>
  <wp:post_date>2013-11-13 21:35:49</wp:post_date>
  <wp:post_date_gmt>2013-11-13 20:35:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2013-11-13-at-20-34-41</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1190</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/11/screen-shot-2013-11-13-at-20-34-41.png</wp:attachment_url>
</item>
<item>
  <title>curves</title>
  <link>https://bosker.wordpress.com/2013/11/13/beyond-bezier-curves/curves/</link>
  <pubDate>Wed, 13 Nov 2013 20:42:49 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2013/11/curves.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1199</wp:post_id>
  <wp:post_date>2013-11-13 21:42:49</wp:post_date>
  <wp:post_date_gmt>2013-11-13 20:42:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>curves</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1190</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2013/11/curves.png</wp:attachment_url>
</item>
<item>
  <title>The bicycle lock problem</title>
  <link>https://bosker.wordpress.com/2014/02/18/the-bicycle-lock-problem/</link>
  <pubDate>Tue, 18 Feb 2014 16:13:27 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1206</guid>
  <description/>
  <content:encoded><![CDATA[[caption id="attachment_1209" align="alignleft" width="480"]<img src="http://bosker.files.wordpress.com/2014/02/2390282005_1b88533aa6_b.jpg?w=480" alt="Giant bicycle lock" width="480" height="319" class="size-large wp-image-1209" /> Photo: <a href="http://www.flickr.com/photos/photobyaaron/2390282005/">WickedVT</a>[/caption]
Don’t lock your bicycle with a combination lock. Someone will steal it: I learnt this the hard way. It’s quite easy to open a combination lock by feel, without knowing the combination. Try it: with a bit of practice, you can open the lock with your eyes shut. (It’s easier to do this with an old wobbly lock than a tight-fitting new one.)
<!--more-->
But suppose, for the sake of mathematics, that you have ignored this good advice. How many turns of the lock do you need to make to unlock your bike? You will notice that you can turn a number of adjacent dials together in the same direction, almost as easily as turning a single dial – so we’ll say turning any number of adjacent rings one place counts as a single turn.

Of course the answer depends on many factors: how many rings the lock has, how many numbers are on each ring, what the correct combination is, and the current state of the lock: which numbers are uppermost to begin with. Let’s say the lock has <i>n</i> rings, and each ring has the <i>k</i> numbers 0, …, k-1. (Real bicycle locks often have <i>n</i>=4 and <i>k</i>=10. The one depicted above has <i>n</i>=5.) Let’s also suppose that the correct combination is all 0s.

If you were only allowed to turn one dial at a time, this would be very easy. A dial showing digit <i>d</i> would require min{<i>d</i>, <i>k</i>-<i>d</i>} turns, and we could just add up the number of turns required for each dial. But we can turn several adjacent dials at once, which makes it more interesting. For example, if <i>n</i>=2 and <i>k</i>=10, the combination <code>55</code> can be unlocked in 5 turns rather than 10, and the combination <code>46</code> can be unlocked in 6 turns rather than 8.

Our goal here is to find an efficient algorithm to compute the maximum number of turns you might need to unlock your bike, given <i>n</i> and <i>k</i>, but we’ll discover some interesting things along the way. We’ll begin by working out how many turns are needed starting from a specific combination.

To see how many turns are needed, it is helpful to look at the differences between adjacent numbers. Suppose we have the combination <code>4831</code> with <i>n</i>=4 and <i>k</i>=10: compute the differences modulo <i>k</i>, as follows:
<img src="http://bosker.files.wordpress.com/2014/02/differences1.png?w=480" alt="differences" width="480" height="181" class="aligncenter size-large wp-image-1216" />
with the subtraction shown in blue and the result of this subtraction modulo <i>k</i> shown in red.

It’s useful to look at the differences rather than the actual numbers on the dials, because the effect of turning multiple adjacent dials together is simpler: a turn corresponds to adding 1 to one of the differences while subtracting 1 from another. For example, if we turn the middle two dials so that the lock reads <code>4941</code>, the differences are then <code>45579</code>. Conversely, if you add 1 to one of the differences while subtracting 1 from another, this corresponds to turning the dials that lie between these two differences. If <i>a</i>, <i>b</i> are differences, we’ll write (<i>a</i>+, <i>b</i>-) for the move that adds 1 to <i>a</i> and subtracts 1 from <i>b</i>.

Now let’s look at the maximum number of turns you could need for particular <i>n</i> and <i>k</i>, which we’ll call <i>t</i><sub><i>n</i>,<i>k</i></sub>, or <i>t</i> for short. As an example, for <i>n</i>=2 and <i>k</i>=10 you can always unlock your bike in 6 turns, and sometimes 6 are necessary – e.g. starting from <code>48</code> – so we say <i>t</i><sub>2,10</sub> = 6.

Consider the effect on the differences of a <i>minimal</i> unlocking sequence: one that’s as short as possible. The key observation is that, in a minimal unlocking, each difference is changed in one direction – up or down – but never both. If the same difference is changed both up and down, the unlocking sequence could have been shortened by not doing that, so it isn’t minimal. To be precise, suppose <i>a</i>, <i>b</i> and <i>c</i> are three differences and that the unlocking sequence contains the moves (<i>a</i>+, <i>b</i>-) and (<i>b</i>+, <i>c</i>-). Then we can replace these two moves with the single move (<i>a</i>+, <i>c</i>-); or if <i>a</i> and <i>c</i> happen to be the same then we remove both moves. Either way we have shortened the unlocking sequence, which means it wasn’t minimal. Another important observation about minimal unlocking sequences is that every difference is changed by fewer than <i>k</i> steps: so it never wraps round back to where it started. Again there is a similar argument to before, showing that any unlocking sequence where a difference makes a complete revolution cannot be minimal. Bear in mind, too, that the unlocking is finished when all the differences are 0.

Now the question is, how many of the differences go up and how many down. For this we add up all the differences. This sum is 0 modulo <i>k</i>, so must be equal to <i>xk</i> for some natural number <i>x</i>. Now we shall see that <i>x</i> of the differences go up, and the rest down. This is not obvious, I don’t think, but isn’t hard to see if you think about it in the right way. Consider how the sum of differences changes as the unlocking sequence is performed. This sum is always 0 modulo <i>k</i>, and goes from <i>xk</i> at the start to 0 at the end. Therefore it must, at a minimum, be reduced <i>x</i> times. Now, a move that reduces the sum is one that increments one of the differences from <i>k</i>-1 to 0 whilst reducing the value of another. In a minimal sequence, this will the the last move for the difference that was incremented and that difference must have been one of the ones that went up. Conversely the final move for any difference that goes up must be to roll it over from <i>k</i>-1 to 0. So indeed precisely <i>x</i> of the differences go up in a minimal unlocking sequence.

We can compute the number of turns as the sum of the differences that go down, and for a minimal unlocking sequence these should be the smallest ones. So the number of turns needed is the sum of the smallest (<i>n</i>+1-<i>x</i>) differences. Now let’s turn it round, and look at the maximum number of turns needed for a particular <i>x</i>. We’ll write this as <i>t</i><sub><i>n</i>,<i>k</i></sub>(<i>x</i>), or <i>t</i>(<i>x</i>) for short. Since we’ve fixed <i>x</i>, we know that the sum of the differences is <i>xk</i>. If the differences could be fractions, rather than having to be whole numbers, the worst-case scenario – maximising the number of turns needed – would be for them to be distributed evenly so that each difference is $latex \frac{xk}{n+1}&amp;fg=000000$ and the sum of the (<i>n</i>+1-<i>x</i>) smallest is therefore $latex (n+1-x)\frac{xk}{n+1}&amp;fg=000000$.

This gives us an upper bound on <i>t</i><sub><i>n</i>,<i>k</i></sub>(<i>x</i>), but we need to work a little harder to get the exact value. Let <i>q</i><sub><i>x</i></sub> and <i>r</i><sub><i>x</i></sub> be the quotient and remainder of <i>xk</i>/(<i>n</i>+1), so in other words <i>xk</i> = <i>q</i><sub><i>x</i></sub>(<i>n</i>+1) + <i>r</i><sub><i>x</i></sub>, where 0 ≤ <i>r</i><sub><i>x</i></sub> &lt; <i>n</i>+1. Distributing the differences as evenly as possible means we have (<i>n</i>+1-<i>r</i><sub><i>x</i></sub>) that are <i>q</i><sub><i>x</i></sub>, and the remaining <i>r</i> are <i>q</i><sub><i>x</i></sub>+1. The smallest <i>x</i> of these consists of min{<i>x</i>, <i>n</i>+1-<i>r</i><sub><i>x</i></sub>} <i>q</i><sub><i>x</i></sub>’s and max{0, <i>r</i><sub><i>x</i></sub>-x} (<i>q</i><sub><i>x</i></sub>+1)’s, so <i>t</i><sub><i>n</i>,<i>k</i></sub>(<i>x</i>) – the sum of the smallest <i>x</i> – is (<i>n</i>+1-<i>x</i>)<i>q</i><sub><i>x</i></sub> + max{0, <i>r</i><sub><i>x</i></sub>-x}. Rearranging gives the alternative form,

$latex \vbox{\begin{equation}t_{n,k}(x) = x(k-q_x) - \min\{r_x, x\}\tag{1}\end{equation}} &amp;fg=000000$

We already found the upper bound

$latex \vbox{\begin{equation}t_{n,k}(x) \leq (n+1-x)\frac{xk}{n+1}\hskip2em\tag{2}\end{equation}}&amp;fg=000000$

and in a similar way there is a lower bound

$latex \vbox{\begin{equation}t_{n,k}(x) \geq (n+1-x)\frac{x(k-1)}{n+1}\hskip1em\tag{3}\end{equation}}&amp;fg=000000$

Here is a graph showing how <i>q</i><sub><i>x</i></sub>, <i>r</i><sub><i>x</i></sub> and <i>t</i><sub><i>n</i>,<i>k</i></sub>(<i>x</i>) vary with <i>x</i>, for <i>n</i>=200 and <i>k</i>=9. It also shows the upper and lower bounds from inequalities (2) and (3).
[caption id="attachment_1226" align="aligncenter" width="399"]<img src="http://bosker.files.wordpress.com/2014/02/graph2.png" alt="Plot of q, r and t against x" width="399" height="309" class="size-full wp-image-1226" /> Plot of q, r and t against x for n=200, k=9[/caption]
You can see how the true value of <i>t</i> zig-zags between the upper and lower bounds, and attains its maximal value 445 at <i>x</i>=89 and <i>x</i>=112. You may also be surprised to see that <i>t</i> behaves symmetrically: this isn’t quite obvious from the formula, though it’s easy enough to prove once you know to look for it.

It remains only to compute the actual maximum value of <i>t</i> over all <i>x</i>. It seems that some amount of brute-force searching over values of <i>x</i> is needed here, or at least I don’t know a better way that always works. But we can limit the search quite substantially, using two observations. First, within a particular <i>q</i>-block – a block of <i>x</i> values that have the same <i>q</i><sub><i>x</i></sub> – the maximal value within that block is attained at one of the endpoints. And second, the maximum value must lie between $latex \frac{n+1}{2}(1\pm1/\sqrt{k})&amp;fg=000000$, because these are the <i>x</i> values where a horizontal line tangent to the lower bound curve intersects the upper bound curve:
[caption id="attachment_1229" align="aligncenter" width="296"]<img src="http://bosker.files.wordpress.com/2014/02/limits1.png" alt="Limiting the search" width="296" height="172" class="size-full wp-image-1229" /> Limiting the search[/caption]

Using the symmetry of <i>t</i>, if we search in this whole range then it is sufficient to consider one of the endpoints of the <i>q</i>-block, say the left-hand one.

Putting these together, we obtain the following algorithm, here implemented in Python 2:

[code language="python"]
from __future__ import division
from math import floor, ceil, sqrt

def max_t(n, k):
    m = 0
    root_k = sqrt(k)
    q = int(ceil((k - root_k) / 2))
    range_end = q + int(floor(root_k))
    while q &lt; range_end:
        x = int(ceil(q * (n+1) / k))
        q, r = divmod(x*k, n+1)
        t_x = x * (k - q) - min(x, r)
        if t_x &gt; m: m = t_x
        q += 1
    
    return m
[/code]

It’s reassuring to learn that, if you had a bike lock with 371 dials and 97 numbers on each dial, you could always open it in 9016 turns – though perhaps disappointing to learn that you will sometimes need as many as that.

Here’s a table of the results for <i>n</i>, <i>k</i> up to 20.
<table>
<tr><th><sub>n</sub>\<sup style="color:black;">k</sup></th>	<th>1</th>	<th>2</th>	<th>3</th>	<th>4</th>	<th>5</th>	<th>6</th>	<th>7</th>	<th>8</th>	<th>9</th>	<th>10</th>	<th>11</th>	<th>12</th>	<th>13</th>	<th>14</th>	<th>15</th>	<th>16</th>	<th>17</th>	<th>18</th>	<th>19</th>	<th>20</th></tr>
<tr><th>1</th>	<td>0</td>	<td>1</td>	<td>1</td>	<td>2</td>	<td>2</td>	<td>3</td>	<td>3</td>	<td>4</td>	<td>4</td>	<td>5</td>	<td>5</td>	<td>6</td>	<td>6</td>	<td>7</td>	<td>7</td>	<td>8</td>	<td>8</td>	<td>9</td>	<td>9</td>	<td>10</td></tr>
<tr><th>2</th>	<td>0</td>	<td>1</td>	<td>2</td>	<td>2</td>	<td>3</td>	<td>4</td>	<td>4</td>	<td>5</td>	<td>6</td>	<td>6</td>	<td>7</td>	<td>8</td>	<td>8</td>	<td>9</td>	<td>10</td>	<td>10</td>	<td>11</td>	<td>12</td>	<td>12</td>	<td>13</td></tr>
<tr><th>3</th>	<td>0</td>	<td>2</td>	<td>2</td>	<td>4</td>	<td>4</td>	<td>6</td>	<td>6</td>	<td>8</td>	<td>8</td>	<td>10</td>	<td>10</td>	<td>12</td>	<td>12</td>	<td>14</td>	<td>14</td>	<td>16</td>	<td>16</td>	<td>18</td>	<td>18</td>	<td>20</td></tr>
<tr><th>4</th>	<td>0</td>	<td>2</td>	<td>3</td>	<td>4</td>	<td>6</td>	<td>6</td>	<td>8</td>	<td>9</td>	<td>10</td>	<td>12</td>	<td>12</td>	<td>14</td>	<td>15</td>	<td>16</td>	<td>18</td>	<td>18</td>	<td>20</td>	<td>21</td>	<td>22</td>	<td>24</td></tr>
<tr><th>5</th>	<td>0</td>	<td>3</td>	<td>4</td>	<td>6</td>	<td>6</td>	<td>9</td>	<td>9</td>	<td>12</td>	<td>12</td>	<td>15</td>	<td>15</td>	<td>18</td>	<td>18</td>	<td>21</td>	<td>21</td>	<td>24</td>	<td>24</td>	<td>27</td>	<td>27</td>	<td>30</td></tr>
<tr><th>6</th>	<td>0</td>	<td>3</td>	<td>4</td>	<td>6</td>	<td>8</td>	<td>9</td>	<td>12</td>	<td>12</td>	<td>15</td>	<td>16</td>	<td>18</td>	<td>20</td>	<td>21</td>	<td>24</td>	<td>24</td>	<td>27</td>	<td>28</td>	<td>30</td>	<td>32</td>	<td>33</td></tr>
<tr><th>7</th>	<td>0</td>	<td>4</td>	<td>5</td>	<td>8</td>	<td>9</td>	<td>12</td>	<td>12</td>	<td>16</td>	<td>16</td>	<td>20</td>	<td>20</td>	<td>24</td>	<td>24</td>	<td>28</td>	<td>28</td>	<td>32</td>	<td>32</td>	<td>36</td>	<td>36</td>	<td>40</td></tr>
<tr><th>8</th>	<td>0</td>	<td>4</td>	<td>6</td>	<td>8</td>	<td>10</td>	<td>12</td>	<td>15</td>	<td>16</td>	<td>20</td>	<td>20</td>	<td>24</td>	<td>25</td>	<td>28</td>	<td>30</td>	<td>32</td>	<td>35</td>	<td>36</td>	<td>40</td>	<td>40</td>	<td>44</td></tr>
<tr><th>9</th>	<td>0</td>	<td>5</td>	<td>6</td>	<td>10</td>	<td>12</td>	<td>15</td>	<td>16</td>	<td>20</td>	<td>20</td>	<td>25</td>	<td>25</td>	<td>30</td>	<td>30</td>	<td>35</td>	<td>36</td>	<td>40</td>	<td>40</td>	<td>45</td>	<td>45</td>	<td>50</td></tr>
<tr><th>10</th>	<td>0</td>	<td>5</td>	<td>7</td>	<td>10</td>	<td>12</td>	<td>15</td>	<td>18</td>	<td>20</td>	<td>24</td>	<td>25</td>	<td>30</td>	<td>30</td>	<td>35</td>	<td>36</td>	<td>40</td>	<td>42</td>	<td>45</td>	<td>48</td>	<td>50</td>	<td>54</td></tr>
<tr><th>11</th>	<td>0</td>	<td>6</td>	<td>8</td>	<td>12</td>	<td>14</td>	<td>18</td>	<td>20</td>	<td>24</td>	<td>25</td>	<td>30</td>	<td>30</td>	<td>36</td>	<td>36</td>	<td>42</td>	<td>42</td>	<td>48</td>	<td>49</td>	<td>54</td>	<td>55</td>	<td>60</td></tr>
<tr><th>12</th>	<td>0</td>	<td>6</td>	<td>8</td>	<td>12</td>	<td>15</td>	<td>18</td>	<td>21</td>	<td>24</td>	<td>28</td>	<td>30</td>	<td>35</td>	<td>36</td>	<td>42</td>	<td>42</td>	<td>48</td>	<td>49</td>	<td>54</td>	<td>56</td>	<td>60</td>	<td>63</td></tr>
<tr><th>13</th>	<td>0</td>	<td>7</td>	<td>9</td>	<td>14</td>	<td>16</td>	<td>21</td>	<td>24</td>	<td>28</td>	<td>30</td>	<td>35</td>	<td>36</td>	<td>42</td>	<td>42</td>	<td>49</td>	<td>49</td>	<td>56</td>	<td>56</td>	<td>63</td>	<td>64</td>	<td>70</td></tr>
<tr><th>14</th>	<td>0</td>	<td>7</td>	<td>10</td>	<td>14</td>	<td>18</td>	<td>21</td>	<td>24</td>	<td>28</td>	<td>32</td>	<td>36</td>	<td>40</td>	<td>42</td>	<td>48</td>	<td>49</td>	<td>56</td>	<td>56</td>	<td>63</td>	<td>64</td>	<td>70</td>	<td>72</td></tr>
<tr><th>15</th>	<td>0</td>	<td>8</td>	<td>10</td>	<td>16</td>	<td>18</td>	<td>24</td>	<td>27</td>	<td>32</td>	<td>35</td>	<td>40</td>	<td>42</td>	<td>48</td>	<td>49</td>	<td>56</td>	<td>56</td>	<td>64</td>	<td>64</td>	<td>72</td>	<td>72</td>	<td>80</td></tr>
<tr><th>16</th>	<td>0</td>	<td>8</td>	<td>11</td>	<td>16</td>	<td>20</td>	<td>24</td>	<td>28</td>	<td>32</td>	<td>36</td>	<td>40</td>	<td>45</td>	<td>49</td>	<td>54</td>	<td>56</td>	<td>63</td>	<td>64</td>	<td>72</td>	<td>72</td>	<td>80</td>	<td>81</td></tr>
<tr><th>17</th>	<td>0</td>	<td>9</td>	<td>12</td>	<td>18</td>	<td>21</td>	<td>27</td>	<td>30</td>	<td>36</td>	<td>40</td>	<td>45</td>	<td>48</td>	<td>54</td>	<td>56</td>	<td>63</td>	<td>64</td>	<td>72</td>	<td>72</td>	<td>81</td>	<td>81</td>	<td>90</td></tr>
<tr><th>18</th>	<td>0</td>	<td>9</td>	<td>12</td>	<td>18</td>	<td>22</td>	<td>27</td>	<td>32</td>	<td>36</td>	<td>40</td>	<td>45</td>	<td>50</td>	<td>55</td>	<td>60</td>	<td>64</td>	<td>70</td>	<td>72</td>	<td>80</td>	<td>81</td>	<td>90</td>	<td>90</td></tr>
<tr><th>19</th>	<td>0</td>	<td>10</td>	<td>13</td>	<td>20</td>	<td>24</td>	<td>30</td>	<td>33</td>	<td>40</td>	<td>44</td>	<td>50</td>	<td>54</td>	<td>60</td>	<td>63</td>	<td>70</td>	<td>72</td>	<td>80</td>	<td>81</td>	<td>90</td>	<td>90</td>	<td>100</td></tr>
<tr><th>20</th>	<td>0</td>	<td>10</td>	<td>14</td>	<td>20</td>	<td>24</td>	<td>30</td>	<td>36</td>	<td>40</td>	<td>45</td>	<td>50</td>	<td>55</td>	<td>60</td>	<td>66</td>	<td>72</td>	<td>77</td>	<td>81</td>	<td>88</td>	<td>90</td>	<td>99</td>	<td>100</td></tr>
</table>

Can anyone find a simpler algorithm?

<h2>Open questions</h2>

This table raises as many questions as it answers. Let’s write the (<i>n</i>,<i>k</i>) entry as <i>m</i>(<i>n</i>,<i>k</i>); then the following conjectures are consistent with the numerical evidence.

<ul>
<li> <i>m</i>(<i>n</i>, <i>k</i>) = <i>m</i>(<i>k</i>-1, <i>n</i>+1)
<li> <i>m</i>(<i>n</i>, <i>n</i>+1) = <i>m</i>(<i>n</i>, <i>n</i>+2) = <i>m</i>(<i>n</i>-1, <i>n</i>+3) = $latex \Bigl\lfloor\frac{(n+1)^2}{4}\Bigr\rfloor&amp;fg=000000$
<li> <i>m</i>(<i>n</i>-1, <i>k</i><i>n</i>) = <i>k</i> <i>m</i>(<i>n</i>-1, <i>n</i>) = $latex k\Bigl\lfloor\frac{n^2}{4}\Bigr\rfloor&amp;fg=000000$
</ul>

<b>Update</b>: I now have an <a href="/2014/02/25/decoding-the-mysterious-symmetry-of-the-bicycle-lock-numbers/">explanation for the symmetry <i>m</i>(<i>n</i>, <i>k</i>) = <i>m</i>(<i>k</i>-1, <i>n</i>+1)</a>.

That analysis also explains the other observations above, since it shows that

<i>m</i>(<i>n</i>, <i>k</i>) = max{ min{<i>a</i><i>c</i>,<i>b</i><i>d</i>} | <i>a</i>+<i>b</i>=<i>n</i>+1, <i>c</i>+<i>d</i>=<i>k</i>, <i>a</i>,<i>b</i>,<i>c</i>,<i>d</i>∈ℕ }

In particular, if there are <i>a</i>,<i>b</i>,<i>c</i>,<i>d</i> such that <i>a</i>+<i>b</i>=<i>n</i>+1, <i>c</i>+<i>d</i>=<i>k</i> and <i>a</i><i>c</i> = <i>b</i><i>d</i> then <i>m</i>(<i>n</i>, <i>k</i>) = <i>a</i><i>c</i> = <i>b</i><i>d</i>. This is the case for the second and third bulleted observations.

<h2>Thanks</h2>
Thanks to <a href="http://www.reddit.com/user/radil">radil</a> for <a href="http://www.reddit.com/r/math/comments/1xavkt/a_question_about_combination_lock_solutions/">posing this problem</a>, and to <a href="http://www.reddit.com/user/_Navi_">_Navi_</a> for some <a href="http://www.reddit.com/r/math/comments/1y91n3/on_the_reddit_bicycle_lock_problem/cfih21m">interesting remarks</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1206</wp:post_id>
  <wp:post_date>2014-02-18 17:13:27</wp:post_date>
  <wp:post_date_gmt>2014-02-18 16:13:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-bicycle-lock-problem</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="algorithms"><![CDATA[algorithms]]></category>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_twitter_publicize_failure</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:13:{s:13:"cache-control";s:8:"no-cache";s:16:"content-encoding";s:7:"deflate";s:14:"content-length";s:2:"96";s:12:"content-type";s:30:"application/json;charset=utf-8";s:4:"date";s:29:"Tue, 18 Feb 2014 16:13:28 GMT";s:6:"server";s:3:"tfe";s:10:"set-cookie";s:100:"guest_id=v1%3A139274000873664320; Domain=.twitter.com; Path=/; Expires=Thu, 18-Feb-2016 16:13:28 UTC";s:6:"status";s:13:"403 Forbidden";s:25:"strict-transport-security";s:17:"max-age=631138519";s:22:"x-content-type-options";s:7:"nosniff";s:15:"x-frame-options";s:10:"SAMEORIGIN";s:13:"x-transaction";s:16:"9d5521592efde7fa";s:16:"x-xss-protection";s:13:"1; mode=block";}s:4:"body";s:92:"{"errors":[{"code":220,"message":"Your credentials do not allow access to this resource."}]}";s:8:"response";a:2:{s:4:"code";i:403;s:7:"message";s:9:"Forbidden";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:8:"guest_id";s:5:"value";s:21:"v1:139274000873664320";s:7:"expires";i:1455812008;s:4:"path";s:1:"/";s:6:"domain";s:12:".twitter.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[robinhouston]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/IrJijFQ6Gr]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_1669861</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>3258</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.176.177.52</wp:comment_author_IP>
    <wp:comment_date>2014-02-19 13:19:58</wp:comment_date>
    <wp:comment_date_gmt>2014-02-19 12:19:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Corrected, thanks!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3257</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1392812398</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1392812398.752214908599853515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1392812398</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-19 12:19:58</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3266</wp:comment_id>
    <wp:comment_author><![CDATA[Decoding the mysterious symmetry of the bicycle lock numbers | Bosker Blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://bosker.wordpress.com/2014/02/25/decoding-the-mysterious-symmetry-of-the-bicycle-lock-numbers/</wp:comment_author_url>
    <wp:comment_author_IP>66.155.8.146</wp:comment_author_IP>
    <wp:comment_date>2014-02-25 10:52:34</wp:comment_date>
    <wp:comment_date_gmt>2014-02-25 09:52:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] the previous post, we found an algorithm for computing these bicycle lock numbers, revealing a mysterious symmetry, [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393321956.0703999996185302734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393321955</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-25 09:52:34</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3257</wp:comment_id>
    <wp:comment_author><![CDATA[HTFB]]></wp:comment_author>
    <wp:comment_author_email>braun@mobquad.org</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>2.28.141.78</wp:comment_author_IP>
    <wp:comment_date>2014-02-19 12:25:45</wp:comment_date>
    <wp:comment_date_gmt>2014-02-19 11:25:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[In paragraph 10, surely "Therefore it must, at a minimum, be reduced _*x*_ times"?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1392809146</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1392809146.573052883148193359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1392809146</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-19 11:25:45</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>4009</wp:comment_id>
    <wp:comment_author><![CDATA[Symmetry of bicycle-lock numbers - MathHub]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.math.theplayhub.com/symmetry_of_bicycle-lock_numbers/</wp:comment_author_url>
    <wp:comment_author_IP>72.52.176.98</wp:comment_author_IP>
    <wp:comment_date>2016-03-20 13:28:48</wp:comment_date>
    <wp:comment_date_gmt>2016-03-20 12:28:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] have found an efficient algorithm to compute these numbers, which reveals a symmetry I can’t currently [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1458476929</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1458476930.1081631183624267578125;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>2390282005_1b88533aa6_b</title>
  <link>https://bosker.wordpress.com/2014/02/18/the-bicycle-lock-problem/2390282005_1b88533aa6_b/</link>
  <pubDate>Mon, 17 Feb 2014 22:32:07 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/02/2390282005_1b88533aa6_b.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[<a href="http://www.flickr.com/photos/photobyaaron/2390282005/">Photo: WickedVT</a>]]></excerpt:encoded>
  <wp:post_id>1209</wp:post_id>
  <wp:post_date>2014-02-17 23:32:07</wp:post_date>
  <wp:post_date_gmt>2014-02-17 22:32:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2390282005_1b88533aa6_b</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1206</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/02/2390282005_1b88533aa6_b.jpg</wp:attachment_url>
</item>
<item>
  <title>differences</title>
  <link>https://bosker.wordpress.com/2014/02/18/the-bicycle-lock-problem/differences/</link>
  <pubDate>Tue, 18 Feb 2014 00:00:53 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/02/differences1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1218</wp:post_id>
  <wp:post_date>2014-02-18 01:00:53</wp:post_date>
  <wp:post_date_gmt>2014-02-18 00:00:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>differences</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1206</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/02/differences1.png</wp:attachment_url>
</item>
<item>
  <title>limits</title>
  <link>https://bosker.wordpress.com/2014/02/18/the-bicycle-lock-problem/limits/</link>
  <pubDate>Tue, 18 Feb 2014 17:22:24 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/02/limits1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1256</wp:post_id>
  <wp:post_date>2014-02-18 18:22:24</wp:post_date>
  <wp:post_date_gmt>2014-02-18 17:22:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>limits</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1206</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/02/limits1.png</wp:attachment_url>
</item>
<item>
  <title>graph</title>
  <link>https://bosker.wordpress.com/2014/02/18/the-bicycle-lock-problem/graph/</link>
  <pubDate>Tue, 18 Feb 2014 17:24:02 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/02/graph2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1257</wp:post_id>
  <wp:post_date>2014-02-18 18:24:02</wp:post_date>
  <wp:post_date_gmt>2014-02-18 17:24:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>graph</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1206</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/02/graph2.png</wp:attachment_url>
</item>
<item>
  <title>Decoding the mysterious symmetry of the bicycle lock numbers</title>
  <link>https://bosker.wordpress.com/?p=1273</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1273</guid>
  <description/>
  <content:encoded><![CDATA[In my previous post, I derived an algorithm for computing the bicycle lock numbers.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1273</wp:post_id>
  <wp:post_date>2014-02-24 20:13:08</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Decoding the mysterious symmetry of the bicycle lock numbers</title>
  <link>https://bosker.wordpress.com/2014/02/25/decoding-the-mysterious-symmetry-of-the-bicycle-lock-numbers/</link>
  <pubDate>Tue, 25 Feb 2014 09:52:26 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1274</guid>
  <description/>
  <content:encoded><![CDATA[Suppose you have a lock of this sort <img src="http://bosker.files.wordpress.com/2014/02/shutterstock_1962912-rescaled.jpg" alt="bicycle lock" width="480" height="320" class="aligncenter size-full wp-image-1275" /> that has <i>n</i> dials and <i>k</i> numbers on each dial. Let <i>m</i>(<i>n</i>, <i>k</i>) be the minimum number of turns that always suffice to open the lock from any starting position, where a turn consists of rotating <b>any number of adjacent rings</b> by one place.

In the <a href="http://bosker.wordpress.com/2014/02/18/the-bicycle-lock-problem/">previous post</a>, we found an algorithm for computing these <i>bicycle lock numbers</i>, revealing a mysterious symmetry,<!--more--> which you can see in this table of values of <i>m</i>(<i>n</i>, <i>k</i>).

<table style="margin:0 auto;">
<tr><th style="text-align:right;width:24px;"><sub>n</sub>\<sup style="color:black;">k</sup></th>
                <th style="text-align:right;width:24px;">2</th>	<th style="text-align:right;width:24px;">3</th>	<th style="text-align:right;width:24px;">4</th>	<th style="text-align:right;width:24px;">5</th>	<th style="text-align:right;width:24px;">6</th>	<th style="text-align:right;width:24px;">7</th>	<th style="text-align:right;width:24px;">8</th>	<th style="text-align:right;width:24px;">9</th>	<th style="text-align:right;width:24px;">10</th>	<th style="text-align:right;width:24px;">11</th>	</tr>
<tr><th style="text-align:right;width:24px;">1</th>	<td style="text-align:right;width:24px;">1</td>	<td style="text-align:right;width:24px;">1</td>	<td style="text-align:right;width:24px;">2</td>	<td style="text-align:right;width:24px;">2</td>	<td style="text-align:right;width:24px;">3</td>	<td style="text-align:right;width:24px;">3</td>	<td style="text-align:right;width:24px;">4</td>	<td style="text-align:right;width:24px;">4</td>	<td style="text-align:right;width:24px;">5</td>	<td style="text-align:right;width:24px;">5</td>	</tr>
<tr><th style="text-align:right;width:24px;">2</th>	<td style="text-align:right;width:24px;">1</td>	<td style="text-align:right;width:24px;">2</td>	<td style="text-align:right;width:24px;">2</td>	<td style="text-align:right;width:24px;">3</td>	<td style="text-align:right;width:24px;">4</td>	<td style="text-align:right;width:24px;">4</td>	<td style="text-align:right;width:24px;">5</td>	<td style="text-align:right;width:24px;">6</td>	<td style="text-align:right;width:24px;">6</td>	<td style="text-align:right;width:24px;">7</td>	</tr>
<tr><th style="text-align:right;width:24px;">3</th>	<td style="text-align:right;width:24px;">2</td>	<td style="text-align:right;width:24px;">2</td>	<td style="text-align:right;width:24px;">4</td>	<td style="text-align:right;width:24px;">4</td>	<td style="text-align:right;width:24px;">6</td>	<td style="text-align:right;width:24px;">6</td>	<td style="text-align:right;width:24px;">8</td>	<td style="text-align:right;width:24px;">8</td>	<td style="text-align:right;width:24px;">10</td>	<td style="text-align:right;width:24px;">10</td>	</tr>
<tr><th style="text-align:right;width:24px;">4</th>	<td style="text-align:right;width:24px;">2</td>	<td style="text-align:right;width:24px;">3</td>	<td style="text-align:right;width:24px;">4</td>	<td style="text-align:right;width:24px;">6</td>	<td style="text-align:right;width:24px;">6</td>	<td style="text-align:right;width:24px;">8</td>	<td style="text-align:right;width:24px;">9</td>	<td style="text-align:right;width:24px;">10</td>	<td style="text-align:right;width:24px;">12</td>	<td style="text-align:right;width:24px;">12</td>	</tr>
<tr><th style="text-align:right;width:24px;">5</th>	<td style="text-align:right;width:24px;">3</td>	<td style="text-align:right;width:24px;">4</td>	<td style="text-align:right;width:24px;">6</td>	<td style="text-align:right;width:24px;">6</td>	<td style="text-align:right;width:24px;">9</td>	<td style="text-align:right;width:24px;">9</td>	<td style="text-align:right;width:24px;">12</td>	<td style="text-align:right;width:24px;">12</td>	<td style="text-align:right;width:24px;">15</td>	<td style="text-align:right;width:24px;">15</td>	</tr>
<tr><th style="text-align:right;width:24px;">6</th>	<td style="text-align:right;width:24px;">3</td>	<td style="text-align:right;width:24px;">4</td>	<td style="text-align:right;width:24px;">6</td>	<td style="text-align:right;width:24px;">8</td>	<td style="text-align:right;width:24px;">9</td>	<td style="text-align:right;width:24px;">12</td>	<td style="text-align:right;width:24px;">12</td>	<td style="text-align:right;width:24px;">15</td>	<td style="text-align:right;width:24px;">16</td>	<td style="text-align:right;width:24px;">18</td>	</tr>
<tr><th style="text-align:right;width:24px;">7</th>	<td style="text-align:right;width:24px;">4</td>	<td style="text-align:right;width:24px;">5</td>	<td style="text-align:right;width:24px;">8</td>	<td style="text-align:right;width:24px;">9</td>	<td style="text-align:right;width:24px;">12</td>	<td style="text-align:right;width:24px;">12</td>	<td style="text-align:right;width:24px;">16</td>	<td style="text-align:right;width:24px;">16</td>	<td style="text-align:right;width:24px;">20</td>	<td style="text-align:right;width:24px;">20</td>	</tr>
<tr><th style="text-align:right;width:24px;">8</th>	<td style="text-align:right;width:24px;">4</td>	<td style="text-align:right;width:24px;">6</td>	<td style="text-align:right;width:24px;">8</td>	<td style="text-align:right;width:24px;">10</td>	<td style="text-align:right;width:24px;">12</td>	<td style="text-align:right;width:24px;">15</td>	<td style="text-align:right;width:24px;">16</td>	<td style="text-align:right;width:24px;">20</td>	<td style="text-align:right;width:24px;">20</td>	<td style="text-align:right;width:24px;">24</td>	</tr>
<tr><th style="text-align:right;width:24px;">9</th>	<td style="text-align:right;width:24px;">5</td>	<td style="text-align:right;width:24px;">6</td>	<td style="text-align:right;width:24px;">10</td>	<td style="text-align:right;width:24px;">12</td>	<td style="text-align:right;width:24px;">15</td>	<td style="text-align:right;width:24px;">16</td>	<td style="text-align:right;width:24px;">20</td>	<td style="text-align:right;width:24px;">20</td>	<td style="text-align:right;width:24px;">25</td>	<td style="text-align:right;width:24px;">25</td>	</tr>
<tr><th style="text-align:right;width:24px;">10</th>	<td style="text-align:right;width:24px;">5</td>	<td style="text-align:right;width:24px;">7</td>	<td style="text-align:right;width:24px;">10</td>	<td style="text-align:right;width:24px;">12</td>	<td style="text-align:right;width:24px;">15</td>	<td style="text-align:right;width:24px;">18</td>	<td style="text-align:right;width:24px;">20</td>	<td style="text-align:right;width:24px;">24</td>	<td style="text-align:right;width:24px;">25</td>	<td style="text-align:right;width:24px;">30</td>	</tr>
</table>

It looks as though <i>m</i>(<i>a</i>, <i>b</i>+1) = <i>m</i>(<i>b</i>, <i>a</i>+1) for all positive integers <i>a</i> and <i>b</i>. Also I verified this by computer for the first ten million rows of the table, so it seems plausible that it’s generally true.

On the face of it this is quite mysterious. For example, why can a lock with 4 dials of 10 numbers each – like the one pictured above – always be unlocked in the same number of turns as a lock that has 10 dials with 5 numbers each? The connection between the (4, 10)-lock and the (10, 5)-lock is not very obvious: one has 10<sup>4</sup> = 10,000 combinations and the other has 5<sup>10</sup> = 9,765,625 combinations.

<h2>The mystery solved</h2>

Anyway, it turns out that there <i>is</i> a simple connection, if you think about it in the right way. The overall plan is this: although an (<i>a</i>, <i>b</i>+1) and a (<i>b</i>, <i>a</i>+1)-lock generally have very different numbers of combinations (e.g. ten thousand versus almost ten million, as above), we can group together “equivalent” combinations in such a way that:
<ol>
<li>Equivalent combinations need the same number of turns to unlock.
<li>there is a natural bijection between the equivalence classes of combinations of the (<i>a</i>, <i>b</i>+1)-lock and the equivalence classes of combinations of the (<i>b</i>, <i>a</i>+1)-lock.
</ol>

So we’re going to progressively discard extraneous information about the combination – information that doesn’t affect the number of turns needed to open the lock starting from that combination – till we find the symmetrical core.

As before, we’re going to assume throughout that the destination combination, that opens the (<i>n</i>, <i>k</i>)-lock, is <i>n</i> zeros.

The first trick is one we used last time: instead of looking at the positions of the dials, look at the <i>differences</i> between the positions of adjacent dials. On its own this doesn’t discard any information – the process is reversible – but it opens the door to a nice initial simplification: <i>the order of the differences doesn’t matter</i>.

Here’s an example, for the (4, 10)-lock. Take the combination <code>0136</code>, which has differences <code>01234</code>. Using the technique from last time, we see that 0+1+2+3+4 = 1×10, so we add the smallest 5-1 = 4 of the differences, and the number of turns needed to open the lock is 0+1+2+3 = 6. If the differences were reordered, say as <code>30142</code>, the number of turns needed would be the same, and the corresponding starting lock combination would be <code>3348</code>. Reordering the differences establishes an equivalence relation on combinations according to which <code>0136</code> is equivalent to <code>3348</code> for the (4, 10)-lock, and equivalent combinations always take the same number of turns to open. From now on we’ll write the sequence of differences in nondecreasing order.

To motivate the next identification we’re going to make, let’s consider another example combination of the (4, 10)-lock: <code>2593</code> with differences <code>23447</code>. This time the differences sum to 2×10, which means we can ignore the two largest differences and add up the others, so this combination takes 2+3+4 = 9 turns to open. But, since the two largest differences didn’t even enter into the calculation, they could have been <i>any</i> pair of numbers that are both at least 4 and sum to 11. In this case, of course, there’s only one other possibility: they could have been 5 and 6 so that the differences were <code>23456</code>. The combination <code>2594</code> has these differences, so in this sense the combinations <code>2593</code> and <code>2594</code> are also equivalent. We shall denote this equivalence class, naturally enough, by the sequence (2,3,4), the initial segment of the nondecreasing sequence of differences that sums to the number of turns needed. We’ll call that a <i>lock sequence</i> for the (4, 10)-lock.

<h2>Is there room in the attic for all the boxes?</h2>

Now let’s characterise the lock sequences.

Let <i>d</i><sub>1</sub>, <i>d</i><sub>2</sub>, …, <i>d</i><sub><i>m</i></sub> be a nondecreasing sequence of natural numbers less than <i>k</i> having length <i>m</i> ≤ <i>n</i>; this is a lock sequence for the (<i>n</i>, <i>k</i>)-lock if

$latex \sum_{i=1}^{m}d_i+(n+1-m)(k-1)\geq (n+1-m)k&amp;fg=000000$
and
$latex \sum_{i=1}^{m}d_i + (n+1-m)d_m\leq(n+1-m)k&amp;fg=000000$

which simplifies to

$latex n+1-m\leq\sum_{i=1}^{m}d_i\leq(n+1-m)(k-d_m)&amp;fg=000000$

The first inequality is a bit annoying, so let's get rid of it by making one last identification: we’ll identify lock sequences that differ only by leading zeros, and assume a canonical form that has no leading zeros. If the first inequality fails, we can force it to hold by adding leading zeros, thus increasing <i>m</i>. So now we’re left with

$latex \sum_{i=1}^{m}d_i\leq(n+1-m)(k-d_m)&amp;fg=000000$

I like to imagine this condition as meaning, “Is there room in the attic for all the boxes?”. Maybe that will make more sense if I draw a picture:
[caption id="attachment_1289" align="aligncenter" width="422"]<img src="http://bosker.files.wordpress.com/2014/02/boxes-and-attic.png" alt="Can we fit the boxes into the attic?" width="422" height="206" class="size-full wp-image-1289" /> Can we fit the boxes into the attic?[/caption]
This picture depicts the sequence (1,1,2,2,2,2,3,3) as an arrangement of 16 boxes, and an “attic” of area $latex (n+1-m)(k-d_m)&amp;fg=000000$, all within an (<i>n</i>+1)×<i>k</i> rectangle. Now let’s flip it over and move the attic back to the top, like so:
[caption id="attachment_1290" align="aligncenter" width="218"]<img src="http://bosker.files.wordpress.com/2014/02/boxes-and-attic-flipped.png" alt="Flipped" width="218" height="425" class="size-full wp-image-1290" /> Flipped[/caption]

We still have the same arrangement of boxes and the same size attic, just both flipped, so this new sequence – (2,6,8) in this example – is a valid sequence for the (<i>k</i>-1, <i>n</i>)-lock provided only the original was a valid sequence for the (<i>n</i>, <i>k</i>)-lock. Flipping the arrangement of boxes like this is known to mathematicians as <a href="http://en.wikipedia.org/wiki/Young_diagram#Diagrams">conjugating a Young diagram</a>. Notice how this process exchanges the values of <i>m</i> and <i>d</i><sub><i>m</i></sub>.

So, we’ve shown that every lock sequence for the (<i>n</i>, <i>k</i>)-lock can be transformed into a lock sequence for the (<i>k</i>-1, <i>n</i>)-lock that has the same sum. It follows that it takes at least as many moves, in general, to open a (<i>k</i>-1, <i>n</i>)-lock as a (<i>n</i>, <i>k</i>)-lock. Since this works in both directions, we may conclude that <i>m</i>(<i>n</i>, <i>k</i>) = <i>m</i>(<i>k</i>-1, <i>n</i>).

<i>I also posted this argument <a href="http://math.stackexchange.com/a/689228/49965">on Mathematics Stack Exchange</a>.</i>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1274</wp:post_id>
  <wp:post_date>2014-02-25 10:52:26</wp:post_date>
  <wp:post_date_gmt>2014-02-25 09:52:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>decoding-the-mysterious-symmetry-of-the-bicycle-lock-numbers</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>draftfeedback_requests</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:13:"530be100939f7";a:3:{s:3:"key";s:13:"530be100939f7";s:4:"time";s:10:"1393287424";s:7:"user_id";s:6:"235913";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>draft_feedback</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:13:"530be100939f7";a:1:{i:0;a:2:{s:4:"time";s:10:"1393314805";s:7:"content";s:493:"Congratulations! Yes, I think that's compelling. I'd got as far as your "box" picture but not to the necessary & sufficient inequality. Is it worth emphasising that "the same arrangement of boxes" in the conjugate diagram means the same count of boxes, i.e. that the term Σdi remains the same after conjugation? 

(I've put the same comment up at Math Exchange, since I'd forgotten where your DM suggested I look for the proof. Checking tweets in the small hours; terrible sign of addiction.)";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_twitter_publicize_failure</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:13:{s:13:"cache-control";s:8:"no-cache";s:16:"content-encoding";s:7:"deflate";s:14:"content-length";s:2:"96";s:12:"content-type";s:30:"application/json;charset=utf-8";s:4:"date";s:29:"Tue, 25 Feb 2014 09:52:28 GMT";s:6:"server";s:3:"tfe";s:10:"set-cookie";s:100:"guest_id=v1%3A139332194874578028; Domain=.twitter.com; Path=/; Expires=Thu, 25-Feb-2016 09:52:28 UTC";s:6:"status";s:13:"403 Forbidden";s:25:"strict-transport-security";s:17:"max-age=631138519";s:22:"x-content-type-options";s:7:"nosniff";s:15:"x-frame-options";s:10:"SAMEORIGIN";s:13:"x-transaction";s:16:"c6e88a71d0520686";s:16:"x-xss-protection";s:13:"1; mode=block";}s:4:"body";s:92:"{"errors":[{"code":220,"message":"Your credentials do not allow access to this resource."}]}";s:8:"response";a:2:{s:4:"code";i:403;s:7:"message";s:9:"Forbidden";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:8:"guest_id";s:5:"value";s:21:"v1:139332194874578028";s:7:"expires";i:1456393948;s:4:"path";s:1:"/";s:6:"domain";s:12:".twitter.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[robinhouston]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/1Xj57rE6RS]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_1669861</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_50e19001c1fb6da6b5cb88c513fec5de</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>bicycle lock</title>
  <link>https://bosker.wordpress.com/2014/02/25/decoding-the-mysterious-symmetry-of-the-bicycle-lock-numbers/shutterstock_1962912-rescaled/</link>
  <pubDate>Mon, 24 Feb 2014 19:21:28 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/02/shutterstock_1962912-rescaled.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1275</wp:post_id>
  <wp:post_date>2014-02-24 20:21:28</wp:post_date>
  <wp:post_date_gmt>2014-02-24 19:21:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>shutterstock_1962912-rescaled</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1274</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/02/shutterstock_1962912-rescaled.jpg</wp:attachment_url>
</item>
<item>
  <title>boxes-and-attic</title>
  <link>https://bosker.wordpress.com/2014/02/25/decoding-the-mysterious-symmetry-of-the-bicycle-lock-numbers/boxes-and-attic/</link>
  <pubDate>Mon, 24 Feb 2014 23:42:53 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/02/boxes-and-attic.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Can we fit the boxes into the attic?]]></excerpt:encoded>
  <wp:post_id>1289</wp:post_id>
  <wp:post_date>2014-02-25 00:42:53</wp:post_date>
  <wp:post_date_gmt>2014-02-24 23:42:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>boxes-and-attic</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1274</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/02/boxes-and-attic.png</wp:attachment_url>
</item>
<item>
  <title>boxes-and-attic-flipped</title>
  <link>https://bosker.wordpress.com/2014/02/25/decoding-the-mysterious-symmetry-of-the-bicycle-lock-numbers/boxes-and-attic-flipped/</link>
  <pubDate>Mon, 24 Feb 2014 23:54:03 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/02/boxes-and-attic-flipped.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Flipped]]></excerpt:encoded>
  <wp:post_id>1290</wp:post_id>
  <wp:post_date>2014-02-25 00:54:03</wp:post_date>
  <wp:post_date_gmt>2014-02-24 23:54:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>boxes-and-attic-flipped</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1274</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/02/boxes-and-attic-flipped.png</wp:attachment_url>
</item>
<item>
  <title>Revisiting “On editing text”</title>
  <link>https://bosker.wordpress.com/2014/06/19/revisiting-on-editing-text/</link>
  <pubDate>Thu, 19 Jun 2014 00:25:29 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1316</guid>
  <description/>
  <content:encoded><![CDATA[<em>This document is an incomplete draft.</em>

About two years ago I <a title="On editing text" href="http://bosker.wordpress.com/2012/05/10/on-editing-text/">wrote about a category-theoretic treatment of collaborative text editing</a>. That post is unique in the history of Bosker Blog in having been cited – twice so far that I know of – in the academic literature; so it’s a little embarrassing for me to have to explain that it is almost entirely wrong. The good news is that the core idea can be rescued, and the corrected story is quite interesting. Other writers on this subject seem to have made at least some of the same mistakes I did, so I hope this will be useful to at least a few other people too.<!--more-->

I was considering the problem of collaborative text editing, where several people separately and simultaneously are editing the same document and communicating their changes asynchronously to each other:

<img class="aligncenter size-full wp-image-762" src="https://bosker.files.wordpress.com/2012/05/diag01.png" alt="diag01" width="284" height="143" />

Each editor must then incorporate the other’s change into their version of the document, which must be done in such a way that they both end up with the same thing:

<img class="aligncenter size-full wp-image-763" src="https://bosker.files.wordpress.com/2012/05/diag02.png" alt="diag02" width="299" height="252" />

The hard case is where Tom and Sarah’s changes overlap: say they have both changed the same word to something different. In the example I used, the document read “The cat sat on the mat”, and they both select the word cat:

<img class="aligncenter size-full wp-image-778" src="https://bosker.files.wordpress.com/2012/05/screen-shot-2012-05-09-at-21-13-34.png" alt="The cat sat on the mat" width="157" height="38" />

Then Tom types ‘dog’, and Sarah types ‘chicken’. This appears to be unresolvable if we require our documents to be linear – but we can achieve a canonical resolution if we permit non-linear documents:

<img class="aligncenter size-large wp-image-780" src="https://bosker.files.wordpress.com/2012/05/the_dogchicken_sat_on.png?w=480" alt="the_dogchicken_sat_on" width="480" height="47" />

In general the resolved document contains all the characters that neither editor changed, together with all the characters inserted by Tom and all the characters inserted by Sarah, ordered in the minimal way that is consistent with both documents.

So far so good. Now it starts to go wrong. There are two fundamental problems: pushouts imply pathological documents, and deletions lead to disaster. In turn:
<h2>Pushouts imply pathological documents</h2>
I said this resolution was a pushout in a category of edits. That is not true as I stated it, and moreover I think the examples show that we don’t <i>want</i> it to be true.

My previous example will not do here, since “dog” and “chicken” have no letters in common. Let us suppose, then, that instead of dog and chicken we have badger and donkey:

<img class="aligncenter wp-image-1329 size-large" src="https://bosker.files.wordpress.com/2014/06/donkey-badger.png?w=480" alt="donkey-badger" width="480" height="49" />

Let us recall what it means for the resolution to be a pushout. Start with a document that we shall call A, and suppose that, simultaneously:
<ul>
	<li>Tom makes an edit, call it f, resulting in the document B;</li>
	<li>Sarah makes an edit, call it g, resulting in the document C.</li>
</ul>
These edits are propagated: both parties run the resolution algorithm, and then Tom applies Sarah’s edit and Sarah applies Tom’s. Let’s label the resolved version of f as f', the resolved version of g as g', and the resulting document P.
<img class="aligncenter size-full wp-image-1344" src="http://bosker.files.wordpress.com/2014/06/pushout.png" alt="pushout" width="92" height="86" />

[…]

Now, the properties of the pushout require that, given any resolution of the two edits (“The donkey sat…” and “The badger sat…”) there must be a unique edit from the pushout to this other resolution. One possible resolution would be to insert letters into the name of the animal to make “badonkeyger”:

<img class="aligncenter size-full wp-image-1346" src="http://bosker.files.wordpress.com/2014/06/badonkeyger.png" alt="badonkeyger" width="297" height="274" />

&nbsp;

In other words, the properties of the pushout require us to admit an edit that takes the parallel donkey/badger and flattens it out, <em>identifying the two d’s</em>.

This seems perverse. It certainly is not in line with my intuition about what sorts of edits ought to be permissible. But it gets worse! By admitting these strange edits that merge letters from parallel tracks, we have opened the door to yet stranger things such as cyclic documents. Consider the following pair of edits that merge two parallel tracks. The bold pink <strong>d</strong> in badonkeydonkger indicates the image of the  ‘d’ in badger: it could have been merged with either of the two d’s in donkeydonk. Resolving this pair of edits will necessarily create a cyclic document.

<img class="aligncenter size-full wp-image-1332" src="http://bosker.files.wordpress.com/2014/06/badonkeydonkger.png" alt="badonkeydonkger" width="373" height="285" />

Samuel Mimram and Cinzia Di Giusto’s article <a href="http://arxiv.org/abs/1311.3903"><em>A Categorical Theory of Patches</em></a> – rather like my earlier <em>On Editing Text</em> – develops a theory where edits are resolved as pushouts. Unlike me, however, they recognised this issue, which they deal with by admitting cyclic documents into their theory. I shall take the alternative approach of arguing that, on the contrary, these examples show that pushouts do not correctly model edit resolution.

It’s okay that our resolutions are not pushouts, because they still have the property we really wanted in the first place: that edits can be resolved in any order and give the same answer. (And it’s good that they’re not, because if they were we would have to admit circularities etc.)
<h2>Deletions lead to disaster</h2>
The second problem is worse, because we get different answers depending on what order we process the edits. To resolve it we’ll have to change the way we represent deletions.

We’ll start with the document “ABC” and consider three different edits of this document:
<ol>
	<li>Insert v and w to get “AvBwC”;</li>
	<li>Insert x and y to get “AxByC”;</li>
	<li>Delete the B to get “AC”.</li>
</ol>
Now, combining (1) and (2) gives:

<img class="aligncenter size-full wp-image-1333" src="http://bosker.files.wordpress.com/2014/06/avxbwyc.png" alt="AvxBwyC" width="110" height="43" />

And combining that with (3) gives:

<img class="aligncenter size-full wp-image-1334" src="http://bosker.files.wordpress.com/2014/06/avx-wyc.png" alt="Avx.wyC" width="100" height="43" />

On the other hand, if we resolved these edits in a different order then we get a different answer. Combining (1) and (3) gives “AvwC”, then combining that with (2) gives:

<img class="aligncenter size-full wp-image-1335" src="http://bosker.files.wordpress.com/2014/06/avw-xyc.png" alt="Avw.xyC" width="82" height="43" />

So this resolution procedure is not order-independent, which is very bad. In particular it cannot be a pushout, which I believe shows that Mimram and Di Giusto’s Theorem 20 is false.
<h2>Avoiding deletions using tombstones</h2>
We can avoid this problem by not allowing characters to be deleted. When a user deletes a character, rather than removing it from the internal representation of the document, replace it with a <em>tombstone</em> marking where the character used to be.

We don’t need to keep these tombstones around for ever, I don’t think. Once we’re sure that an edit has been incorporated by all clients, there is no harm in discarding the tombstones it produced.

An object of the category – a document – is a triple (A, ≤, s) where (A, ≤) is the poset of positions and s: A → Σ assigns a symbol to each position.

A morphism f: A→B is a function such that for all x, y in A:
<ol>
	<li>x ≤ y ⇔ f(x) ≤ f(y)</li>
	<li>Either s(f(x)) = s(x) or s(f(x)) is a tombstone.</li>
</ol>
The resolution R of  f: A→B and  g: A→C has positions A + (B-f[A]) + (C-g[A]). Note that A + (B-f[A]) is isomorphic to B, and A + (C-g[A]) is isomorphic to C. The order of positions is inherited from B and C:
<ul>
	<li>If b ≤ b' in B then b ≤ b' in R</li>
	<li>If c ≤ c' in C then c ≤ c' in R</li>
	<li>b ≤ c, for b∈B and c∈C, if there is some a∈A such that b ≤ f(a) in B and g(a) ≤ c in C</li>
	<li>c ≤ b, for b∈B and c∈C, if there is some a∈A such that c ≤ g(a) in C and f(a) ≤ b in B</li>
</ul>
The assignment of characters to positions is:
<ul>
	<li>s<sub>R</sub>(b) = s<sub>B</sub>(b) for b∈B,</li>
	<li>s<sub>R</sub>(c) = s<sub>C</sub>(c) for c∈C,</li>
	<li>s<sub>R</sub>(a) is a tombstone if either s<sub>B</sub>(f(a)) or s<sub>C</sub>(g(a)) is; otherwise s<sub>R</sub>(a) = s<sub>B</sub>(f(a)) = s<sub>C</sub>(g(a)).</li>
</ul>
<h2>What about the connection to the exception monad?</h2>
As I understand the situation at the moment, that doesn’t work. Constructing the category of edits in that way seems to rely on having real deletions – which we’ve seen we can’t have.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1316</wp:post_id>
  <wp:post_date>2014-06-19 01:25:29</wp:post_date>
  <wp:post_date_gmt>2014-06-19 00:25:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>revisiting-on-editing-text</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="algorithms"><![CDATA[algorithms]]></category>
  <category domain="category" nicename="category-theory"><![CDATA[category theory]]></category>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[robinhouston]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/75SRaiRecU]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_twitter_publicize_failure</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:16:"]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_1669861</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>3393</wp:comment_id>
    <wp:comment_author><![CDATA[On editing text | Bosker Blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://bosker.wordpress.com/2012/05/10/on-editing-text/</wp:comment_author_url>
    <wp:comment_author_IP>66.135.48.179</wp:comment_author_IP>
    <wp:comment_date>2014-06-19 01:27:06</wp:comment_date>
    <wp:comment_date_gmt>2014-06-19 00:27:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Added 2014-06-18: it turns out that the story is more interesting than I realised when I wrote this, and that almost all of the technical details below are wrong. I am in the process of writing an account of what I currently believe on this subject. [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1403137627</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1403137627.4190540313720703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-06-19 00:27:28</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>donkey-badger</title>
  <link>https://bosker.wordpress.com/2014/06/19/revisiting-on-editing-text/donkey-badger/</link>
  <pubDate>Wed, 18 Jun 2014 22:13:17 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/06/donkey-badger.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1329</wp:post_id>
  <wp:post_date>2014-06-18 23:13:17</wp:post_date>
  <wp:post_date_gmt>2014-06-18 22:13:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>donkey-badger</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1316</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/06/donkey-badger.png</wp:attachment_url>
</item>
<item>
  <title>the-d-sat</title>
  <link>https://bosker.wordpress.com/2014/06/19/revisiting-on-editing-text/the-d-sat/</link>
  <pubDate>Wed, 18 Jun 2014 22:34:32 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/06/the-d-sat.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1330</wp:post_id>
  <wp:post_date>2014-06-18 23:34:32</wp:post_date>
  <wp:post_date_gmt>2014-06-18 22:34:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-d-sat</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1316</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/06/the-d-sat.png</wp:attachment_url>
</item>
<item>
  <title>Editing text, talk at Calgary 2014-06-04</title>
  <link>https://bosker.wordpress.com/2014/06/19/revisiting-on-editing-text/editing-text-talk-at-calgary-2014-06-04/</link>
  <pubDate>Wed, 18 Jun 2014 22:45:08 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/06/editing-text-talk-at-calgary-2014-06-04.pdf</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1331</wp:post_id>
  <wp:post_date>2014-06-18 23:45:08</wp:post_date>
  <wp:post_date_gmt>2014-06-18 22:45:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>editing-text-talk-at-calgary-2014-06-04</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1316</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/06/editing-text-talk-at-calgary-2014-06-04.pdf</wp:attachment_url>
</item>
<item>
  <title>badonkeydonkger</title>
  <link>https://bosker.wordpress.com/2014/06/19/revisiting-on-editing-text/badonkeydonkger/</link>
  <pubDate>Wed, 18 Jun 2014 23:15:45 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/06/badonkeydonkger.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1332</wp:post_id>
  <wp:post_date>2014-06-19 00:15:45</wp:post_date>
  <wp:post_date_gmt>2014-06-18 23:15:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>badonkeydonkger</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1316</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/06/badonkeydonkger.png</wp:attachment_url>
</item>
<item>
  <title>AvxBwyC</title>
  <link>https://bosker.wordpress.com/2014/06/19/revisiting-on-editing-text/avxbwyc/</link>
  <pubDate>Thu, 19 Jun 2014 00:11:31 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/06/avxbwyc.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1333</wp:post_id>
  <wp:post_date>2014-06-19 01:11:31</wp:post_date>
  <wp:post_date_gmt>2014-06-19 00:11:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>avxbwyc</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1316</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/06/avxbwyc.png</wp:attachment_url>
</item>
<item>
  <title>Avx.wyC</title>
  <link>https://bosker.wordpress.com/2014/06/19/revisiting-on-editing-text/avx-wyc/</link>
  <pubDate>Thu, 19 Jun 2014 00:14:08 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/06/avx-wyc.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1334</wp:post_id>
  <wp:post_date>2014-06-19 01:14:08</wp:post_date>
  <wp:post_date_gmt>2014-06-19 00:14:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>avx-wyc</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1316</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/06/avx-wyc.png</wp:attachment_url>
</item>
<item>
  <title>Avw.xyC</title>
  <link>https://bosker.wordpress.com/2014/06/19/revisiting-on-editing-text/avw-xyc/</link>
  <pubDate>Thu, 19 Jun 2014 00:17:26 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/06/avw-xyc.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1335</wp:post_id>
  <wp:post_date>2014-06-19 01:17:26</wp:post_date>
  <wp:post_date_gmt>2014-06-19 00:17:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>avw-xyc</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1316</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/06/avw-xyc.png</wp:attachment_url>
</item>
<item>
  <title>pushout</title>
  <link>https://bosker.wordpress.com/2014/06/19/revisiting-on-editing-text/pushout/</link>
  <pubDate>Thu, 19 Jun 2014 07:35:27 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/06/pushout.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1344</wp:post_id>
  <wp:post_date>2014-06-19 08:35:27</wp:post_date>
  <wp:post_date_gmt>2014-06-19 07:35:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>pushout</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1316</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/06/pushout.png</wp:attachment_url>
</item>
<item>
  <title>badonkeyger</title>
  <link>https://bosker.wordpress.com/2014/06/19/revisiting-on-editing-text/badonkeyger/</link>
  <pubDate>Thu, 19 Jun 2014 09:25:54 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/06/badonkeyger.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1346</wp:post_id>
  <wp:post_date>2014-06-19 10:25:54</wp:post_date>
  <wp:post_date_gmt>2014-06-19 09:25:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>badonkeyger</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1316</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/06/badonkeyger.png</wp:attachment_url>
</item>
<item>
  <title>Zen Garden Puzzle</title>
  <link>https://bosker.wordpress.com/?p=1349</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1349</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://nontrivialgames.blogspot.co.uk/2013/12/zen-garden-puzzle-announcement.html">Zen Garden Puzzle</a> is a puzzle game by Nicola Salmoria, who trades under the excellent name Nontrivial Games. That’s also the title of the <a href="http://nontrivialgames.blogspot.co.uk/">blog</a> where he reviews iPhone and iPad puzzle games.

This game caught my eye partly because its name is similar to my old favourite <a href="http://www.lexaloffle.com/zen.htm">Zen Puzzle Garden</a>, by Joseph White’s <a href="http://www.lexaloffle.com/">Lexaloffle Games</a>. Several years ago, when I ought to have been working on my PhD dissertation, I spent some happy days first playing Zen Puzzle Garden and then proving it to be NP-complete. This proof was later published as <a href="http://arxiv.org/abs/1106.2104">a joint paper</a> with Joseph White and <a href="http://www.martynamos.com/">Martyn Amos</a>.

Anyway, back to Zen Garden Puzzle. The puzzles are beautifully simple. The playing area consists of a 7×7 grid partitioned into 7 polyominoes, and the aim is to place seven stones in such a way that there is one in each row, one in each column, and one in each polyomino.

<img class="aligncenter wp-image-1350 size-large" src="http://bosker.files.wordpress.com/2014/08/img_0083-e1407947761989.png?w=480" alt="A Zen Garden Puzzle" width="480" height="510" />

<!--more-->It’s a simplified version of a pencil-and-paper puzzle called Star Battle which <a href="http://www.gmpuzzles.com/blog/star-battle-rules-and-info/">according to Thomas Synder</a> was “created by Hans Eendebak for the 2003 World Puzzle Championship”. (It’s similar to the 1★ version of Star Battle, but without Star Battle’s rule forbidding two stones to be adjacent.)

The game itself is elegant and of unusually high build quality: it has never crashed, and I have yet to find even a trivial bug. The gameplay is rather too unforgiving for my taste, since progress depends on solving the puzzles in a small number of moves, with no option to undo mistakes, and at the highest level it literally requires you to <a href="http://nontrivialgames.blogspot.co.uk/2014/03/zen-garden-puzzle-three-moves-suffice.html">solve the whole thing in your head and then execute the solution optimally</a>.
<h2>How hard is it?</h2>
As with any puzzle game, the <strong>real</strong> fun is in the meta-game of establishing its computational complexity. It’s one of those games that feels like it ought to be NP-complete – since it’s obviously in NP but doesn’t feel trivial – but I couldn’t immediately see how to prove that. I finally had a chance to think about it properly while I was on holiday last week, and I’ll outline the proof here.

At this point I should be clear that of course I’m talking about the arbitrary-size version played on an n×n grid partitioned into n poly0minoes, and that the NP-complete decision problem is the problem of determining whether a particular partitioned grid has a solution.

The game itself presents a slightly different problem: we know that the puzzles presented there have not only a solution but a <em>unique</em> solution, and our task is to find that solution. Now, it seems that this additional information might make the problem easier, since knowing that the solution is unique allows us to rule out certain configurations. In the puzzle pictured above, we know the solution cannot have stones in both the positions marked below with <strong><span style="color:#ff0000;">x</span></strong><span style="color:#000000;">, because then we could swap columns to put them in the <span style="color:#0000ff;"><strong>x</strong></span> positions instead, making a different solution.</span>

<img class="aligncenter size-medium wp-image-1353" src="http://bosker.files.wordpress.com/2014/08/zgp-xxxx.png?w=277" alt="ZGP-xxxx" width="277" height="300" />

However, it turns out that this doesn’t help enough to make a polynomial-time algorithm possible. There is a lovely <a href="http://www.sciencedirect.com/science/article/pii/0304397586901350">result of Valiant and Vazirani</a> that we can use to show that the game itself – where we may assume that a unique solution exists, and have only to find it – has no polynomial-time algorithm unless all NP problems can be solved by a randomised polynomial-time algorithm – i.e. RP=NP, which is generally thought to be pretty much as implausible as P=NP. (I first heard of this result <a href="http://blog.computationalcomplexity.org/2005/08/sudoku-revisited.html">from Lance Fortnow in 2005, when I asked him about the complexity of solving Sudoku puzzles</a>.)
<h2>The proof</h2>
We’ll start with the problem of determining whether a puzzle has a solution, without any assumptions about uniqueness. The plan is to show this is NP-complete.

It’s obvious that it’s in NP: a solution can be verified in polynomial time simply by looking at each row, column and polyomino and making sure it contains one stone.

To show NP-completeness, the idea is to find a “reduction”, an encoding of some known-to-be-NP-hard problem. Almost all NP-completeness proofs are of this form.

The first thing to note is that Zen Garden puzzles are a a restricted sort of “three-dimensional matching” problem (which is conventionally abbreviated 3DM). The three dimensions are: rows, columns, polyominoes; each cell of the grid has a value in each dimension – i.e. it belongs to a row, to a column, and to a polyomino. Now, 3DM is known to be NP-complete. That doesn’t immediately get us anywhere, since a restricted form of an NP-complete problem is not necessarily NP-complete any more. But it turns out in this case that we will be able to find a reduction that converts any arbitrary instance of 3DM into a Zen Garden puzzle.

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1349</wp:post_id>
  <wp:post_date>2014-08-13 22:08:20</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="complexity"><![CDATA[complexity]]></category>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>draftfeedback_requests</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:13:"53ebd462e8515";a:3:{s:3:"key";s:13:"53ebd462e8515";s:4:"time";s:10:"1407964258";s:7:"user_id";s:6:"235913";}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>A Zen Garden Puzzle</title>
  <link>https://bosker.wordpress.com/?attachment_id=1350</link>
  <pubDate>Wed, 13 Aug 2014 16:33:34 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/08/img_0083.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1350</wp:post_id>
  <wp:post_date>2014-08-13 17:33:34</wp:post_date>
  <wp:post_date_gmt>2014-08-13 16:33:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_0083</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1349</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/08/img_0083-e1407947761989.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_backup_sizes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:1536;s:6:"height";i:2048;s:4:"file";s:12:"img_0083.png";}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>ZGP-xxxx</title>
  <link>https://bosker.wordpress.com/?attachment_id=1353</link>
  <pubDate>Wed, 13 Aug 2014 17:21:37 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/08/zgp-xxxx.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1353</wp:post_id>
  <wp:post_date>2014-08-13 18:21:37</wp:post_date>
  <wp:post_date_gmt>2014-08-13 17:21:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>zgp-xxxx</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1349</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/08/zgp-xxxx.png</wp:attachment_url>
</item>
<item>
  <title>Tackling the Minimal Superpermutation Problem</title>
  <link>https://bosker.wordpress.com/2014/08/22/tackling-the-minimal-superpermutation-problem/</link>
  <pubDate>Fri, 22 Aug 2014 02:47:37 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1359</guid>
  <description/>
  <content:encoded><![CDATA[What’s the shortest string that contains every possible permutation of ABCD somewhere inside it? As it happens, it’s 33 letters long: ABCDABCADBCABDCABACDBACBDACBADCBA. A string like this is called a <em>minimal superpermutation</em>.

So what’s the shortest string that contains every possible permutation of ABCDE? It was recently shown that <a href="http://www.njohnston.ca/2014/08/all-minimal-superpermutations-on-five-symbols-have-been-found/">153 letters is the shortest possible, and that there are eight different superpermutations of this length</a>.

Okay, what about ABCDEF? The answer is that <strong>nobody knows</strong>. Until this week the shortest known superpermutation of ABCDEF was 873 letters long:

[code light="true"]
ABCDEFABCDEAFBCDEABFCDEABCFDEABCDFEABCDAEFBCDAEBFCDAEBCFDAEBCDFAEB
CDAFEBCDABEFCDABECFDABECDFABECDAFBECDABFECDABCEFDABCEDFABCEDAFBCED
ABFCEDABCFEDABCADEFBCADEBFCADEBCFADEBCAFDEBCADFEBCADBEFCADBECFADBE
CAFDBECADFBECADBFECADBCEFADBCEAFDBCEADFBCEADBFCEADBCFEADBCAEFDBCAE
DFBCAEDBFCAEDBCFAEDBCAFEDBCABDEFCABDECFABDECAFBDECABFDECABDFECABDC
EFABDCEAFBDCEABFDCEABDFCEABDCFEABDCAEFBDCAEBFDCAEBDFCAEBDCFAEBDCAF
EBDCABEFDCABEDFCABEDCFABEDCAFBEDCABFEDCABACDEFBACDEBFACDEBAFCDEBAC
FDEBACDFEBACDBEFACDBEAFCDBEACFDBEACDFBEACDBFEACDBAEFCDBAECFDBAECDF
BAECDBFAECDBAFECDBACEFDBACEDFBACEDBFACEDBAFCEDBACFEDBACBDEFACBDEAF
CBDEACFBDEACBFDEACBDFEACBDAEFCBDAECFBDAECBFDAECBDFAECBDAFECBDACEFB
DACEBFDACEBDFACEBDAFCEBDACFEBDACBEFDACBEDFACBEDAFCBEDACFBEDACBFEDA
CBADEFCBADECFBADECBFADECBAFDECBADFECBADCEFBADCEBFADCEBAFDCEBADFCEB
ADCFEBADCBEFADCBEAFDCBEADFCBEADCFBEADCBFEADCBAEFDCBAEDFCBAEDCFBAED
CBFAEDCBAFEDCBA
[/code]

and it was thought that might be the shortest possible.

But we now know it isn’t, because I found a shorter one:

[code light="true"]
ABCDEFABCDEAFBCDEABFCDEABCFDEACBFDEACFBDEACFDBEACFDEBACFDEABCDFEAB
CDAEFBCDAEBFCDAEBCFDAEBCDFAEBCDAFEBCDABEFCDABECFDABECDFABECDAFBECD
ABFECDABCEFDABCEDFABCEDAFBCEDABFCEDABCFEDACBFEDCABFDECAFBDCEAFBDCA
EFBDCAFEBDCAFBEDCAFBDECAFDBECADFBECADBFECADBEFCADBECFADBECAFDEBCAD
FEBCADEFBCADEBFCADEBCFADEBCAFDECBAFDECABFDCEABFDCAEBFDCABEFDCBAEFD
BCAEDFBCAEDBFCAEDBCFAEDBCAFEDBCAEFDBACEFDBAECFBDAECFBADECFBAEDCFBA
ECDFBACEDFBACDEFBACDFEBACDFBEACDFBAECFDBAEFCDBAFECDBAFCEDBAFCDEBAF
CDBEAFCDBAEFDCBEAFDCBEFADCBEFDACBEFDCABFEDCBAFEDCBFAECDBFACEDBFACD
EBFACDBEFACDBFEACDBFAECBDFEACBDFECABDFCEABDFCAEBDFCABEDFCBAEDFCBEA
DFCBEDAFCBEDFACBEDFCABDEFCBADEFCBDAEFCBDEAFCBDEFACBDEFCABDFECBADFE
CBDAFECBDFAECBFDAECBFADECBFAEDCBFEADCFBEADCFEBADCEFBADCEBFADCEBAFD
CEBADFCEBADCFEABDCFAEBDCFABEDCFABDECFABDCEFABDCFEADBCEFADBCEAFDBCE
ADFBCEADBFCEADBCFEADCBFEDACFBEDACFEBDACEFBDACEBFDACEBDFACEBDAFCEBD
ACFEDBACFEDABC
[/code]

I’ve uploaded a <a href="http://arxiv.org/abs/1408.5108">short note about it to the arxiv</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1359</wp:post_id>
  <wp:post_date>2014-08-22 03:47:37</wp:post_date>
  <wp:post_date_gmt>2014-08-22 02:47:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tackling-the-minimal-superpermutation-problem</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <category domain="category" nicename="news"><![CDATA[news]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_twitter_publicize_failure</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:16:"]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[robinhouston]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/GV9k6D9ey5]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>3484</wp:comment_id>
    <wp:comment_author><![CDATA[Roberto Canogar (@RCanogar)]]></wp:comment_author>
    <wp:comment_author_email>RCanogar@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/RCanogar</wp:comment_author_url>
    <wp:comment_author_IP>83.32.91.58</wp:comment_author_IP>
    <wp:comment_date>2014-08-23 17:08:46</wp:comment_date>
    <wp:comment_date_gmt>2014-08-23 16:08:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[&gt;It’s very natural to think about cyclical superpermutations. One of the
&gt;reasons I thought the conjecture must be false was that the 
&gt;corresponding conjecture for cyclical superpermutations had already 
&gt;been falsified at n=5 by Benjamin Chaffin’s examples.

That was a great insight! So looking at Ben Chaffin's examples (http://www.njohnston.ca/superperm5.txt) the first 2 would give a cyclical superpermutation of length 152, and the other 6 a length of 151. But it looks that a cyclical superpermutation of length 150 could be possible: it would be obtained from a classical superpermutation of length 154 that ends with ...1234.

&gt; I played around with deleting edges of weight above a particular 
&gt; threshold. ... Interestingly I found that LKH performed less well with 
&gt; this change.

Surprising.

&gt; Another observation is that the edges that occur in the known minimal 
&gt; paths are all of the form s.t\rightarrow t.s^{\mathrm{rev}}. 

There must be a reason for that.

&gt; But restricting the graph to edges of this form again seems to hinder 
&gt; rather than help the search.

Again surprising!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3483</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://pbs.twimg.com/profile_images/474963055944552448/rmcqcjTz_normal.jpeg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>66862912</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1408810126</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-08-23 16:08:48</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1408810126</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1408810126.840775966644287109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3485</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>217.137.142.54</wp:comment_author_IP>
    <wp:comment_date>2014-08-23 17:24:06</wp:comment_date>
    <wp:comment_date_gmt>2014-08-23 16:24:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[There isn't a five-symbol cyclical superpermutation of length 150. It isn't hard to argue that such a thing would imply a classical superpermutation of length 152; or of course one can throw Concorde at it.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3484</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1408811046</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-08-23 16:24:06</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1408811046.4838008880615234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1408811046</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3482</wp:comment_id>
    <wp:comment_author><![CDATA[Roberto Canogar (@RCanogar)]]></wp:comment_author>
    <wp:comment_author_email>RCanogar@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/RCanogar</wp:comment_author_url>
    <wp:comment_author_IP>2.136.117.182</wp:comment_author_IP>
    <wp:comment_date>2014-08-22 22:41:16</wp:comment_date>
    <wp:comment_date_gmt>2014-08-22 21:41:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Well, after some more searching I've found something similar to what I was calling “cyclical superpermutation” in the previous comment. It is the concept of "universal cycles" (http://www.math.ucsd.edu/~ronspubs/92_06_universal_cycles.pdf and http://arxiv.org/pdf/0710.5611.pdf).

A "universal cycle" is a cyclic sequence where you have to fit in all the substrings of a set (for example the set of all permutations of [n]={1,2,..,n}), but as in De Bruijn sequences each substring has to appear *exactly* once. It is proved that for permutations this can not be done so they attack the problem of k-permutations of [n] for k&lt;n. The case k=n-1 is important and can be solved. 

The condition of a unique appearance of each substring in &quot;universal cycles&quot; makes the problem different than the &quot;cyclic superpermutations&quot;.

So, have “cyclical superpermutation” already been studied?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://pbs.twimg.com/profile_images/474963055944552448/rmcqcjTz_normal.jpeg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>66862912</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1408743676</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-08-22 21:41:19</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1408743676</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1408743676.8346040248870849609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3479</wp:comment_id>
    <wp:comment_author><![CDATA[Roberto Canogar (@RCanogar)]]></wp:comment_author>
    <wp:comment_author_email>RCanogar@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/RCanogar</wp:comment_author_url>
    <wp:comment_author_IP>2.136.117.182</wp:comment_author_IP>
    <wp:comment_date>2014-08-22 19:29:45</wp:comment_date>
    <wp:comment_date_gmt>2014-08-22 18:29:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice achievement, Robin, congrats!

I have a few comments. 

The standard notation to describe a superpermutation is with numbers. Is there any reason why you changed the standard notation to the alphabet? Is it because the phrasing of the problem is with strings and substrings and therefore using the alphabet is more pertinent?

Talking about your note on the Arxiv, thanks for section 4 (first paragraph), it is very enlightening! It is a shame that Concorde algorithm failed for n=6. But at least you found a counterexample to the conjectured minimum by the randomized method. The counterexample makes the problem more intriguing.

There is an obvious connection of this problem to the De Bruijn sequences (http://en.wikipedia.org/wiki/De_Bruijn_sequence) as Nathaniel Johnston describes in his paper. In De Bruijn sequences you have to fit in all possible sequences of length n (including the ones with repetitions). BTW, one of the standard methods of obtaining De Bruijn sequences is through Hamiltonian cycle in the De Bruijn graph. Did you get the great idea of using the TSP from there? Anyway, there is another difference between both problems, De Bruijn squences are cyclical, while in superpermutations the beginning and the end are not linked.

So, finally, have you considered the problem of having a "cyclical superpermutation"? That is, a string with no beginning and no end of min length such that all permutations of n symbols appear as contiguos substrings? This problem is more related to De Bruijn sequences and IMO it is more natural. The problem you are attacking has some boundaries (beginning &amp; end) which make it a bit ackward. It is a much less symmetric problem. I have searched a little bit the literature but found nothing about a "cyclical superpermutation" problem or something like that. Of course the TSP is easier to apply because you don't have to "change the weights of certain edges to 0".

One last thing, you apply the TSP to a complete weighted directed graph with n! vertices. But can't you delete edges that have a weight of 3 or more? I am not sure about this, but intuitively it seems that the discrepancy can not be very high at any step, right?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://pbs.twimg.com/profile_images/474963055944552448/rmcqcjTz_normal.jpeg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>66862912</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1408732185</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-08-22 18:29:46</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1408732185</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1408732185.2237579822540283203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3477</wp:comment_id>
    <wp:comment_author><![CDATA[Athene]]></wp:comment_author>
    <wp:comment_author_email>athene@ahouston.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>81.129.119.102</wp:comment_author_IP>
    <wp:comment_date>2014-08-22 15:48:10</wp:comment_date>
    <wp:comment_date_gmt>2014-08-22 14:48:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[What a genius you are. Do you get your brains from your mother or your father?]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1408718890</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-08-22 14:48:11</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1408719427.0867879390716552734375;s:7:"message";s:47:"bosker changed the comment status to unapproved";s:5:"event";s:17:"status-unapproved";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1408718890.8197228908538818359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1408718890</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3483</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>217.137.142.54</wp:comment_author_IP>
    <wp:comment_date>2014-08-23 09:03:40</wp:comment_date>
    <wp:comment_date_gmt>2014-08-23 08:03:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks, Roberto. Nice comment.

There's no good reason I used ABCD rather than 1234 here. It was just for the sake of variety. As you say, there's no particular reason to prefer one set of symbols over another. I think I was influenced by <a href="https://twitter.com/standupmaths/status/445544416405889024" rel="nofollow">this tweet of Matt Parker's from March</a>.

I wasn't explicitly thinking about De Bruijn sequences. <a href="http://www.reddit.com/r/math/comments/1c2uy6/the_minimal_superpermutation_problem/c9clm3u" rel="nofollow">A reddit discussion last year</a> explicitly relates the minimal superpermutation problem to finding a minimal-weight Hamiltonian path, so that wasn't an original idea. I think in any case it's a natural way to think about the problem.

It's very natural to think about cyclical superpermutations. One of the reasons I thought the conjecture must be false was that the corresponding conjecture for cyclical superpermutations had already been falsified at n=5 by Benjamin Chaffin's examples.

I played around with deleting edges of weight above a particular threshold. If you look at my Python script for generating the instances, you'll see options to do that. Interestingly I found that LKH performed less well with this change.

<del datetime="2014-08-25T14:28:17+00:00">Another observation is that the edges that occur in the known minimal paths are all of the form $latex s.t\rightarrow t.s^{\mathrm{rev}}$</del>. <ins datetime="2014-08-25T14:28:17+00:00">Edit: not quite true.</ins> But restricting the graph to edges of this form again seems to hinder rather than help the search.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3479</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1408781020</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1408781020.536159038543701171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-08-23 08:03:41</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1408781020</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>The Government Statistical Service’s terrible spreadsheet advice</title>
  <link>https://bosker.wordpress.com/2014/12/05/the-government-statistical-services-terrible-spreadsheet-advice/</link>
  <pubDate>Fri, 05 Dec 2014 01:53:16 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.wordpress.com/?p=1373</guid>
  <description/>
  <content:encoded><![CDATA[The UK Government Statistical Service recently released its <a href="https://gss.civilservice.gov.uk/wp-content/uploads/2012/12/Releasing-statistics-in-spreadsheets-Good-practice-guidance.pdf">good practice guidance for releasing statistics in spreadsheets</a>. While this advice is clearly well-intentioned<sup>*</sup>, and parts of it are good, the overall effect is to encourage the release of data in formats that are difficult to process by computer. This is a disappointing retrograde step.

<!--more-->

The following spreadsheet is shown in Annex A: <img class="aligncenter size-full wp-image-1375" src="https://bosker.files.wordpress.com/2014/12/screen-shot-2014-12-03-at-21-46-29.png" alt="Screen Shot 2014-12-03 at 21.46.29" width="480" height="246" />

If you work with data, I apologise for making you look at that. If you don’t, I should explain it is the sort of spreadsheet that, if you had to work with it, would cause you to wail in anguish and despair and demand to know what you had done to deserve such a fate. To enumerate the most serious problems briefly:
<ul>
	<li>Data and metadata are mixed together willy-nilly in the same sheet.</li>
	<li>The meaning of the columns – the ones that have a meaning, and aren’t just blank for layout purposes – is specified by <i>four</i> different rows, two of which use merged cells.</li>
	<li>Worst of all, background colour is used to convey the reliability of each estimate: information that is not provided in any other form. If the spreadsheet is converted to CSV – which is usually the first step when doing any serious work – this vital information is lost.</li>
</ul>
The use of minus signs to denote missing data, which might be irritating in an otherwise well-designed spreadsheet, is in this context so insignificant a problem as barely to register.

This spreadsheet is presented as a “good practice example”.

It isn’t as though the authors don’t know how to make a useful spreadsheet. Their example of a “spreadsheet focused on reusability”<sup>†</sup> is pretty much spot-on. But their advice on presentation ignores usability, where it doesn’t actively sabotage it. They recognise that there is a tension when they write:
<blockquote>“Providing an output which reconciles the requirement for clarity of presentation with reusable data can be hard.”</blockquote>
But that isn’t good enough. All data should be provided in a usable form, and ‘clarity of presentation’ shouldn’t be an excuse for poor usability.

We need an alternative, <strong>real good practice guide</strong> to releasing statistics in spreadsheets. I don’t see why it should be more than a page or so. Our attempt is online at <a href="http://www.clean-sheet.org/">clean-sheet.org</a>. What have we got wrong, or missed out? Leave your suggestions in the comments below or submit a pull request to <a href="https://github.com/robinhouston/clean-sheet">the git repository</a>.

<hr />

* <a href="https://gss.civilservice.gov.uk/blog/2014/12/gss-spreadsheet-guidance/">Getting behind the GSS spreadsheet guidance</a> describes the well-intentioned process that led to this unfortunate outcome.

† The guidance uses the word “reusability” for the quality we’re calling usability.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1373</wp:post_id>
  <wp:post_date>2014-12-05 02:53:16</wp:post_date>
  <wp:post_date_gmt>2014-12-05 01:53:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-government-statistical-services-terrible-spreadsheet-advice</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
  <category domain="category" nicename="kiln"><![CDATA[Kiln]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[235913]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/7jPZpObjUW]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[robinhouston]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_twitter_publicize_failure</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:16:"]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_1669861</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>3621</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>94.175.15.11</wp:comment_author_IP>
    <wp:comment_date>2014-12-05 10:27:04</wp:comment_date>
    <wp:comment_date_gmt>2014-12-05 09:27:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Most of it? I think of my bullet points only “Don’t use colour or other stylistic cues…” is implied by your test.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3619</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1417771624</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417771624.6863400936126708984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1417771624</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3623</wp:comment_id>
    <wp:comment_author><![CDATA[goodpracticenw]]></wp:comment_author>
    <wp:comment_author_email>nickwoodhill1@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://goodpracticenw.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>62.25.106.209</wp:comment_author_IP>
    <wp:comment_date>2014-12-05 16:02:02</wp:comment_date>
    <wp:comment_date_gmt>2014-12-05 15:02:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Robin, thanks for the feedback - you raise some interesting point ...

1.	For the benefit of your readers, the example you've used above was cited in our guidance as an example of using shading to reflect uncertainty, not as an all-round example of good practice (as there are certainly other aspects of that example we would not recommend). Communicating uncertainty is a current hot topic for the Government Statistical Service and we wanted a real example to demonstrate this point. They have: visually presented uncertainty, provided information on sample size and explained confidence intervals. Unfortunately, GSS spreadsheets do not typically include this sort of information as standard. 

2.	Its clear that your primary consideration is data provided in a usable form (and that clarity of presentation isn’t an excuse for poor usability). When we work with producers to help implement this guidance, I will remind them of your frustrations.

3.	It seems that much of the much of the tension here can be removed when producers provide two spreadsheets – one for data re-use and one for presentation, as suggested above in the comments section. This is also suggested in our section on releasing data in open formats, together with an example from the Department for Education.

4.	Looking at your checklist, you will see that we do address most of these points, albeit with a different emphasis for presentation and re-use spreadsheets. There was a certain amount of discussion in development on whether the metadata should ride closely with the statistics to help avoid misinterpretation or be separated as you suggest. We advised against including pivot tables, as these do not work in the OpenDocument format.

5.	We will be looking to update this guidance next year – to take on feedback and to keep up to date regarding the open data / open statistics agenda. The suggestions on what you would put in a new good practice guide is helpful.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>72779125</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1417791723</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1417791722</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417791722.8483159542083740234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"goodpracticenw";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3619</wp:comment_id>
    <wp:comment_author><![CDATA[HTFB]]></wp:comment_author>
    <wp:comment_author_email>braun@mobquad.org</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>2.27.182.56</wp:comment_author_IP>
    <wp:comment_date>2014-12-05 09:42:15</wp:comment_date>
    <wp:comment_date_gmt>2014-12-05 08:42:15</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Most of this could be covered by a simple test: is the sheet invariant under the operation of saving as .csv and reimporting into the same spreadsheet program?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1417768936</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1417768936</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417768936.3217809200286865234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3620</wp:comment_id>
    <wp:comment_author><![CDATA[Seán Clarke (@SeanClarke)]]></wp:comment_author>
    <wp:comment_author_email>SeanClarke@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/SeanClarke</wp:comment_author_url>
    <wp:comment_author_IP>80.254.158.92</wp:comment_author_IP>
    <wp:comment_date>2014-12-05 09:48:37</wp:comment_date>
    <wp:comment_date_gmt>2014-12-05 08:48:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I think you could then add something of this sort:

"If you also want to create a human-friendly presentation of this data, do so by creating another sheet in the same workbook and referencing the appropriate cells in the canonical data sheet."

Everyone wins.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://pbs.twimg.com/profile_images/540448760292073472/SRhAH01S_normal.png</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>1784991</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1417769317</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417769317.7093770503997802734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1417769317</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3624</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.185.249.103</wp:comment_author_IP>
    <wp:comment_date>2014-12-05 16:08:30</wp:comment_date>
    <wp:comment_date_gmt>2014-12-05 15:08:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for taking the time to read this. Yes, I agree that the difference is essentially one of emphasis and that your good practice guide contains much good advice. As you say, my real concern is that it doesn’t – in my view – place sufficient emphasis on the importance of not sacrificing machine-readability when improving the presentation. The fact that using cell shading to express uncertainty is presented as good practice is symptomatic of that failure, I think.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3623</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1417792111</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>4051576852</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1417792111</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417792111.2294490337371826171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3908</wp:comment_id>
    <wp:comment_author><![CDATA[Who is the intended audience for open data? | Lost Boy]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://blog.ldodds.com/2015/11/24/who-is-the-intended-audience-for-open-data/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.114.71</wp:comment_author_IP>
    <wp:comment_date>2015-11-24 18:29:23</wp:comment_date>
    <wp:comment_date_gmt>2015-11-24 17:29:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] we mustn&#8217;t forget that data needs to be human-readable too. Otherwise we end up with critiques of what I consider to be fairly reasonable and much-needed guidance on structuring spreadsheets, [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1448386164</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1448386165.43933391571044921875;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Screen Shot 2014-12-03 at 21.46.29</title>
  <link>https://bosker.wordpress.com/2014/12/05/the-government-statistical-services-terrible-spreadsheet-advice/screen-shot-2014-12-03-at-21-46-29/</link>
  <pubDate>Fri, 05 Dec 2014 00:02:28 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2014/12/screen-shot-2014-12-03-at-21-46-29.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1375</wp:post_id>
  <wp:post_date>2014-12-05 01:02:28</wp:post_date>
  <wp:post_date_gmt>2014-12-05 00:02:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2014-12-03-at-21-46-29</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1373</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2014/12/screen-shot-2014-12-03-at-21-46-29.png</wp:attachment_url>
</item>
<item>
  <title>Counting coins</title>
  <link>https://bosker.wordpress.com/2015/04/26/counting-coins/</link>
  <pubDate>Sun, 26 Apr 2015 21:42:52 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/?p=1409</guid>
  <description/>
  <content:encoded><![CDATA[This afternoon, <a href="https://twitter.com/matlock">Matt Locke</a> tweeted the following problem from his nine-year-old daughter’s maths homework:

<a href="https://twitter.com/matlock/status/592308642948489216/photo/1"><img class="alignnone size-full wp-image-1410" src="https://bosker.files.wordpress.com/2015/04/3975.jpg" alt="3975" width="598" height="305" /></a>

<!--more-->

Coins in general circulation in the UK come in the denominations 1p, 2p, 5p, 10p, 20p, 50p, £1 and £2, and I think we are supposed to assume that the coins in the problem are drawn from this set.

It’s a curious sort of homework problem, because there is no obvious systematic way to approach it. Presumably the intention is that the child will fiddle about with numbers until they either hit on a solution or give up.

But that is not a very mathematically satisfying approach. It piqued my interest partly because it’s essentially a system of two linear diophantine equations in eight variables. If we let $latex c_{1}$ be the number of 1p coins, $latex c_2$ the number of 2p coins, etc., then we have:

$latex \begin{aligned}c_1 + 2c_2 + 5c_5 + 10c_{10} + 20c_{20} + 50c_{50} + 100c_{100} + 200c_{200} &amp;= 3975 \\ c_1 + c_2 + c_5 + c_{10} + c_{20} + c_{50} + c_{100} + c_{200} &amp;= 100 \end{aligned}&amp;fg=000000$

with the additional constraint that precisely five of the eight variables should have non-zero values.

(I have been thinking about systems of linear diophantine equations quite a lot recently, because they play a central role in Lambert’s version of Mayr’s algorithm for Petri net reachability, but that’s another story.)

Now, there <em>are</em> systematic algorithms for finding all the solutions to such a system of equations. If the variables are allowed to take negative values, it is not too hard: the algorithm was first <a href="http://www.jstor.org/stable/108738">described by Henry J. Stephen Smith in 1861</a>, and the structure he used is nowadays known as the <a href="https://en.wikipedia.org/wiki/Smith_normal_form">Smith normal form</a>. But if we want only non-negative solutions, as we do here, then it is harder. One algorithm is due to Evelyne Contejean and Hervé Devie in 1994: <a href="http://www.sciencedirect.com/science/article/pii/S0890540184710674">An Efficient Incremental Algorithm for Solving Systems of Linear Diophantine Equations</a>.

I think Contejean-Devie is roughly as good as any algorithm for this problem, but I’m not an expert. <a href="http://www.risc.jku.at/education/courses/ss2012/algorithms/kutsia.pdf">Here are some slides that explain the algorithm pretty clearly</a>. Since all the coefficients are positive, our example has only finitely many solutions and the Contejean-Devie algorithm reduces to a brute-force search.

Another algorithm that would do the job is due to <a href="http://msp.org/pjm/1966/16-2/pjm-v16-n2-p09-p.pdf">Seymour Ginsburg and Edwin Spanier (1966)</a>. Since the set of solutions can be described in Presburger arithmetic, Ginsburg and Spanier’s procedure can extract an explicit finite presentation of this set. But this algorithm is likely to be even slower; it is actually <a href="http://www.lcs.mit.edu/publications/pubs/ps/MIT-LCS-TM-043.ps">provable</a> – <em>without making any unproven assumptions about complexity classes such as P≠NP</em> – that it must take at least doubly-exponential time in the worst case.

So there isn’t obviously any better way to approach the problem than brute force, and I was intrigued enough with the problem by this point to try a simple-minded attack in Python:

[code lang="python"]
from itertools import combinations

COINS = (1, 2, 5, 10, 20, 50, 100, 200)
TARGET = 3975

def partitions(n, k):
    &quot;&quot;&quot;All the partitions of n into k positive integers.
    &quot;&quot;&quot;
    if k == 1:
        yield (n,)
        return
    for i in range(1, n):
        for p in partitions(n-i, k-1):
            yield (i,) + p

def dot(xs, ys):
    return sum([ x*y for x,y in zip(xs, ys) ])

for coin_values in combinations(COINS, 5):
    for counts in partitions(100, 5):
        if dot(coin_values, counts) == TARGET:
            print tuple(zip(counts, coin_values))
[/code]

This is literally just systematically checking each of the combinations of 100 coins of five different denominations, and printing out the ones that add up to the right amount.

It turns out that there are <a href="http://bl.ocks.org/robinhouston/raw/775d6217209978da5f92/table.html">33,798 solutions</a>.

At that point I couldn’t stop, and I implemented first <a href="https://github.com/robinhouston/coins/blob/master/quickcoins.py">a slightly better algorithm in Python</a> and then a <a href="https://github.com/robinhouston/coins/blob/master/coins.c">C version of the better algorithm</a>.

(This last can print all 33,798 solutions in about one second, which is about 90 times faster than the Python equivalent. It’s worth reminding ourselves from time to time just how much processing power we are wasting when we code in inefficient high-level languages like Python, and marvelling at the raw speed and power of modern computers.)

Weird question to ask a nine-year-old, anyway.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1409</wp:post_id>
  <wp:post_date>2015-04-26 22:42:52</wp:post_date>
  <wp:post_date_gmt>2015-04-26 21:42:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>counting-coins</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="algorithms"><![CDATA[algorithms]]></category>
  <category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_twitter_publicize_failure</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:18:{s:13:"cache-control";s:8:"no-cache";s:19:"content-disposition";s:30:"attachment; filename=json.json";s:16:"content-encoding";s:7:"deflate";s:14:"content-length";s:2:"96";s:12:"content-type";s:30:"application/json;charset=utf-8";s:4:"date";s:29:"Sun, 26 Apr 2015 21:42:55 GMT";s:6:"server";s:5:"tsa_a";s:10:"set-cookie";s:100:"guest_id=v1%3A143008457509465749; Domain=.twitter.com; Path=/; Expires=Tue, 25-Apr-2017 21:42:55 UTC";s:6:"status";s:13:"403 Forbidden";s:25:"strict-transport-security";s:17:"max-age=631138519";s:17:"x-connection-hash";s:32:"140d0b49bb33de81372dda80f624dbbf";s:22:"x-content-type-options";s:7:"nosniff";s:15:"x-frame-options";s:10:"SAMEORIGIN";s:15:"x-response-time";s:1:"7";s:13:"x-transaction";s:16:"f8b8b6acccf7132d";s:23:"x-tsa-request-body-time";s:1:"1";s:23:"x-twitter-response-tags";s:16:"BouncerCompliant";s:16:"x-xss-protection";s:13:"1; mode=block";}s:4:"body";s:92:"{"errors":[{"code":220,"message":"Your credentials do not allow access to this resource."}]}";s:8:"response";a:2:{s:4:"code";i:403;s:7:"message";s:9:"Forbidden";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:8:"guest_id";s:5:"value";s:21:"v1:143008457509465749";s:7:"expires";i:1493156575;s:4:"path";s:1:"/";s:6:"domain";s:12:".twitter.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[robinhouston]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/qWMef9c768]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5705</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:34650516;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>3770</wp:comment_id>
    <wp:comment_author><![CDATA[Jes Sherborne]]></wp:comment_author>
    <wp:comment_author_email>jes.sherborne@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.jessherborne.com</wp:comment_author_url>
    <wp:comment_author_IP>24.13.83.107</wp:comment_author_IP>
    <wp:comment_date>2015-04-27 16:14:29</wp:comment_date>
    <wp:comment_date_gmt>2015-04-27 15:14:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[That *is* a crazy homework problem for age 9. 

Here's an alternative approach. If you care about just one solution rather than all of them, any integer programming library would make quick work of it. You might choose your objective function to minimize the number of coins; then you would use the problem above as your constraints. In this case, the tricky constraint is enforcing that the number of non-zeros is exactly 5, but there are standard ways to do it. (In short, you introduce a set of binary indicator variables for each kind of coin and add a handful of constraints to link them to the main part of the model).

When I started working with the commercial libraries like CPLEX and Gurobi, I was totally shocked at how effective they were.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>10009487883</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1430147672</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1430147671</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430147672.046389102935791015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"jessherborne";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3760</wp:comment_id>
    <wp:comment_author><![CDATA[James Smith (@Floppy)]]></wp:comment_author>
    <wp:comment_author_email>Floppy@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/Floppy</wp:comment_author_url>
    <wp:comment_author_IP>86.160.80.173</wp:comment_author_IP>
    <wp:comment_date>2015-04-27 09:23:40</wp:comment_date>
    <wp:comment_date_gmt>2015-04-27 08:23:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I can't help wondering which of those solutions is "correct" in the marking. Are the 9-year-olds taught some method for this sort of problem that would arrive at a particular result?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1430123021</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430123021.2497689723968505859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>8314922</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1430123021</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://pbs.twimg.com/profile_images/590123309473206272/oyrzs7PJ_normal.png</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3772</wp:comment_id>
    <wp:comment_author><![CDATA[HTFB]]></wp:comment_author>
    <wp:comment_author_email>braun@mobquad.org</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>2.27.176.153</wp:comment_author_IP>
    <wp:comment_date>2015-04-27 17:54:40</wp:comment_date>
    <wp:comment_date_gmt>2015-04-27 16:54:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Though I now see that there are also <a href="http://en.wikipedia.org/wiki/Half_dollar_%28United_States_coin%29" rel="nofollow">circulating half-dollar coins</a>, so the premise is wrong.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3766</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1430153680</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430153680.823584079742431640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>10012562555</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1430153680</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3766</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.187.127.171</wp:comment_author_IP>
    <wp:comment_date>2015-04-27 12:24:03</wp:comment_date>
    <wp:comment_date_gmt>2015-04-27 11:24:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Interesting! I can believe it was originally a US question. There are <a href="https://gist.github.com/robinhouston/a393c4486187c1366462" rel="nofollow">657 solutions</a> using 1¢, 5¢, 10¢, 25¢, and $1 coins.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3765</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1430133844</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430133844.249785900115966796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>10003009588</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1430133844</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3762</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>81.99.216.21</wp:comment_author_IP>
    <wp:comment_date>2015-04-27 09:37:39</wp:comment_date>
    <wp:comment_date_gmt>2015-04-27 08:37:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Perhaps they meant bitcoins. :-)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3761</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1430123859</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430123859.1602718830108642578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1430123859</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3763</wp:comment_id>
    <wp:comment_author><![CDATA[pozorvlak]]></wp:comment_author>
    <wp:comment_author_email>miles@assyrian.org.uk</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>5.56.172.8</wp:comment_author_IP>
    <wp:comment_date>2015-04-27 11:49:10</wp:comment_date>
    <wp:comment_date_gmt>2015-04-27 10:49:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I agree that this is a strange problem to give a nine-year old, but it's a standard algorithms problem, discussed in for instance SICP. Keeping a running total of the total value of the coins selected so far lets you bail out of the loop early, greatly shrinking the search space. More at my blog here: http://pozorvlak.livejournal.com/150560.html (read the comments!).]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>43312762</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1430131750</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430131750.97486209869384765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"pozorvlak";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1430131751</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3768</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.187.127.171</wp:comment_author_IP>
    <wp:comment_date>2015-04-27 13:46:23</wp:comment_date>
    <wp:comment_date_gmt>2015-04-27 12:46:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks. So, is the algorithm you’re talking about different from <a href="https://github.com/robinhouston/coins/blob/master/quickcoins.py" rel="nofollow">my “improved” one</a> – and if so, how is it different?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3767</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1430138784</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430138784.455111026763916015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>10005177106</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1430138784</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3767</wp:comment_id>
    <wp:comment_author><![CDATA[pozorvlak]]></wp:comment_author>
    <wp:comment_author_email>miles@assyrian.org.uk</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>5.56.172.8</wp:comment_author_IP>
    <wp:comment_date>2015-04-27 13:34:03</wp:comment_date>
    <wp:comment_date_gmt>2015-04-27 12:34:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I guess it's a slightly different problem - but the only thing affected is the termination condition of the nested loops, which now becomes "if [remaining total]/[number of coins remaining] is not between [smallest remaining denomination] and [largest remaining denomination], give up and backtrack".]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3764</wp:comment_parent>
    <wp:comment_user_id>43312762</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1430138044</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430138044.3270180225372314453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"pozorvlak";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>10004851432</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1430138044</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3761</wp:comment_id>
    <wp:comment_author><![CDATA[James Smith (@Floppy)]]></wp:comment_author>
    <wp:comment_author_email>Floppy@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/Floppy</wp:comment_author_url>
    <wp:comment_author_IP>86.160.80.173</wp:comment_author_IP>
    <wp:comment_date>2015-04-27 09:25:34</wp:comment_date>
    <wp:comment_date_gmt>2015-04-27 08:25:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Also; how does one buy computer software with coins in this day and age? :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1430123134</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430123134.661386966705322265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://pbs.twimg.com/profile_images/590123309473206272/oyrzs7PJ_normal.png</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>8314922</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1430123134</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3755</wp:comment_id>
    <wp:comment_author><![CDATA[Drew DeNardo]]></wp:comment_author>
    <wp:comment_author_email>drew@denardo.com</wp:comment_author_email>
    <wp:comment_author_url>https://plus.google.com/+DrewDeNardo</wp:comment_author_url>
    <wp:comment_author_IP>76.124.250.253</wp:comment_author_IP>
    <wp:comment_date>2015-04-27 01:43:48</wp:comment_date>
    <wp:comment_date_gmt>2015-04-27 00:43:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[33789 or 33798?  Which is it?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430095430.36501789093017578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1430095429</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>googleplus</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>https://lh6.googleusercontent.com/-WPSQRK4xOLM/AAAAAAAAAAI/AAAAAAAAGWI/m_8X1465Mr8/photo.jpg?sz=50</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>107805254211031194243</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1430095430</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3756</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>81.99.216.21</wp:comment_author_IP>
    <wp:comment_date>2015-04-27 07:14:46</wp:comment_date>
    <wp:comment_date_gmt>2015-04-27 06:14:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[It’s 33,798. Thanks for spotting the typo! I have fixed it.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3755</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1430115286</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430115286.577415943145751953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1430115286</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3765</wp:comment_id>
    <wp:comment_author><![CDATA[HTFB]]></wp:comment_author>
    <wp:comment_author_email>braun@mobquad.org</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>2.27.176.153</wp:comment_author_IP>
    <wp:comment_date>2015-04-27 12:08:51</wp:comment_date>
    <wp:comment_date_gmt>2015-04-27 11:08:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[One response on Twitter by @clevergz restates the problem more tractably. "There are five different values of coins" is literally true in the US, with 1c, 5c, 10c, 25c and $1 pieces. (Though he falsely asserts that there is a unique solution). 

In that case I'd expect a good 11-year-old to be able to find an answer by trying successive improvements on a first guess, and a fairly good 15-year-old to be able to present systematically how to do that, and thence how to find a large class of different answers. But only an exceptional 9-year-old would get anywhere just on paper. A smaller problem with actual coins to handle might be interesting at that age.

--

You can possibly improve your brute-force algorithm in some cases by considering common factors among subsets of the coins. For UK coinage, for example, I would expect* the Python quickcoin routine to run faster if the coins are enumerated in decreasing order of size. With the enumeration in increasing order, the routine spends a lot of time testing combinations of large coins even though the 1p and 2p pieces don't add to a multiple of 5p, and so on.

*OK, I already know it worked, and you found a 10% improvement.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1430132932</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>10002610207</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1430132932</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430132932.224330902099609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3764</wp:comment_id>
    <wp:comment_author><![CDATA[Robin Houston]]></wp:comment_author>
    <wp:comment_author_email>robin.houston@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bosker.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>86.187.127.171</wp:comment_author_IP>
    <wp:comment_date>2015-04-27 12:06:27</wp:comment_date>
    <wp:comment_date_gmt>2015-04-27 11:06:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Are you sure this is the same problem? I wonder if having a constraint on the number of coins makes it substantially different – but I haven’t thought about it properly, because I am in the middle of Real Work…]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3763</wp:comment_parent>
    <wp:comment_user_id>235913</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>10002548149</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1430132788</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1430132788</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430132788.29094600677490234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bosker";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3771</wp:comment_id>
    <wp:comment_author><![CDATA[pozorvlak]]></wp:comment_author>
    <wp:comment_author_email>miles@assyrian.org.uk</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>5.56.172.8</wp:comment_author_IP>
    <wp:comment_date>2015-04-27 16:14:45</wp:comment_date>
    <wp:comment_date_gmt>2015-04-27 15:14:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Gah! Commented in wrong place. Yes, your improved algorithm looks equivalent to mine.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3764</wp:comment_parent>
    <wp:comment_user_id>43312762</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1430147686</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>10009494240</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1430147686</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430147686.3016350269317626953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"pozorvlak";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>3975</title>
  <link>https://bosker.wordpress.com/2015/04/26/counting-coins/attachment/3975/</link>
  <pubDate>Sun, 26 Apr 2015 20:20:09 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">http://bosker.files.wordpress.com/2015/04/3975.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1410</wp:post_id>
  <wp:post_date>2015-04-26 21:20:09</wp:post_date>
  <wp:post_date_gmt>2015-04-26 20:20:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>3975</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1409</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bosker.files.wordpress.com/2015/04/3975.jpg</wp:attachment_url>
</item>
<item>
  <title>Magic squares of squares</title>
  <link>https://bosker.wordpress.com/?p=1451</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bosker</dc:creator>
  <guid isPermaLink="false">https://bosker.wordpress.com/?p=1451</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1451</wp:post_id>
  <wp:post_date>2016-06-10 18:21:09</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="chatter"><![CDATA[chatter]]></category>
</item>
  </channel>
</rss>
